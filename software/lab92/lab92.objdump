
lab92.elf:     file format elf32-littlenios2
lab92.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000230

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000e428 memsz 0x0000e428 flags r-x
    LOAD off    0x0000f448 vaddr 0x0000e448 paddr 0x0001038c align 2**12
         filesz 0x00001f44 memsz 0x00001f44 flags rw-
    LOAD off    0x000122d0 vaddr 0x000122d0 paddr 0x000122d0 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000dec8  00000230  00000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000350  0000e0f8  0000e0f8  0000f0f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001f44  0000e448  0001038c  0000f448  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  000122d0  000122d0  000122d0  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00012430  00012430  0001138c  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  09000000  09000000  0001138c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001138c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000b80  00000000  00000000  000113b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00016648  00000000  00000000  00011f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00006339  00000000  00000000  00028578  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000083d8  00000000  00000000  0002e8b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000182c  00000000  00000000  00036c8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003237  00000000  00000000  000384b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00015095  00000000  00000000  0003b6ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00050784  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001408  00000000  00000000  000507c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00054632  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00054635  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00054641  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00054642  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00054643  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00054647  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0005464b  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0005464f  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0005465a  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  00054665  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  00054670  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000032  00000000  00000000  00054678  2**0
                  CONTENTS, READONLY
 30 .jdi          00004f1e  00000000  00000000  000546aa  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     00052429  00000000  00000000  000595c8  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000230 l    d  .text	00000000 .text
0000e0f8 l    d  .rodata	00000000 .rodata
0000e448 l    d  .rwdata	00000000 .rwdata
000122d0 l    d  .bss	00000000 .bss
00012430 l    d  .sdram	00000000 .sdram
09000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lab92_bsp//obj/HAL/src/crt0.o
00000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00010344 l     O .rwdata	00000004 vga_ctrl
0000e448 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 palette_test.c
00010348 l     O .rwdata	00000004 vga_ctrl
0000e5b8 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
0001034c l     O .rwdata	00000004 vga_ctrl
0000e728 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000e18e l     O .rodata	00000010 zeroes.4389
0000e19e l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
00003050 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 impure.c
0000e898 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0000ecdc l     O .rwdata	00000020 lc_ctype_charset
0000ecbc l     O .rwdata	00000020 lc_message_charset
0000ecfc l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
0000e1d0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000e2f4 l     O .rodata	00000010 zeroes.4333
0000e304 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_load.c
0000be48 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00010364 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000c0d8 l     F .text	00000034 alt_dev_reg
0000f13c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000c3b4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0000c5c0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_close.c
0000ce7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0000cfb0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000cfdc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000d43c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000d59c l     F .text	0000003c alt_get_errno
0000d5d8 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00012304 g     O .bss	00000004 alt_instruction_exception_handler
00006354 g     F .text	00000074 _mprec_log10
00006440 g     F .text	0000008c __any_on
0000e1dc g     O .rodata	00000028 __mprec_tinytens
0000bf34 g     F .text	0000007c alt_main
00012330 g     O .bss	00000100 alt_irq
0001038c g       *ABS*	00000000 __flash_rwdata_start
0000a820 g     F .text	00000088 .hidden __eqdf2
00012430 g       *ABS*	00000000 __alt_heap_start
00004900 g     F .text	0000007c _setlocale_r
0000bfd4 g     F .text	00000024 __malloc_unlock
00000774 g     F .text	0000026c textVGAColorScreenSaver
000080f0 g     F .text	0000015c memmove
00005414 g     F .text	000000a8 _Balloc
0000a8a8 g     F .text	000000dc .hidden __gtdf2
0000da48 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
000122e8 g     O .bss	00000004 errno
00006840 g     F .text	000013a0 ___svfiprintf_internal_r
000122f0 g     O .bss	00000004 alt_argv
00018344 g       *ABS*	00000000 _gp
0000c0a8 g     F .text	00000030 usleep
0000043c g     F .text	00000050 textVGAColorClr
000101c4 g     O .rwdata	00000180 alt_fd_list
0000da6c g     F .text	00000090 alt_find_dev
000052cc g     F .text	00000148 memcpy
0000bc60 g     F .text	000000dc .hidden __floatsidf
0000d520 g     F .text	0000007c alt_io_redirect
0000a984 g     F .text	000000f4 .hidden __ltdf2
0000e0f8 g       *ABS*	00000000 __DTOR_END__
0000dcc8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
000064cc g     F .text	00000074 __fpclassifyd
000062b0 g     F .text	000000a4 __ratio
0000c7b8 g     F .text	0000021c altera_avalon_jtag_uart_read
09000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00000ad8 g     F .text	00000064 .hidden __udivsi3
0000e22c g     O .rodata	000000c8 __mprec_tens
0000497c g     F .text	0000000c __locale_charset
000122e4 g     O .bss	00000004 __malloc_top_pad
00010358 g     O .rwdata	00000004 __mb_cur_max
000049ac g     F .text	0000000c _localeconv_r
00005848 g     F .text	0000003c __i2b
00006540 g     F .text	00000054 _sbrk_r
00010378 g     O .rwdata	00000004 alt_max_fd
000122e0 g     O .bss	00000004 __malloc_max_sbrked_mem
000095a4 g     F .text	000008ac .hidden __adddf3
00006058 g     F .text	0000010c __b2d
00008fe0 g     F .text	000005c4 .hidden __umoddi3
00010350 g     O .rwdata	00000004 _global_impure_ptr
00008374 g     F .text	00000564 _realloc_r
00012430 g       *ABS*	00000000 __bss_end
0000d34c g     F .text	000000f0 alt_iic_isr_register
0000d940 g     F .text	00000108 alt_tick
000089e4 g     F .text	000005fc .hidden __udivdi3
0000e204 g     O .rodata	00000028 __mprec_bigtens
0000562c g     F .text	00000104 __s2b
0000bd3c g     F .text	000000a8 .hidden __floatunsidf
00005d98 g     F .text	00000060 __mcmp
0000d300 g     F .text	0000004c alt_ic_irq_enabled
0000d8a4 g     F .text	0000009c alt_alarm_stop
000122f8 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
0001019c g     O .rwdata	00000028 alt_dev_null
0000cf90 g     F .text	00000020 alt_dcache_flush_all
00005730 g     F .text	00000068 __hi0bits
0000bbe0 g     F .text	00000080 .hidden __fixdfsi
0001038c g       *ABS*	00000000 __ram_rwdata_end
00010370 g     O .rwdata	00000008 alt_dev_list
0000e448 g       *ABS*	00000000 __ram_rodata_end
0000a984 g     F .text	000000f4 .hidden __ledf2
00005b10 g     F .text	00000140 __pow5mult
000122d8 g     O .bss	00000004 __nlocale_changed
00000b3c g     F .text	00000058 .hidden __umodsi3
00012430 g       *ABS*	00000000 end
0000c2f4 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0000e0f8 g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0000bde4 g     F .text	00000064 .hidden __clzsi2
0000c9d4 g     F .text	00000224 altera_avalon_jtag_uart_write
000051e8 g     F .text	000000e4 memchr
00000c38 g     F .text	00000058 _sprintf_r
00007de0 g     F .text	00000310 _free_r
00004988 g     F .text	00000010 __locale_mb_cur_max
0000df44 g     F .text	00000180 __call_exitprocs
000122d4 g     O .bss	00000004 __mlocale_changed
0001035c g     O .rwdata	00000004 __malloc_sbrk_base
00000230 g     F .text	0000003c _start
000122fc g     O .bss	00000004 _alt_tick_rate
00000bd4 g     F .text	00000064 rand
00005c50 g     F .text	00000148 __lshift
00012300 g     O .bss	00000004 _alt_nticks
0000c144 g     F .text	0000004c alt_sys_init
00006670 g     F .text	000001d0 __ssprint_r
0000de2c g     F .text	00000118 __register_exitproc
00005884 g     F .text	0000028c __multiply
0000c660 g     F .text	00000068 altera_avalon_jtag_uart_close
00000b94 g     F .text	00000028 .hidden __mulsi3
0000e448 g       *ABS*	00000000 __ram_rwdata_start
0000e0f8 g       *ABS*	00000000 __ram_rodata_start
00012308 g     O .bss	00000028 __malloc_current_mallinfo
00006164 g     F .text	0000014c __d2b
0000c190 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000dc04 g     F .text	000000c4 alt_get_fd
0000cd24 g     F .text	00000158 alt_busy_sleep
0000ddb0 g     F .text	0000007c memcmp
0000c250 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00012430 g       *ABS*	00000000 __alt_stack_base
0000c2a0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00009e50 g     F .text	000009d0 .hidden __divdf3
000063c8 g     F .text	00000078 __copybits
0000ed34 g     O .rwdata	00000408 __malloc_av_
0000aa78 g     F .text	0000086c .hidden __muldf3
0000dafc g     F .text	00000108 alt_find_file
0000d018 g     F .text	000000a4 alt_dev_llist_insert
0000bfb0 g     F .text	00000024 __malloc_lock
0000bff8 g     F .text	000000b0 sbrk
00000d94 g     F .text	000022bc ___svfprintf_internal_r
00007be0 g     F .text	000000dc _calloc_r
000122d0 g       *ABS*	00000000 __bss_start
0000824c g     F .text	00000128 memset
0000026c g     F .text	0000001c main
000122f4 g     O .bss	00000004 alt_envp
000122dc g     O .bss	00000004 __malloc_max_total_mem
0000c1f0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00000bbc g     F .text	00000018 srand
08000000 g       *ABS*	00000000 __alt_heap_limit
00003278 g     F .text	00001688 _dtoa_r
000049dc g     F .text	0000080c _malloc_r
0001037c g     O .rwdata	00000004 alt_errno
000009e0 g     F .text	00000084 .hidden __divsi3
0000059c g     F .text	000001d8 setColorPalette
00007cbc g     F .text	00000124 _malloc_trim_r
0000e0f8 g       *ABS*	00000000 __CTOR_END__
00006594 g     F .text	000000dc strcmp
0000e0f8 g       *ABS*	00000000 __flash_rodata_start
0000e0f8 g       *ABS*	00000000 __DTOR_LIST__
0000a820 g     F .text	00000088 .hidden __nedf2
0000c10c g     F .text	00000038 alt_irq_init
0000d820 g     F .text	00000084 alt_release_fd
00000c90 g     F .text	0000006c sprintf
0000e314 g     O .rodata	00000100 .hidden __clz_tab
000122d0 g     O .bss	00000004 _PathLocale
0000dd64 g     F .text	00000014 atexit
000049b8 g     F .text	00000018 setlocale
00010354 g     O .rwdata	00000004 _impure_ptr
000122ec g     O .bss	00000004 alt_argc
0000d11c g     F .text	00000060 _do_dtors
000049a4 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00005ff4 g     F .text	00000064 __ulp
00010368 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
000049d0 g     F .text	0000000c localeconv
0000d19c g     F .text	00000050 alt_ic_isr_register
0001038c g       *ABS*	00000000 _edata
00012430 g       *ABS*	00000000 _end
00000230 g       *ABS*	00000000 __ram_exceptions_end
0000c6c8 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000048c g     F .text	00000110 textVGADrawColorText
0000d274 g     F .text	0000008c alt_ic_irq_disable
00010360 g     O .rwdata	00000004 __malloc_trim_threshold
00004998 g     F .text	0000000c __locale_msgcharset
0000dd78 g     F .text	00000038 exit
00005df8 g     F .text	000001fc __mdiff
00000a64 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00000000 g       *ABS*	00000000 __alt_mem_sdram
0000e0c4 g     F .text	00000034 _exit
0000cbf8 g     F .text	0000012c alt_alarm_start
000088d8 g     F .text	0000010c .hidden __muldi3
00000cfc g     F .text	00000098 strlen
0000d6c4 g     F .text	0000015c open
0000a8a8 g     F .text	000000dc .hidden __gedf2
0000d17c g     F .text	00000020 alt_icache_flush_all
00010380 g     O .rwdata	00000004 alt_priority_mask
0000d1ec g     F .text	00000088 alt_ic_irq_enable
0000b2e4 g     F .text	000008fc .hidden __subdf3
00005798 g     F .text	000000b0 __lo0bits
00010384 g     O .rwdata	00000008 alt_alarm_list
0000d0bc g     F .text	00000060 _do_ctors
0000ceb8 g     F .text	000000d8 close
00000288 g     F .text	000001b4 paletteTest
0000beb0 g     F .text	00000084 alt_load
000054e4 g     F .text	00000148 __multadd
000054bc g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408c14 	ori	at,at,560
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	1088cc04 	addi	r2,r2,9008
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	1088cc04 	addi	r2,r2,9008
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_mem_onchip_memory2_0+0xf700012c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_mem_onchip_memory2_0+0xf7000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a7f017 	ldw	r2,-24640(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a7f017 	ldw	r2,-24640(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

00000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     230:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     238:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     23c:	d6a0d114 	ori	gp,gp,33604
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     240:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     244:	1088b414 	ori	r2,r2,8912

    movhi r3, %hi(__bss_end)
     248:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     24c:	18c90c14 	ori	r3,r3,9264

    beq r2, r3, 1f
     250:	10c00326 	beq	r2,r3,260 <_start+0x30>

0:
    stw zero, (r2)
     254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     25c:	10fffd36 	bltu	r2,r3,254 <__alt_mem_onchip_memory2_0+0xf7000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     260:	000beb00 	call	beb0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     264:	000bf340 	call	bf34 <alt_main>

00000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     268:	003fff06 	br	268 <__alt_mem_onchip_memory2_0+0xf7000268>

0000026c <main>:
#include <stdlib.h>
#include <string.h>
#include <alt_types.h>
#include "text_mode_vga_color.h"
#include "palette_test.h"
void main() {
     26c:	defffe04 	addi	sp,sp,-8
     270:	dfc00115 	stw	ra,4(sp)
     274:	df000015 	stw	fp,0(sp)
     278:	d839883a 	mov	fp,sp
	while(1==1) {
		paletteTest();
     27c:	00002880 	call	288 <paletteTest>
		textVGAColorScreenSaver();
     280:	00007740 	call	774 <textVGAColorScreenSaver>
}
     284:	003ffd06 	br	27c <__alt_mem_onchip_memory2_0+0xf700027c>

00000288 <paletteTest>:

#include "text_mode_vga_color.h"


void paletteTest()
{
     288:	defffa04 	addi	sp,sp,-24
     28c:	dfc00515 	stw	ra,20(sp)
     290:	df000415 	stw	fp,16(sp)
     294:	dc400315 	stw	r17,12(sp)
     298:	dc000215 	stw	r16,8(sp)
     29c:	df000404 	addi	fp,sp,16
	textVGAColorClr();
     2a0:	000043c0 	call	43c <textVGAColorClr>
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);
     2a4:	00800044 	movi	r2,1
     2a8:	d8800015 	stw	r2,0(sp)
     2ac:	000f883a 	mov	r7,zero
     2b0:	000d883a 	mov	r6,zero
     2b4:	000b883a 	mov	r5,zero
     2b8:	01000074 	movhi	r4,1
     2bc:	21383e04 	addi	r4,r4,-7944
     2c0:	000048c0 	call	48c <textVGADrawColorText>

	for (int i = 0; i < 100; i ++)
     2c4:	e03ffd15 	stw	zero,-12(fp)
     2c8:	00005106 	br	410 <paletteTest+0x188>
	{
		usleep (20000);
     2cc:	01138804 	movi	r4,20000
     2d0:	000c0a80 	call	c0a8 <usleep>
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
     2d4:	0000bd40 	call	bd4 <rand>
     2d8:	1007883a 	mov	r3,r2
     2dc:	00a00034 	movhi	r2,32768
     2e0:	108003c4 	addi	r2,r2,15
     2e4:	1884703a 	and	r2,r3,r2
     2e8:	1000040e 	bge	r2,zero,2fc <paletteTest+0x74>
     2ec:	10bfffc4 	addi	r2,r2,-1
     2f0:	00fffc04 	movi	r3,-16
     2f4:	10c4b03a 	or	r2,r2,r3
     2f8:	10800044 	addi	r2,r2,1
     2fc:	14003fcc 	andi	r16,r2,255
     300:	0000bd40 	call	bd4 <rand>
     304:	1007883a 	mov	r3,r2
     308:	00a00034 	movhi	r2,32768
     30c:	108003c4 	addi	r2,r2,15
     310:	1884703a 	and	r2,r3,r2
     314:	1000040e 	bge	r2,zero,328 <paletteTest+0xa0>
     318:	10bfffc4 	addi	r2,r2,-1
     31c:	00fffc04 	movi	r3,-16
     320:	10c4b03a 	or	r2,r2,r3
     324:	10800044 	addi	r2,r2,1
     328:	14403fcc 	andi	r17,r2,255
     32c:	0000bd40 	call	bd4 <rand>
     330:	1007883a 	mov	r3,r2
     334:	00a00034 	movhi	r2,32768
     338:	108003c4 	addi	r2,r2,15
     33c:	1884703a 	and	r2,r3,r2
     340:	1000040e 	bge	r2,zero,354 <paletteTest+0xcc>
     344:	10bfffc4 	addi	r2,r2,-1
     348:	00fffc04 	movi	r3,-16
     34c:	10c4b03a 	or	r2,r2,r3
     350:	10800044 	addi	r2,r2,1
     354:	10803fcc 	andi	r2,r2,255
     358:	100f883a 	mov	r7,r2
     35c:	880d883a 	mov	r6,r17
     360:	800b883a 	mov	r5,r16
     364:	0009883a 	mov	r4,zero
     368:	000059c0 	call	59c <setColorPalette>
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
     36c:	0000bd40 	call	bd4 <rand>
     370:	1007883a 	mov	r3,r2
     374:	00a00034 	movhi	r2,32768
     378:	108003c4 	addi	r2,r2,15
     37c:	1884703a 	and	r2,r3,r2
     380:	1000040e 	bge	r2,zero,394 <paletteTest+0x10c>
     384:	10bfffc4 	addi	r2,r2,-1
     388:	00fffc04 	movi	r3,-16
     38c:	10c4b03a 	or	r2,r2,r3
     390:	10800044 	addi	r2,r2,1
     394:	14003fcc 	andi	r16,r2,255
     398:	0000bd40 	call	bd4 <rand>
     39c:	1007883a 	mov	r3,r2
     3a0:	00a00034 	movhi	r2,32768
     3a4:	108003c4 	addi	r2,r2,15
     3a8:	1884703a 	and	r2,r3,r2
     3ac:	1000040e 	bge	r2,zero,3c0 <paletteTest+0x138>
     3b0:	10bfffc4 	addi	r2,r2,-1
     3b4:	00fffc04 	movi	r3,-16
     3b8:	10c4b03a 	or	r2,r2,r3
     3bc:	10800044 	addi	r2,r2,1
     3c0:	14403fcc 	andi	r17,r2,255
     3c4:	0000bd40 	call	bd4 <rand>
     3c8:	1007883a 	mov	r3,r2
     3cc:	00a00034 	movhi	r2,32768
     3d0:	108003c4 	addi	r2,r2,15
     3d4:	1884703a 	and	r2,r3,r2
     3d8:	1000040e 	bge	r2,zero,3ec <paletteTest+0x164>
     3dc:	10bfffc4 	addi	r2,r2,-1
     3e0:	00fffc04 	movi	r3,-16
     3e4:	10c4b03a 	or	r2,r2,r3
     3e8:	10800044 	addi	r2,r2,1
     3ec:	10803fcc 	andi	r2,r2,255
     3f0:	100f883a 	mov	r7,r2
     3f4:	880d883a 	mov	r6,r17
     3f8:	800b883a 	mov	r5,r16
     3fc:	01000044 	movi	r4,1
     400:	000059c0 	call	59c <setColorPalette>
void paletteTest()
{
	textVGAColorClr();
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);

	for (int i = 0; i < 100; i ++)
     404:	e0bffd17 	ldw	r2,-12(fp)
     408:	10800044 	addi	r2,r2,1
     40c:	e0bffd15 	stw	r2,-12(fp)
     410:	e0bffd17 	ldw	r2,-12(fp)
     414:	10801910 	cmplti	r2,r2,100
     418:	103fac1e 	bne	r2,zero,2cc <__alt_mem_onchip_memory2_0+0xf70002cc>
		usleep (20000);
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
	}

}
     41c:	0001883a 	nop
     420:	e6fffe04 	addi	sp,fp,-8
     424:	dfc00317 	ldw	ra,12(sp)
     428:	df000217 	ldw	fp,8(sp)
     42c:	dc400117 	ldw	r17,4(sp)
     430:	dc000017 	ldw	r16,0(sp)
     434:	dec00404 	addi	sp,sp,16
     438:	f800283a 	ret

0000043c <textVGAColorClr>:
#include <string.h>
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
     43c:	defffe04 	addi	sp,sp,-8
     440:	df000115 	stw	fp,4(sp)
     444:	df000104 	addi	fp,sp,4
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
     448:	e03fff15 	stw	zero,-4(fp)
     44c:	00000706 	br	46c <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
     450:	d0e00217 	ldw	r3,-32760(gp)
     454:	e0bfff17 	ldw	r2,-4(fp)
     458:	1885883a 	add	r2,r3,r2
     45c:	10000005 	stb	zero,0(r2)
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
     460:	e0bfff17 	ldw	r2,-4(fp)
     464:	10800044 	addi	r2,r2,1
     468:	e0bfff15 	stw	r2,-4(fp)
     46c:	e0bfff17 	ldw	r2,-4(fp)
     470:	1084b010 	cmplti	r2,r2,4800
     474:	103ff61e 	bne	r2,zero,450 <__alt_mem_onchip_memory2_0+0xf7000450>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}

}
     478:	0001883a 	nop
     47c:	e037883a 	mov	sp,fp
     480:	df000017 	ldw	fp,0(sp)
     484:	dec00104 	addi	sp,sp,4
     488:	f800283a 	ret

0000048c <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
     48c:	defff704 	addi	sp,sp,-36
     490:	dfc00815 	stw	ra,32(sp)
     494:	df000715 	stw	fp,28(sp)
     498:	dc000615 	stw	r16,24(sp)
     49c:	df000704 	addi	fp,sp,28
     4a0:	e13ffa15 	stw	r4,-24(fp)
     4a4:	e17ffb15 	stw	r5,-20(fp)
     4a8:	e1bffc15 	stw	r6,-16(fp)
     4ac:	3807883a 	mov	r3,r7
     4b0:	e0800217 	ldw	r2,8(fp)
     4b4:	e0fffd05 	stb	r3,-12(fp)
     4b8:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
     4bc:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
     4c0:	00002706 	br	560 <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
     4c4:	d4200217 	ldw	r16,-32760(gp)
     4c8:	01401404 	movi	r5,80
     4cc:	e13ffc17 	ldw	r4,-16(fp)
     4d0:	0000b940 	call	b94 <__mulsi3>
     4d4:	1007883a 	mov	r3,r2
     4d8:	e0bffb17 	ldw	r2,-20(fp)
     4dc:	1887883a 	add	r3,r3,r2
     4e0:	e0bff917 	ldw	r2,-28(fp)
     4e4:	1885883a 	add	r2,r3,r2
     4e8:	1085883a 	add	r2,r2,r2
     4ec:	1009883a 	mov	r4,r2
     4f0:	e0bffe03 	ldbu	r2,-8(fp)
     4f4:	1004913a 	slli	r2,r2,4
     4f8:	1007883a 	mov	r3,r2
     4fc:	e0bffd03 	ldbu	r2,-12(fp)
     500:	1884b03a 	or	r2,r3,r2
     504:	1007883a 	mov	r3,r2
     508:	8105883a 	add	r2,r16,r4
     50c:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
     510:	d4200217 	ldw	r16,-32760(gp)
     514:	01401404 	movi	r5,80
     518:	e13ffc17 	ldw	r4,-16(fp)
     51c:	0000b940 	call	b94 <__mulsi3>
     520:	1007883a 	mov	r3,r2
     524:	e0bffb17 	ldw	r2,-20(fp)
     528:	1887883a 	add	r3,r3,r2
     52c:	e0bff917 	ldw	r2,-28(fp)
     530:	1885883a 	add	r2,r3,r2
     534:	1085883a 	add	r2,r2,r2
     538:	10800044 	addi	r2,r2,1
     53c:	e0fff917 	ldw	r3,-28(fp)
     540:	e13ffa17 	ldw	r4,-24(fp)
     544:	20c7883a 	add	r3,r4,r3
     548:	18c00003 	ldbu	r3,0(r3)
     54c:	8085883a 	add	r2,r16,r2
     550:	10c00005 	stb	r3,0(r2)
		i++;
     554:	e0bff917 	ldw	r2,-28(fp)
     558:	10800044 	addi	r2,r2,1
     55c:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
     560:	e0bff917 	ldw	r2,-28(fp)
     564:	e0fffa17 	ldw	r3,-24(fp)
     568:	1885883a 	add	r2,r3,r2
     56c:	10800003 	ldbu	r2,0(r2)
     570:	10803fcc 	andi	r2,r2,255
     574:	1080201c 	xori	r2,r2,128
     578:	10bfe004 	addi	r2,r2,-128
     57c:	103fd11e 	bne	r2,zero,4c4 <__alt_mem_onchip_memory2_0+0xf70004c4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
     580:	0001883a 	nop
     584:	e6ffff04 	addi	sp,fp,-4
     588:	dfc00217 	ldw	ra,8(sp)
     58c:	df000117 	ldw	fp,4(sp)
     590:	dc000017 	ldw	r16,0(sp)
     594:	dec00304 	addi	sp,sp,12
     598:	f800283a 	ret

0000059c <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
     59c:	defffb04 	addi	sp,sp,-20
     5a0:	df000415 	stw	fp,16(sp)
     5a4:	df000404 	addi	fp,sp,16
     5a8:	2011883a 	mov	r8,r4
     5ac:	2809883a 	mov	r4,r5
     5b0:	3007883a 	mov	r3,r6
     5b4:	3805883a 	mov	r2,r7
     5b8:	e23ffc05 	stb	r8,-16(fp)
     5bc:	e13ffd05 	stb	r4,-12(fp)
     5c0:	e0fffe05 	stb	r3,-8(fp)
     5c4:	e0bfff05 	stb	r2,-4(fp)
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	if (color % 2) {
     5c8:	e0bffc03 	ldbu	r2,-16(fp)
     5cc:	1080004c 	andi	r2,r2,1
     5d0:	10803fcc 	andi	r2,r2,255
     5d4:	10003226 	beq	r2,zero,6a0 <setColorPalette+0x104>
		vga_ctrl -> COLOR[color / 2] = (~(0xFFF << 13)) & (vga_ctrl -> COLOR[color / 2]);
     5d8:	d1200217 	ldw	r4,-32760(gp)
     5dc:	e0bffc03 	ldbu	r2,-16(fp)
     5e0:	1004d07a 	srli	r2,r2,1
     5e4:	11403fcc 	andi	r5,r2,255
     5e8:	d0e00217 	ldw	r3,-32760(gp)
     5ec:	e0bffc03 	ldbu	r2,-16(fp)
     5f0:	1004d07a 	srli	r2,r2,1
     5f4:	10803fcc 	andi	r2,r2,255
     5f8:	10820004 	addi	r2,r2,2048
     5fc:	1085883a 	add	r2,r2,r2
     600:	1085883a 	add	r2,r2,r2
     604:	1885883a 	add	r2,r3,r2
     608:	10c00017 	ldw	r3,0(r2)
     60c:	00bf8034 	movhi	r2,65024
     610:	1087ffc4 	addi	r2,r2,8191
     614:	1886703a 	and	r3,r3,r2
     618:	28820004 	addi	r2,r5,2048
     61c:	1085883a 	add	r2,r2,r2
     620:	1085883a 	add	r2,r2,r2
     624:	2085883a 	add	r2,r4,r2
     628:	10c00015 	stw	r3,0(r2)
		vga_ctrl -> COLOR[color / 2] = (red << 21 | green << 17 | blue << 13) | (vga_ctrl -> COLOR[color / 2]);
     62c:	d1200217 	ldw	r4,-32760(gp)
     630:	e0bffc03 	ldbu	r2,-16(fp)
     634:	1004d07a 	srli	r2,r2,1
     638:	11403fcc 	andi	r5,r2,255
     63c:	e0bffd03 	ldbu	r2,-12(fp)
     640:	1006957a 	slli	r3,r2,21
     644:	e0bffe03 	ldbu	r2,-8(fp)
     648:	1004947a 	slli	r2,r2,17
     64c:	1886b03a 	or	r3,r3,r2
     650:	e0bfff03 	ldbu	r2,-4(fp)
     654:	1004937a 	slli	r2,r2,13
     658:	1884b03a 	or	r2,r3,r2
     65c:	100d883a 	mov	r6,r2
     660:	d0e00217 	ldw	r3,-32760(gp)
     664:	e0bffc03 	ldbu	r2,-16(fp)
     668:	1004d07a 	srli	r2,r2,1
     66c:	10803fcc 	andi	r2,r2,255
     670:	10820004 	addi	r2,r2,2048
     674:	1085883a 	add	r2,r2,r2
     678:	1085883a 	add	r2,r2,r2
     67c:	1885883a 	add	r2,r3,r2
     680:	10800017 	ldw	r2,0(r2)
     684:	3086b03a 	or	r3,r6,r2
     688:	28820004 	addi	r2,r5,2048
     68c:	1085883a 	add	r2,r2,r2
     690:	1085883a 	add	r2,r2,r2
     694:	2085883a 	add	r2,r4,r2
     698:	10c00015 	stw	r3,0(r2)
	}
	else {
		vga_ctrl -> COLOR[color / 2] = (~(0xFFF << 1)) & (vga_ctrl -> COLOR[color / 2]);
		vga_ctrl -> COLOR[color / 2] = (red << 9 | green << 5 | blue << 1) | (vga_ctrl -> COLOR[color / 2]);
	}
}
     69c:	00003006 	br	760 <setColorPalette+0x1c4>
	if (color % 2) {
		vga_ctrl -> COLOR[color / 2] = (~(0xFFF << 13)) & (vga_ctrl -> COLOR[color / 2]);
		vga_ctrl -> COLOR[color / 2] = (red << 21 | green << 17 | blue << 13) | (vga_ctrl -> COLOR[color / 2]);
	}
	else {
		vga_ctrl -> COLOR[color / 2] = (~(0xFFF << 1)) & (vga_ctrl -> COLOR[color / 2]);
     6a0:	d1200217 	ldw	r4,-32760(gp)
     6a4:	e0bffc03 	ldbu	r2,-16(fp)
     6a8:	1004d07a 	srli	r2,r2,1
     6ac:	11403fcc 	andi	r5,r2,255
     6b0:	d0e00217 	ldw	r3,-32760(gp)
     6b4:	e0bffc03 	ldbu	r2,-16(fp)
     6b8:	1004d07a 	srli	r2,r2,1
     6bc:	10803fcc 	andi	r2,r2,255
     6c0:	10820004 	addi	r2,r2,2048
     6c4:	1085883a 	add	r2,r2,r2
     6c8:	1085883a 	add	r2,r2,r2
     6cc:	1885883a 	add	r2,r3,r2
     6d0:	10c00017 	ldw	r3,0(r2)
     6d4:	00b80044 	movi	r2,-8191
     6d8:	1886703a 	and	r3,r3,r2
     6dc:	28820004 	addi	r2,r5,2048
     6e0:	1085883a 	add	r2,r2,r2
     6e4:	1085883a 	add	r2,r2,r2
     6e8:	2085883a 	add	r2,r4,r2
     6ec:	10c00015 	stw	r3,0(r2)
		vga_ctrl -> COLOR[color / 2] = (red << 9 | green << 5 | blue << 1) | (vga_ctrl -> COLOR[color / 2]);
     6f0:	d1200217 	ldw	r4,-32760(gp)
     6f4:	e0bffc03 	ldbu	r2,-16(fp)
     6f8:	1004d07a 	srli	r2,r2,1
     6fc:	11403fcc 	andi	r5,r2,255
     700:	e0bffd03 	ldbu	r2,-12(fp)
     704:	1006927a 	slli	r3,r2,9
     708:	e0bffe03 	ldbu	r2,-8(fp)
     70c:	1004917a 	slli	r2,r2,5
     710:	1886b03a 	or	r3,r3,r2
     714:	e0bfff03 	ldbu	r2,-4(fp)
     718:	1085883a 	add	r2,r2,r2
     71c:	1884b03a 	or	r2,r3,r2
     720:	100d883a 	mov	r6,r2
     724:	d0e00217 	ldw	r3,-32760(gp)
     728:	e0bffc03 	ldbu	r2,-16(fp)
     72c:	1004d07a 	srli	r2,r2,1
     730:	10803fcc 	andi	r2,r2,255
     734:	10820004 	addi	r2,r2,2048
     738:	1085883a 	add	r2,r2,r2
     73c:	1085883a 	add	r2,r2,r2
     740:	1885883a 	add	r2,r3,r2
     744:	10800017 	ldw	r2,0(r2)
     748:	3086b03a 	or	r3,r6,r2
     74c:	28820004 	addi	r2,r5,2048
     750:	1085883a 	add	r2,r2,r2
     754:	1085883a 	add	r2,r2,r2
     758:	2085883a 	add	r2,r4,r2
     75c:	10c00015 	stw	r3,0(r2)
	}
}
     760:	0001883a 	nop
     764:	e037883a 	mov	sp,fp
     768:	df000017 	ldw	fp,0(sp)
     76c:	dec00104 	addi	sp,sp,4
     770:	f800283a 	ret

00000774 <textVGAColorScreenSaver>:


void textVGAColorScreenSaver()
{
     774:	deffe004 	addi	sp,sp,-128
     778:	dfc01f15 	stw	ra,124(sp)
     77c:	df001e15 	stw	fp,120(sp)
     780:	dcc01d15 	stw	r19,116(sp)
     784:	dc801c15 	stw	r18,112(sp)
     788:	dc401b15 	stw	r17,108(sp)
     78c:	dc001a15 	stw	r16,104(sp)
     790:	df001e04 	addi	fp,sp,120
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
     794:	000043c0 	call	43c <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
     798:	e03fe515 	stw	zero,-108(fp)
     79c:	00002806 	br	840 <textVGAColorScreenSaver+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
     7a0:	e0bfe517 	ldw	r2,-108(fp)
     7a4:	14403fcc 	andi	r17,r2,255
     7a8:	04000074 	movhi	r16,1
     7ac:	8439ca04 	addi	r16,r16,-6360
     7b0:	e0bfe517 	ldw	r2,-108(fp)
     7b4:	014005c4 	movi	r5,23
     7b8:	1009883a 	mov	r4,r2
     7bc:	0000b940 	call	b94 <__mulsi3>
     7c0:	8085883a 	add	r2,r16,r2
     7c4:	10800504 	addi	r2,r2,20
     7c8:	10800003 	ldbu	r2,0(r2)
     7cc:	14803fcc 	andi	r18,r2,255
     7d0:	04000074 	movhi	r16,1
     7d4:	8439ca04 	addi	r16,r16,-6360
     7d8:	e0bfe517 	ldw	r2,-108(fp)
     7dc:	014005c4 	movi	r5,23
     7e0:	1009883a 	mov	r4,r2
     7e4:	0000b940 	call	b94 <__mulsi3>
     7e8:	8085883a 	add	r2,r16,r2
     7ec:	10800544 	addi	r2,r2,21
     7f0:	10800003 	ldbu	r2,0(r2)
     7f4:	14c03fcc 	andi	r19,r2,255
     7f8:	04000074 	movhi	r16,1
     7fc:	8439ca04 	addi	r16,r16,-6360
     800:	e0bfe517 	ldw	r2,-108(fp)
     804:	014005c4 	movi	r5,23
     808:	1009883a 	mov	r4,r2
     80c:	0000b940 	call	b94 <__mulsi3>
     810:	8085883a 	add	r2,r16,r2
     814:	10800584 	addi	r2,r2,22
     818:	10800003 	ldbu	r2,0(r2)
     81c:	10803fcc 	andi	r2,r2,255
     820:	100f883a 	mov	r7,r2
     824:	980d883a 	mov	r6,r19
     828:	900b883a 	mov	r5,r18
     82c:	8809883a 	mov	r4,r17
     830:	000059c0 	call	59c <setColorPalette>
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
     834:	e0bfe517 	ldw	r2,-108(fp)
     838:	10800044 	addi	r2,r2,1
     83c:	e0bfe515 	stw	r2,-108(fp)
     840:	e0bfe517 	ldw	r2,-108(fp)
     844:	10800410 	cmplti	r2,r2,16
     848:	103fd51e 	bne	r2,zero,7a0 <__alt_mem_onchip_memory2_0+0xf70007a0>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	while (1)
	{
		fg = rand() % 16;
     84c:	0000bd40 	call	bd4 <rand>
     850:	1007883a 	mov	r3,r2
     854:	00a00034 	movhi	r2,32768
     858:	108003c4 	addi	r2,r2,15
     85c:	1884703a 	and	r2,r3,r2
     860:	1000040e 	bge	r2,zero,874 <textVGAColorScreenSaver+0x100>
     864:	10bfffc4 	addi	r2,r2,-1
     868:	00fffc04 	movi	r3,-16
     86c:	10c4b03a 	or	r2,r2,r3
     870:	10800044 	addi	r2,r2,1
     874:	e0bfe315 	stw	r2,-116(fp)
		bg = rand() % 16;
     878:	0000bd40 	call	bd4 <rand>
     87c:	1007883a 	mov	r3,r2
     880:	00a00034 	movhi	r2,32768
     884:	108003c4 	addi	r2,r2,15
     888:	1884703a 	and	r2,r3,r2
     88c:	1000040e 	bge	r2,zero,8a0 <textVGAColorScreenSaver+0x12c>
     890:	10bfffc4 	addi	r2,r2,-1
     894:	00fffc04 	movi	r3,-16
     898:	10c4b03a 	or	r2,r2,r3
     89c:	10800044 	addi	r2,r2,1
     8a0:	e0bfe415 	stw	r2,-112(fp)
		while (fg == bg)
     8a4:	00001606 	br	900 <textVGAColorScreenSaver+0x18c>
		{
			fg = rand() % 16;
     8a8:	0000bd40 	call	bd4 <rand>
     8ac:	1007883a 	mov	r3,r2
     8b0:	00a00034 	movhi	r2,32768
     8b4:	108003c4 	addi	r2,r2,15
     8b8:	1884703a 	and	r2,r3,r2
     8bc:	1000040e 	bge	r2,zero,8d0 <textVGAColorScreenSaver+0x15c>
     8c0:	10bfffc4 	addi	r2,r2,-1
     8c4:	00fffc04 	movi	r3,-16
     8c8:	10c4b03a 	or	r2,r2,r3
     8cc:	10800044 	addi	r2,r2,1
     8d0:	e0bfe315 	stw	r2,-116(fp)
			bg = rand() % 16;
     8d4:	0000bd40 	call	bd4 <rand>
     8d8:	1007883a 	mov	r3,r2
     8dc:	00a00034 	movhi	r2,32768
     8e0:	108003c4 	addi	r2,r2,15
     8e4:	1884703a 	and	r2,r3,r2
     8e8:	1000040e 	bge	r2,zero,8fc <textVGAColorScreenSaver+0x188>
     8ec:	10bfffc4 	addi	r2,r2,-1
     8f0:	00fffc04 	movi	r3,-16
     8f4:	10c4b03a 	or	r2,r2,r3
     8f8:	10800044 	addi	r2,r2,1
     8fc:	e0bfe415 	stw	r2,-112(fp)
	}
	while (1)
	{
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
     900:	e0ffe317 	ldw	r3,-116(fp)
     904:	e0bfe417 	ldw	r2,-112(fp)
     908:	18bfe726 	beq	r3,r2,8a8 <__alt_mem_onchip_memory2_0+0xf70008a8>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
     90c:	014005c4 	movi	r5,23
     910:	e13fe317 	ldw	r4,-116(fp)
     914:	0000b940 	call	b94 <__mulsi3>
     918:	1007883a 	mov	r3,r2
     91c:	00800074 	movhi	r2,1
     920:	10b9ca04 	addi	r2,r2,-6360
     924:	18a1883a 	add	r16,r3,r2
     928:	014005c4 	movi	r5,23
     92c:	e13fe417 	ldw	r4,-112(fp)
     930:	0000b940 	call	b94 <__mulsi3>
     934:	1007883a 	mov	r3,r2
     938:	00800074 	movhi	r2,1
     93c:	10b9ca04 	addi	r2,r2,-6360
     940:	1887883a 	add	r3,r3,r2
     944:	e0bfe804 	addi	r2,fp,-96
     948:	180f883a 	mov	r7,r3
     94c:	800d883a 	mov	r6,r16
     950:	01400074 	movhi	r5,1
     954:	29784a04 	addi	r5,r5,-7896
     958:	1009883a 	mov	r4,r2
     95c:	0000c900 	call	c90 <sprintf>
		x = rand() % (80-strlen(color_string));
     960:	0000bd40 	call	bd4 <rand>
     964:	1021883a 	mov	r16,r2
     968:	e0bfe804 	addi	r2,fp,-96
     96c:	1009883a 	mov	r4,r2
     970:	0000cfc0 	call	cfc <strlen>
     974:	1007883a 	mov	r3,r2
     978:	00801404 	movi	r2,80
     97c:	10c5c83a 	sub	r2,r2,r3
     980:	100b883a 	mov	r5,r2
     984:	8009883a 	mov	r4,r16
     988:	0000b3c0 	call	b3c <__umodsi3>
     98c:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 30;
     990:	0000bd40 	call	bd4 <rand>
     994:	01400784 	movi	r5,30
     998:	1009883a 	mov	r4,r2
     99c:	0000a640 	call	a64 <__modsi3>
     9a0:	e0bfe715 	stw	r2,-100(fp)
		textVGADrawColorText (color_string, x, y, bg, fg);
     9a4:	e0bfe417 	ldw	r2,-112(fp)
     9a8:	11003fcc 	andi	r4,r2,255
     9ac:	e0bfe317 	ldw	r2,-116(fp)
     9b0:	10803fcc 	andi	r2,r2,255
     9b4:	e0ffe804 	addi	r3,fp,-96
     9b8:	d8800015 	stw	r2,0(sp)
     9bc:	200f883a 	mov	r7,r4
     9c0:	e1bfe717 	ldw	r6,-100(fp)
     9c4:	e17fe617 	ldw	r5,-104(fp)
     9c8:	1809883a 	mov	r4,r3
     9cc:	000048c0 	call	48c <textVGADrawColorText>
		usleep (100000);
     9d0:	010000b4 	movhi	r4,2
     9d4:	2121a804 	addi	r4,r4,-31072
     9d8:	000c0a80 	call	c0a8 <usleep>
	}
     9dc:	003f9b06 	br	84c <__alt_mem_onchip_memory2_0+0xf700084c>

000009e0 <__divsi3>:
     9e0:	20001b16 	blt	r4,zero,a50 <__divsi3+0x70>
     9e4:	000f883a 	mov	r7,zero
     9e8:	28001616 	blt	r5,zero,a44 <__divsi3+0x64>
     9ec:	200d883a 	mov	r6,r4
     9f0:	29001a2e 	bgeu	r5,r4,a5c <__divsi3+0x7c>
     9f4:	00800804 	movi	r2,32
     9f8:	00c00044 	movi	r3,1
     9fc:	00000106 	br	a04 <__divsi3+0x24>
     a00:	10000d26 	beq	r2,zero,a38 <__divsi3+0x58>
     a04:	294b883a 	add	r5,r5,r5
     a08:	10bfffc4 	addi	r2,r2,-1
     a0c:	18c7883a 	add	r3,r3,r3
     a10:	293ffb36 	bltu	r5,r4,a00 <__alt_mem_onchip_memory2_0+0xf7000a00>
     a14:	0005883a 	mov	r2,zero
     a18:	18000726 	beq	r3,zero,a38 <__divsi3+0x58>
     a1c:	0005883a 	mov	r2,zero
     a20:	31400236 	bltu	r6,r5,a2c <__divsi3+0x4c>
     a24:	314dc83a 	sub	r6,r6,r5
     a28:	10c4b03a 	or	r2,r2,r3
     a2c:	1806d07a 	srli	r3,r3,1
     a30:	280ad07a 	srli	r5,r5,1
     a34:	183ffa1e 	bne	r3,zero,a20 <__alt_mem_onchip_memory2_0+0xf7000a20>
     a38:	38000126 	beq	r7,zero,a40 <__divsi3+0x60>
     a3c:	0085c83a 	sub	r2,zero,r2
     a40:	f800283a 	ret
     a44:	014bc83a 	sub	r5,zero,r5
     a48:	39c0005c 	xori	r7,r7,1
     a4c:	003fe706 	br	9ec <__alt_mem_onchip_memory2_0+0xf70009ec>
     a50:	0109c83a 	sub	r4,zero,r4
     a54:	01c00044 	movi	r7,1
     a58:	003fe306 	br	9e8 <__alt_mem_onchip_memory2_0+0xf70009e8>
     a5c:	00c00044 	movi	r3,1
     a60:	003fee06 	br	a1c <__alt_mem_onchip_memory2_0+0xf7000a1c>

00000a64 <__modsi3>:
     a64:	20001716 	blt	r4,zero,ac4 <__modsi3+0x60>
     a68:	000f883a 	mov	r7,zero
     a6c:	2005883a 	mov	r2,r4
     a70:	28001216 	blt	r5,zero,abc <__modsi3+0x58>
     a74:	2900162e 	bgeu	r5,r4,ad0 <__modsi3+0x6c>
     a78:	01800804 	movi	r6,32
     a7c:	00c00044 	movi	r3,1
     a80:	00000106 	br	a88 <__modsi3+0x24>
     a84:	30000a26 	beq	r6,zero,ab0 <__modsi3+0x4c>
     a88:	294b883a 	add	r5,r5,r5
     a8c:	31bfffc4 	addi	r6,r6,-1
     a90:	18c7883a 	add	r3,r3,r3
     a94:	293ffb36 	bltu	r5,r4,a84 <__alt_mem_onchip_memory2_0+0xf7000a84>
     a98:	18000526 	beq	r3,zero,ab0 <__modsi3+0x4c>
     a9c:	1806d07a 	srli	r3,r3,1
     aa0:	11400136 	bltu	r2,r5,aa8 <__modsi3+0x44>
     aa4:	1145c83a 	sub	r2,r2,r5
     aa8:	280ad07a 	srli	r5,r5,1
     aac:	183ffb1e 	bne	r3,zero,a9c <__alt_mem_onchip_memory2_0+0xf7000a9c>
     ab0:	38000126 	beq	r7,zero,ab8 <__modsi3+0x54>
     ab4:	0085c83a 	sub	r2,zero,r2
     ab8:	f800283a 	ret
     abc:	014bc83a 	sub	r5,zero,r5
     ac0:	003fec06 	br	a74 <__alt_mem_onchip_memory2_0+0xf7000a74>
     ac4:	0109c83a 	sub	r4,zero,r4
     ac8:	01c00044 	movi	r7,1
     acc:	003fe706 	br	a6c <__alt_mem_onchip_memory2_0+0xf7000a6c>
     ad0:	00c00044 	movi	r3,1
     ad4:	003ff106 	br	a9c <__alt_mem_onchip_memory2_0+0xf7000a9c>

00000ad8 <__udivsi3>:
     ad8:	200d883a 	mov	r6,r4
     adc:	2900152e 	bgeu	r5,r4,b34 <__udivsi3+0x5c>
     ae0:	28001416 	blt	r5,zero,b34 <__udivsi3+0x5c>
     ae4:	00800804 	movi	r2,32
     ae8:	00c00044 	movi	r3,1
     aec:	00000206 	br	af8 <__udivsi3+0x20>
     af0:	10000e26 	beq	r2,zero,b2c <__udivsi3+0x54>
     af4:	28000516 	blt	r5,zero,b0c <__udivsi3+0x34>
     af8:	294b883a 	add	r5,r5,r5
     afc:	10bfffc4 	addi	r2,r2,-1
     b00:	18c7883a 	add	r3,r3,r3
     b04:	293ffa36 	bltu	r5,r4,af0 <__alt_mem_onchip_memory2_0+0xf7000af0>
     b08:	18000826 	beq	r3,zero,b2c <__udivsi3+0x54>
     b0c:	0005883a 	mov	r2,zero
     b10:	31400236 	bltu	r6,r5,b1c <__udivsi3+0x44>
     b14:	314dc83a 	sub	r6,r6,r5
     b18:	10c4b03a 	or	r2,r2,r3
     b1c:	1806d07a 	srli	r3,r3,1
     b20:	280ad07a 	srli	r5,r5,1
     b24:	183ffa1e 	bne	r3,zero,b10 <__alt_mem_onchip_memory2_0+0xf7000b10>
     b28:	f800283a 	ret
     b2c:	0005883a 	mov	r2,zero
     b30:	f800283a 	ret
     b34:	00c00044 	movi	r3,1
     b38:	003ff406 	br	b0c <__alt_mem_onchip_memory2_0+0xf7000b0c>

00000b3c <__umodsi3>:
     b3c:	2005883a 	mov	r2,r4
     b40:	2900122e 	bgeu	r5,r4,b8c <__umodsi3+0x50>
     b44:	28001116 	blt	r5,zero,b8c <__umodsi3+0x50>
     b48:	01800804 	movi	r6,32
     b4c:	00c00044 	movi	r3,1
     b50:	00000206 	br	b5c <__umodsi3+0x20>
     b54:	30000c26 	beq	r6,zero,b88 <__umodsi3+0x4c>
     b58:	28000516 	blt	r5,zero,b70 <__umodsi3+0x34>
     b5c:	294b883a 	add	r5,r5,r5
     b60:	31bfffc4 	addi	r6,r6,-1
     b64:	18c7883a 	add	r3,r3,r3
     b68:	293ffa36 	bltu	r5,r4,b54 <__alt_mem_onchip_memory2_0+0xf7000b54>
     b6c:	18000626 	beq	r3,zero,b88 <__umodsi3+0x4c>
     b70:	1806d07a 	srli	r3,r3,1
     b74:	11400136 	bltu	r2,r5,b7c <__umodsi3+0x40>
     b78:	1145c83a 	sub	r2,r2,r5
     b7c:	280ad07a 	srli	r5,r5,1
     b80:	183ffb1e 	bne	r3,zero,b70 <__alt_mem_onchip_memory2_0+0xf7000b70>
     b84:	f800283a 	ret
     b88:	f800283a 	ret
     b8c:	00c00044 	movi	r3,1
     b90:	003ff706 	br	b70 <__alt_mem_onchip_memory2_0+0xf7000b70>

00000b94 <__mulsi3>:
     b94:	0005883a 	mov	r2,zero
     b98:	20000726 	beq	r4,zero,bb8 <__mulsi3+0x24>
     b9c:	20c0004c 	andi	r3,r4,1
     ba0:	2008d07a 	srli	r4,r4,1
     ba4:	18000126 	beq	r3,zero,bac <__mulsi3+0x18>
     ba8:	1145883a 	add	r2,r2,r5
     bac:	294b883a 	add	r5,r5,r5
     bb0:	203ffa1e 	bne	r4,zero,b9c <__alt_mem_onchip_memory2_0+0xf7000b9c>
     bb4:	f800283a 	ret
     bb8:	f800283a 	ret

00000bbc <srand>:
     bbc:	00800074 	movhi	r2,1
     bc0:	1080d504 	addi	r2,r2,852
     bc4:	10800017 	ldw	r2,0(r2)
     bc8:	11002915 	stw	r4,164(r2)
     bcc:	10002a15 	stw	zero,168(r2)
     bd0:	f800283a 	ret

00000bd4 <rand>:
     bd4:	00800074 	movhi	r2,1
     bd8:	defffe04 	addi	sp,sp,-8
     bdc:	1080d504 	addi	r2,r2,852
     be0:	dc000015 	stw	r16,0(sp)
     be4:	14000017 	ldw	r16,0(r2)
     be8:	dfc00115 	stw	ra,4(sp)
     bec:	01932574 	movhi	r6,19605
     bf0:	81002917 	ldw	r4,164(r16)
     bf4:	81402a17 	ldw	r5,168(r16)
     bf8:	01d614b4 	movhi	r7,22610
     bfc:	319fcb44 	addi	r6,r6,32557
     c00:	39fd0b44 	addi	r7,r7,-3027
     c04:	00088d80 	call	88d8 <__muldi3>
     c08:	11000044 	addi	r4,r2,1
     c0c:	2085803a 	cmpltu	r2,r4,r2
     c10:	10c7883a 	add	r3,r2,r3
     c14:	00a00034 	movhi	r2,32768
     c18:	10bfffc4 	addi	r2,r2,-1
     c1c:	1884703a 	and	r2,r3,r2
     c20:	81002915 	stw	r4,164(r16)
     c24:	80c02a15 	stw	r3,168(r16)
     c28:	dfc00117 	ldw	ra,4(sp)
     c2c:	dc000017 	ldw	r16,0(sp)
     c30:	dec00204 	addi	sp,sp,8
     c34:	f800283a 	ret

00000c38 <_sprintf_r>:
     c38:	deffe404 	addi	sp,sp,-112
     c3c:	2807883a 	mov	r3,r5
     c40:	dfc01a15 	stw	ra,104(sp)
     c44:	d9c01b15 	stw	r7,108(sp)
     c48:	00a00034 	movhi	r2,32768
     c4c:	10bfffc4 	addi	r2,r2,-1
     c50:	02008204 	movi	r8,520
     c54:	d8800215 	stw	r2,8(sp)
     c58:	d8800515 	stw	r2,20(sp)
     c5c:	d9c01b04 	addi	r7,sp,108
     c60:	d80b883a 	mov	r5,sp
     c64:	00bfffc4 	movi	r2,-1
     c68:	d8c00015 	stw	r3,0(sp)
     c6c:	d8c00415 	stw	r3,16(sp)
     c70:	da00030d 	sth	r8,12(sp)
     c74:	d880038d 	sth	r2,14(sp)
     c78:	0000d940 	call	d94 <___svfprintf_internal_r>
     c7c:	d8c00017 	ldw	r3,0(sp)
     c80:	18000005 	stb	zero,0(r3)
     c84:	dfc01a17 	ldw	ra,104(sp)
     c88:	dec01c04 	addi	sp,sp,112
     c8c:	f800283a 	ret

00000c90 <sprintf>:
     c90:	deffe304 	addi	sp,sp,-116
     c94:	2007883a 	mov	r3,r4
     c98:	dfc01a15 	stw	ra,104(sp)
     c9c:	d9801b15 	stw	r6,108(sp)
     ca0:	d9c01c15 	stw	r7,112(sp)
     ca4:	01000074 	movhi	r4,1
     ca8:	2100d504 	addi	r4,r4,852
     cac:	21000017 	ldw	r4,0(r4)
     cb0:	00a00034 	movhi	r2,32768
     cb4:	10bfffc4 	addi	r2,r2,-1
     cb8:	280d883a 	mov	r6,r5
     cbc:	02008204 	movi	r8,520
     cc0:	d8800215 	stw	r2,8(sp)
     cc4:	d8800515 	stw	r2,20(sp)
     cc8:	d9c01b04 	addi	r7,sp,108
     ccc:	d80b883a 	mov	r5,sp
     cd0:	00bfffc4 	movi	r2,-1
     cd4:	d8c00015 	stw	r3,0(sp)
     cd8:	d8c00415 	stw	r3,16(sp)
     cdc:	da00030d 	sth	r8,12(sp)
     ce0:	d880038d 	sth	r2,14(sp)
     ce4:	0000d940 	call	d94 <___svfprintf_internal_r>
     ce8:	d8c00017 	ldw	r3,0(sp)
     cec:	18000005 	stb	zero,0(r3)
     cf0:	dfc01a17 	ldw	ra,104(sp)
     cf4:	dec01d04 	addi	sp,sp,116
     cf8:	f800283a 	ret

00000cfc <strlen>:
     cfc:	208000cc 	andi	r2,r4,3
     d00:	10002026 	beq	r2,zero,d84 <strlen+0x88>
     d04:	20800007 	ldb	r2,0(r4)
     d08:	10002026 	beq	r2,zero,d8c <strlen+0x90>
     d0c:	2005883a 	mov	r2,r4
     d10:	00000206 	br	d1c <strlen+0x20>
     d14:	10c00007 	ldb	r3,0(r2)
     d18:	18001826 	beq	r3,zero,d7c <strlen+0x80>
     d1c:	10800044 	addi	r2,r2,1
     d20:	10c000cc 	andi	r3,r2,3
     d24:	183ffb1e 	bne	r3,zero,d14 <__alt_mem_onchip_memory2_0+0xf7000d14>
     d28:	10c00017 	ldw	r3,0(r2)
     d2c:	01ffbff4 	movhi	r7,65279
     d30:	39ffbfc4 	addi	r7,r7,-257
     d34:	00ca303a 	nor	r5,zero,r3
     d38:	01a02074 	movhi	r6,32897
     d3c:	19c7883a 	add	r3,r3,r7
     d40:	31a02004 	addi	r6,r6,-32640
     d44:	1946703a 	and	r3,r3,r5
     d48:	1986703a 	and	r3,r3,r6
     d4c:	1800091e 	bne	r3,zero,d74 <strlen+0x78>
     d50:	10800104 	addi	r2,r2,4
     d54:	10c00017 	ldw	r3,0(r2)
     d58:	19cb883a 	add	r5,r3,r7
     d5c:	00c6303a 	nor	r3,zero,r3
     d60:	28c6703a 	and	r3,r5,r3
     d64:	1986703a 	and	r3,r3,r6
     d68:	183ff926 	beq	r3,zero,d50 <__alt_mem_onchip_memory2_0+0xf7000d50>
     d6c:	00000106 	br	d74 <strlen+0x78>
     d70:	10800044 	addi	r2,r2,1
     d74:	10c00007 	ldb	r3,0(r2)
     d78:	183ffd1e 	bne	r3,zero,d70 <__alt_mem_onchip_memory2_0+0xf7000d70>
     d7c:	1105c83a 	sub	r2,r2,r4
     d80:	f800283a 	ret
     d84:	2005883a 	mov	r2,r4
     d88:	003fe706 	br	d28 <__alt_mem_onchip_memory2_0+0xf7000d28>
     d8c:	0005883a 	mov	r2,zero
     d90:	f800283a 	ret

00000d94 <___svfprintf_internal_r>:
     d94:	deffb704 	addi	sp,sp,-292
     d98:	dfc04815 	stw	ra,288(sp)
     d9c:	ddc04615 	stw	r23,280(sp)
     da0:	d9402d15 	stw	r5,180(sp)
     da4:	d9003915 	stw	r4,228(sp)
     da8:	302f883a 	mov	r23,r6
     dac:	d9c02e15 	stw	r7,184(sp)
     db0:	df004715 	stw	fp,284(sp)
     db4:	dd804515 	stw	r22,276(sp)
     db8:	dd404415 	stw	r21,272(sp)
     dbc:	dd004315 	stw	r20,268(sp)
     dc0:	dcc04215 	stw	r19,264(sp)
     dc4:	dc804115 	stw	r18,260(sp)
     dc8:	dc404015 	stw	r17,256(sp)
     dcc:	dc003f15 	stw	r16,252(sp)
     dd0:	00049ac0 	call	49ac <_localeconv_r>
     dd4:	10800017 	ldw	r2,0(r2)
     dd8:	1009883a 	mov	r4,r2
     ddc:	d8803415 	stw	r2,208(sp)
     de0:	0000cfc0 	call	cfc <strlen>
     de4:	d8c02d17 	ldw	r3,180(sp)
     de8:	d8803815 	stw	r2,224(sp)
     dec:	1880030b 	ldhu	r2,12(r3)
     df0:	1080200c 	andi	r2,r2,128
     df4:	10000226 	beq	r2,zero,e00 <___svfprintf_internal_r+0x6c>
     df8:	18800417 	ldw	r2,16(r3)
     dfc:	1006b126 	beq	r2,zero,28c4 <___svfprintf_internal_r+0x1b30>
     e00:	dcc03917 	ldw	r19,228(sp)
     e04:	d8c00404 	addi	r3,sp,16
     e08:	05400074 	movhi	r21,1
     e0c:	d9001e04 	addi	r4,sp,120
     e10:	ad786384 	addi	r21,r21,-7794
     e14:	d8c01e15 	stw	r3,120(sp)
     e18:	d8002015 	stw	zero,128(sp)
     e1c:	d8001f15 	stw	zero,124(sp)
     e20:	d8003315 	stw	zero,204(sp)
     e24:	d8003615 	stw	zero,216(sp)
     e28:	d8003715 	stw	zero,220(sp)
     e2c:	1811883a 	mov	r8,r3
     e30:	d8003a15 	stw	zero,232(sp)
     e34:	d8003b15 	stw	zero,236(sp)
     e38:	d8002f15 	stw	zero,188(sp)
     e3c:	d9002815 	stw	r4,160(sp)
     e40:	b8800007 	ldb	r2,0(r23)
     e44:	10027726 	beq	r2,zero,1824 <___svfprintf_internal_r+0xa90>
     e48:	00c00944 	movi	r3,37
     e4c:	b823883a 	mov	r17,r23
     e50:	10c0021e 	bne	r2,r3,e5c <___svfprintf_internal_r+0xc8>
     e54:	00001406 	br	ea8 <___svfprintf_internal_r+0x114>
     e58:	10c00326 	beq	r2,r3,e68 <___svfprintf_internal_r+0xd4>
     e5c:	8c400044 	addi	r17,r17,1
     e60:	88800007 	ldb	r2,0(r17)
     e64:	103ffc1e 	bne	r2,zero,e58 <__alt_mem_onchip_memory2_0+0xf7000e58>
     e68:	8de1c83a 	sub	r16,r17,r23
     e6c:	80000e26 	beq	r16,zero,ea8 <___svfprintf_internal_r+0x114>
     e70:	d8c02017 	ldw	r3,128(sp)
     e74:	d8801f17 	ldw	r2,124(sp)
     e78:	45c00015 	stw	r23,0(r8)
     e7c:	1c07883a 	add	r3,r3,r16
     e80:	10800044 	addi	r2,r2,1
     e84:	d8c02015 	stw	r3,128(sp)
     e88:	44000115 	stw	r16,4(r8)
     e8c:	d8801f15 	stw	r2,124(sp)
     e90:	00c001c4 	movi	r3,7
     e94:	18809916 	blt	r3,r2,10fc <___svfprintf_internal_r+0x368>
     e98:	42000204 	addi	r8,r8,8
     e9c:	d9402f17 	ldw	r5,188(sp)
     ea0:	2c0b883a 	add	r5,r5,r16
     ea4:	d9402f15 	stw	r5,188(sp)
     ea8:	88800007 	ldb	r2,0(r17)
     eac:	10009a26 	beq	r2,zero,1118 <___svfprintf_internal_r+0x384>
     eb0:	8dc00044 	addi	r23,r17,1
     eb4:	8c400047 	ldb	r17,1(r17)
     eb8:	0021883a 	mov	r16,zero
     ebc:	00bfffc4 	movi	r2,-1
     ec0:	0025883a 	mov	r18,zero
     ec4:	dc002905 	stb	r16,164(sp)
     ec8:	d8002785 	stb	zero,158(sp)
     ecc:	d8002b05 	stb	zero,172(sp)
     ed0:	d8802a15 	stw	r2,168(sp)
     ed4:	d8003115 	stw	zero,196(sp)
     ed8:	05001604 	movi	r20,88
     edc:	05800244 	movi	r22,9
     ee0:	4039883a 	mov	fp,r8
     ee4:	9021883a 	mov	r16,r18
     ee8:	bdc00044 	addi	r23,r23,1
     eec:	88bff804 	addi	r2,r17,-32
     ef0:	a0831e36 	bltu	r20,r2,1b6c <___svfprintf_internal_r+0xdd8>
     ef4:	100490ba 	slli	r2,r2,2
     ef8:	00c00034 	movhi	r3,0
     efc:	18c3c304 	addi	r3,r3,3852
     f00:	10c5883a 	add	r2,r2,r3
     f04:	10800017 	ldw	r2,0(r2)
     f08:	1000683a 	jmp	r2
     f0c:	00001ab4 	movhi	zero,106
     f10:	00001b6c 	andhi	zero,zero,109
     f14:	00001b6c 	andhi	zero,zero,109
     f18:	00001aa8 	cmpgeui	zero,zero,106
     f1c:	00001b6c 	andhi	zero,zero,109
     f20:	00001b6c 	andhi	zero,zero,109
     f24:	00001b6c 	andhi	zero,zero,109
     f28:	00001b6c 	andhi	zero,zero,109
     f2c:	00001b6c 	andhi	zero,zero,109
     f30:	00001b6c 	andhi	zero,zero,109
     f34:	00001174 	movhi	zero,69
     f38:	000019b8 	rdprs	zero,zero,102
     f3c:	00001b6c 	andhi	zero,zero,109
     f40:	00001080 	call	108 <alt_irq_handler+0xc>
     f44:	00001198 	cmpnei	zero,zero,70
     f48:	00001b6c 	andhi	zero,zero,109
     f4c:	00001224 	muli	zero,zero,72
     f50:	000011e8 	cmpgeui	zero,zero,71
     f54:	000011e8 	cmpgeui	zero,zero,71
     f58:	000011e8 	cmpgeui	zero,zero,71
     f5c:	000011e8 	cmpgeui	zero,zero,71
     f60:	000011e8 	cmpgeui	zero,zero,71
     f64:	000011e8 	cmpgeui	zero,zero,71
     f68:	000011e8 	cmpgeui	zero,zero,71
     f6c:	000011e8 	cmpgeui	zero,zero,71
     f70:	000011e8 	cmpgeui	zero,zero,71
     f74:	00001b6c 	andhi	zero,zero,109
     f78:	00001b6c 	andhi	zero,zero,109
     f7c:	00001b6c 	andhi	zero,zero,109
     f80:	00001b6c 	andhi	zero,zero,109
     f84:	00001b6c 	andhi	zero,zero,109
     f88:	00001b6c 	andhi	zero,zero,109
     f8c:	00001b6c 	andhi	zero,zero,109
     f90:	00001b6c 	andhi	zero,zero,109
     f94:	00001b6c 	andhi	zero,zero,109
     f98:	00001b6c 	andhi	zero,zero,109
     f9c:	000012e8 	cmpgeui	zero,zero,75
     fa0:	00001230 	cmpltui	zero,zero,72
     fa4:	00001b6c 	andhi	zero,zero,109
     fa8:	00001230 	cmpltui	zero,zero,72
     fac:	00001b6c 	andhi	zero,zero,109
     fb0:	00001b6c 	andhi	zero,zero,109
     fb4:	00001b6c 	andhi	zero,zero,109
     fb8:	00001b6c 	andhi	zero,zero,109
     fbc:	000012dc 	xori	zero,zero,75
     fc0:	00001b6c 	andhi	zero,zero,109
     fc4:	00001b6c 	andhi	zero,zero,109
     fc8:	000013b0 	cmpltui	zero,zero,78
     fcc:	00001b6c 	andhi	zero,zero,109
     fd0:	00001b6c 	andhi	zero,zero,109
     fd4:	00001b6c 	andhi	zero,zero,109
     fd8:	00001b6c 	andhi	zero,zero,109
     fdc:	00001b6c 	andhi	zero,zero,109
     fe0:	0000182c 	andhi	zero,zero,96
     fe4:	00001b6c 	andhi	zero,zero,109
     fe8:	00001b6c 	andhi	zero,zero,109
     fec:	00001898 	cmpnei	zero,zero,98
     ff0:	00001b6c 	andhi	zero,zero,109
     ff4:	00001b6c 	andhi	zero,zero,109
     ff8:	00001b6c 	andhi	zero,zero,109
     ffc:	00001b6c 	andhi	zero,zero,109
    1000:	00001b6c 	andhi	zero,zero,109
    1004:	00001b6c 	andhi	zero,zero,109
    1008:	00001b6c 	andhi	zero,zero,109
    100c:	00001b6c 	andhi	zero,zero,109
    1010:	00001b6c 	andhi	zero,zero,109
    1014:	00001b6c 	andhi	zero,zero,109
    1018:	00001954 	movui	zero,101
    101c:	00001ad4 	movui	zero,107
    1020:	00001230 	cmpltui	zero,zero,72
    1024:	00001230 	cmpltui	zero,zero,72
    1028:	00001230 	cmpltui	zero,zero,72
    102c:	00001b48 	cmpgei	zero,zero,109
    1030:	00001ad4 	movui	zero,107
    1034:	00001b6c 	andhi	zero,zero,109
    1038:	00001b6c 	andhi	zero,zero,109
    103c:	00001af4 	movhi	zero,107
    1040:	00001b6c 	andhi	zero,zero,109
    1044:	00001b08 	cmpgei	zero,zero,108
    1048:	00001998 	cmpnei	zero,zero,102
    104c:	0000108c 	andi	zero,zero,66
    1050:	000019d0 	cmplti	zero,zero,103
    1054:	00001b6c 	andhi	zero,zero,109
    1058:	000019dc 	xori	zero,zero,103
    105c:	00001b6c 	andhi	zero,zero,109
    1060:	00001a40 	call	1a4 <alt_irq_handler+0xa8>
    1064:	00001b6c 	andhi	zero,zero,109
    1068:	00001b6c 	andhi	zero,zero,109
    106c:	00001a60 	cmpeqi	zero,zero,105
    1070:	d8c03117 	ldw	r3,196(sp)
    1074:	d8802e15 	stw	r2,184(sp)
    1078:	00c7c83a 	sub	r3,zero,r3
    107c:	d8c03115 	stw	r3,196(sp)
    1080:	84000114 	ori	r16,r16,4
    1084:	bc400007 	ldb	r17,0(r23)
    1088:	003f9706 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    108c:	00800c04 	movi	r2,48
    1090:	d8802705 	stb	r2,156(sp)
    1094:	00801e04 	movi	r2,120
    1098:	d8802745 	stb	r2,157(sp)
    109c:	d9002a17 	ldw	r4,168(sp)
    10a0:	d8802e17 	ldw	r2,184(sp)
    10a4:	d8002785 	stb	zero,158(sp)
    10a8:	e011883a 	mov	r8,fp
    10ac:	10c00104 	addi	r3,r2,4
    10b0:	15000017 	ldw	r20,0(r2)
    10b4:	002d883a 	mov	r22,zero
    10b8:	80800094 	ori	r2,r16,2
    10bc:	2002b616 	blt	r4,zero,1b98 <___svfprintf_internal_r+0xe04>
    10c0:	00bfdfc4 	movi	r2,-129
    10c4:	80a4703a 	and	r18,r16,r2
    10c8:	d8c02e15 	stw	r3,184(sp)
    10cc:	94800094 	ori	r18,r18,2
    10d0:	a002a01e 	bne	r20,zero,1b54 <___svfprintf_internal_r+0xdc0>
    10d4:	01400074 	movhi	r5,1
    10d8:	29785c04 	addi	r5,r5,-7824
    10dc:	d9403a15 	stw	r5,232(sp)
    10e0:	04401e04 	movi	r17,120
    10e4:	d8c02a17 	ldw	r3,168(sp)
    10e8:	0039883a 	mov	fp,zero
    10ec:	1801e626 	beq	r3,zero,1888 <___svfprintf_internal_r+0xaf4>
    10f0:	0029883a 	mov	r20,zero
    10f4:	002d883a 	mov	r22,zero
    10f8:	00020506 	br	1910 <___svfprintf_internal_r+0xb7c>
    10fc:	d9402d17 	ldw	r5,180(sp)
    1100:	d9801e04 	addi	r6,sp,120
    1104:	9809883a 	mov	r4,r19
    1108:	00066700 	call	6670 <__ssprint_r>
    110c:	1000081e 	bne	r2,zero,1130 <___svfprintf_internal_r+0x39c>
    1110:	da000404 	addi	r8,sp,16
    1114:	003f6106 	br	e9c <__alt_mem_onchip_memory2_0+0xf7000e9c>
    1118:	d8802017 	ldw	r2,128(sp)
    111c:	10000426 	beq	r2,zero,1130 <___svfprintf_internal_r+0x39c>
    1120:	d9402d17 	ldw	r5,180(sp)
    1124:	d9003917 	ldw	r4,228(sp)
    1128:	d9801e04 	addi	r6,sp,120
    112c:	00066700 	call	6670 <__ssprint_r>
    1130:	d8802d17 	ldw	r2,180(sp)
    1134:	10c0030b 	ldhu	r3,12(r2)
    1138:	d8802f17 	ldw	r2,188(sp)
    113c:	18c0100c 	andi	r3,r3,64
    1140:	1806251e 	bne	r3,zero,29d8 <___svfprintf_internal_r+0x1c44>
    1144:	dfc04817 	ldw	ra,288(sp)
    1148:	df004717 	ldw	fp,284(sp)
    114c:	ddc04617 	ldw	r23,280(sp)
    1150:	dd804517 	ldw	r22,276(sp)
    1154:	dd404417 	ldw	r21,272(sp)
    1158:	dd004317 	ldw	r20,268(sp)
    115c:	dcc04217 	ldw	r19,264(sp)
    1160:	dc804117 	ldw	r18,260(sp)
    1164:	dc404017 	ldw	r17,256(sp)
    1168:	dc003f17 	ldw	r16,252(sp)
    116c:	dec04904 	addi	sp,sp,292
    1170:	f800283a 	ret
    1174:	d9002e17 	ldw	r4,184(sp)
    1178:	d9402e17 	ldw	r5,184(sp)
    117c:	21000017 	ldw	r4,0(r4)
    1180:	28800104 	addi	r2,r5,4
    1184:	d9003115 	stw	r4,196(sp)
    1188:	203fb916 	blt	r4,zero,1070 <__alt_mem_onchip_memory2_0+0xf7001070>
    118c:	d8802e15 	stw	r2,184(sp)
    1190:	bc400007 	ldb	r17,0(r23)
    1194:	003f5406 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    1198:	bc400007 	ldb	r17,0(r23)
    119c:	01000a84 	movi	r4,42
    11a0:	b8c00044 	addi	r3,r23,1
    11a4:	89076926 	beq	r17,r4,2f4c <___svfprintf_internal_r+0x21b8>
    11a8:	8cbff404 	addi	r18,r17,-48
    11ac:	b486b936 	bltu	r22,r18,2c94 <___svfprintf_internal_r+0x1f00>
    11b0:	0009883a 	mov	r4,zero
    11b4:	1823883a 	mov	r17,r3
    11b8:	01400284 	movi	r5,10
    11bc:	0000b940 	call	b94 <__mulsi3>
    11c0:	88c00007 	ldb	r3,0(r17)
    11c4:	1489883a 	add	r4,r2,r18
    11c8:	8dc00044 	addi	r23,r17,1
    11cc:	1cbff404 	addi	r18,r3,-48
    11d0:	b823883a 	mov	r17,r23
    11d4:	b4bff82e 	bgeu	r22,r18,11b8 <__alt_mem_onchip_memory2_0+0xf70011b8>
    11d8:	1823883a 	mov	r17,r3
    11dc:	20060416 	blt	r4,zero,29f0 <___svfprintf_internal_r+0x1c5c>
    11e0:	d9002a15 	stw	r4,168(sp)
    11e4:	003f4106 	br	eec <__alt_mem_onchip_memory2_0+0xf7000eec>
    11e8:	8cbff404 	addi	r18,r17,-48
    11ec:	d8003115 	stw	zero,196(sp)
    11f0:	0009883a 	mov	r4,zero
    11f4:	b823883a 	mov	r17,r23
    11f8:	01400284 	movi	r5,10
    11fc:	0000b940 	call	b94 <__mulsi3>
    1200:	88c00007 	ldb	r3,0(r17)
    1204:	9089883a 	add	r4,r18,r2
    1208:	bdc00044 	addi	r23,r23,1
    120c:	1cbff404 	addi	r18,r3,-48
    1210:	b823883a 	mov	r17,r23
    1214:	b4bff82e 	bgeu	r22,r18,11f8 <__alt_mem_onchip_memory2_0+0xf70011f8>
    1218:	1823883a 	mov	r17,r3
    121c:	d9003115 	stw	r4,196(sp)
    1220:	003f3206 	br	eec <__alt_mem_onchip_memory2_0+0xf7000eec>
    1224:	84002014 	ori	r16,r16,128
    1228:	bc400007 	ldb	r17,0(r23)
    122c:	003f2e06 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    1230:	8025883a 	mov	r18,r16
    1234:	dc002903 	ldbu	r16,164(sp)
    1238:	e011883a 	mov	r8,fp
    123c:	84003fcc 	andi	r16,r16,255
    1240:	8007721e 	bne	r16,zero,300c <___svfprintf_internal_r+0x2278>
    1244:	9080020c 	andi	r2,r18,8
    1248:	1004a526 	beq	r2,zero,24e0 <___svfprintf_internal_r+0x174c>
    124c:	d9002e17 	ldw	r4,184(sp)
    1250:	d9402e17 	ldw	r5,184(sp)
    1254:	d8802e17 	ldw	r2,184(sp)
    1258:	21000017 	ldw	r4,0(r4)
    125c:	29400117 	ldw	r5,4(r5)
    1260:	10800204 	addi	r2,r2,8
    1264:	d9003615 	stw	r4,216(sp)
    1268:	d9403715 	stw	r5,220(sp)
    126c:	d8802e15 	stw	r2,184(sp)
    1270:	d9003617 	ldw	r4,216(sp)
    1274:	d9403717 	ldw	r5,220(sp)
    1278:	da003e15 	stw	r8,248(sp)
    127c:	04000044 	movi	r16,1
    1280:	00064cc0 	call	64cc <__fpclassifyd>
    1284:	da003e17 	ldw	r8,248(sp)
    1288:	1404731e 	bne	r2,r16,2458 <___svfprintf_internal_r+0x16c4>
    128c:	d9003617 	ldw	r4,216(sp)
    1290:	d9403717 	ldw	r5,220(sp)
    1294:	000d883a 	mov	r6,zero
    1298:	000f883a 	mov	r7,zero
    129c:	000a9840 	call	a984 <__ledf2>
    12a0:	da003e17 	ldw	r8,248(sp)
    12a4:	10061b16 	blt	r2,zero,2b14 <___svfprintf_internal_r+0x1d80>
    12a8:	df002783 	ldbu	fp,158(sp)
    12ac:	008011c4 	movi	r2,71
    12b0:	1445810e 	bge	r2,r17,28b8 <___svfprintf_internal_r+0x1b24>
    12b4:	04000074 	movhi	r16,1
    12b8:	84385404 	addi	r16,r16,-7856
    12bc:	00c000c4 	movi	r3,3
    12c0:	00bfdfc4 	movi	r2,-129
    12c4:	d8c02915 	stw	r3,164(sp)
    12c8:	90a4703a 	and	r18,r18,r2
    12cc:	d8c02b15 	stw	r3,172(sp)
    12d0:	d8002a15 	stw	zero,168(sp)
    12d4:	d8003215 	stw	zero,200(sp)
    12d8:	00006c06 	br	148c <___svfprintf_internal_r+0x6f8>
    12dc:	84000214 	ori	r16,r16,8
    12e0:	bc400007 	ldb	r17,0(r23)
    12e4:	003f0006 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    12e8:	8025883a 	mov	r18,r16
    12ec:	dc002903 	ldbu	r16,164(sp)
    12f0:	e011883a 	mov	r8,fp
    12f4:	84003fcc 	andi	r16,r16,255
    12f8:	80073f1e 	bne	r16,zero,2ff8 <___svfprintf_internal_r+0x2264>
    12fc:	94800414 	ori	r18,r18,16
    1300:	9080080c 	andi	r2,r18,32
    1304:	1003bb26 	beq	r2,zero,21f4 <___svfprintf_internal_r+0x1460>
    1308:	d9002e17 	ldw	r4,184(sp)
    130c:	20800117 	ldw	r2,4(r4)
    1310:	25000017 	ldw	r20,0(r4)
    1314:	21000204 	addi	r4,r4,8
    1318:	d9002e15 	stw	r4,184(sp)
    131c:	102d883a 	mov	r22,r2
    1320:	1003bd16 	blt	r2,zero,2218 <___svfprintf_internal_r+0x1484>
    1324:	d9002a17 	ldw	r4,168(sp)
    1328:	df002783 	ldbu	fp,158(sp)
    132c:	2003d016 	blt	r4,zero,2270 <___svfprintf_internal_r+0x14dc>
    1330:	00ffdfc4 	movi	r3,-129
    1334:	a584b03a 	or	r2,r20,r22
    1338:	90e4703a 	and	r18,r18,r3
    133c:	10015026 	beq	r2,zero,1880 <___svfprintf_internal_r+0xaec>
    1340:	b0037026 	beq	r22,zero,2104 <___svfprintf_internal_r+0x1370>
    1344:	dc402915 	stw	r17,164(sp)
    1348:	dc001e04 	addi	r16,sp,120
    134c:	b023883a 	mov	r17,r22
    1350:	402d883a 	mov	r22,r8
    1354:	a009883a 	mov	r4,r20
    1358:	880b883a 	mov	r5,r17
    135c:	01800284 	movi	r6,10
    1360:	000f883a 	mov	r7,zero
    1364:	0008fe00 	call	8fe0 <__umoddi3>
    1368:	10800c04 	addi	r2,r2,48
    136c:	843fffc4 	addi	r16,r16,-1
    1370:	a009883a 	mov	r4,r20
    1374:	880b883a 	mov	r5,r17
    1378:	80800005 	stb	r2,0(r16)
    137c:	01800284 	movi	r6,10
    1380:	000f883a 	mov	r7,zero
    1384:	00089e40 	call	89e4 <__udivdi3>
    1388:	1029883a 	mov	r20,r2
    138c:	10c4b03a 	or	r2,r2,r3
    1390:	1823883a 	mov	r17,r3
    1394:	103fef1e 	bne	r2,zero,1354 <__alt_mem_onchip_memory2_0+0xf7001354>
    1398:	d8c02817 	ldw	r3,160(sp)
    139c:	dc402917 	ldw	r17,164(sp)
    13a0:	b011883a 	mov	r8,r22
    13a4:	1c07c83a 	sub	r3,r3,r16
    13a8:	d8c02b15 	stw	r3,172(sp)
    13ac:	00003106 	br	1474 <___svfprintf_internal_r+0x6e0>
    13b0:	8025883a 	mov	r18,r16
    13b4:	dc002903 	ldbu	r16,164(sp)
    13b8:	e011883a 	mov	r8,fp
    13bc:	84003fcc 	andi	r16,r16,255
    13c0:	80070a1e 	bne	r16,zero,2fec <___svfprintf_internal_r+0x2258>
    13c4:	94800414 	ori	r18,r18,16
    13c8:	9080080c 	andi	r2,r18,32
    13cc:	1002f626 	beq	r2,zero,1fa8 <___svfprintf_internal_r+0x1214>
    13d0:	d9002e17 	ldw	r4,184(sp)
    13d4:	d9402a17 	ldw	r5,168(sp)
    13d8:	d8002785 	stb	zero,158(sp)
    13dc:	20800204 	addi	r2,r4,8
    13e0:	25000017 	ldw	r20,0(r4)
    13e4:	25800117 	ldw	r22,4(r4)
    13e8:	28043716 	blt	r5,zero,24c8 <___svfprintf_internal_r+0x1734>
    13ec:	013fdfc4 	movi	r4,-129
    13f0:	a586b03a 	or	r3,r20,r22
    13f4:	d8802e15 	stw	r2,184(sp)
    13f8:	9124703a 	and	r18,r18,r4
    13fc:	1802f71e 	bne	r3,zero,1fdc <___svfprintf_internal_r+0x1248>
    1400:	d9402a17 	ldw	r5,168(sp)
    1404:	0039883a 	mov	fp,zero
    1408:	2806df26 	beq	r5,zero,2f88 <___svfprintf_internal_r+0x21f4>
    140c:	0029883a 	mov	r20,zero
    1410:	002d883a 	mov	r22,zero
    1414:	dc001e04 	addi	r16,sp,120
    1418:	a006d0fa 	srli	r3,r20,3
    141c:	b008977a 	slli	r4,r22,29
    1420:	b02cd0fa 	srli	r22,r22,3
    1424:	a50001cc 	andi	r20,r20,7
    1428:	a0800c04 	addi	r2,r20,48
    142c:	843fffc4 	addi	r16,r16,-1
    1430:	20e8b03a 	or	r20,r4,r3
    1434:	80800005 	stb	r2,0(r16)
    1438:	a586b03a 	or	r3,r20,r22
    143c:	183ff61e 	bne	r3,zero,1418 <__alt_mem_onchip_memory2_0+0xf7001418>
    1440:	90c0004c 	andi	r3,r18,1
    1444:	18013f26 	beq	r3,zero,1944 <___svfprintf_internal_r+0xbb0>
    1448:	10803fcc 	andi	r2,r2,255
    144c:	1080201c 	xori	r2,r2,128
    1450:	10bfe004 	addi	r2,r2,-128
    1454:	00c00c04 	movi	r3,48
    1458:	10c13a26 	beq	r2,r3,1944 <___svfprintf_internal_r+0xbb0>
    145c:	80ffffc5 	stb	r3,-1(r16)
    1460:	d8c02817 	ldw	r3,160(sp)
    1464:	80bfffc4 	addi	r2,r16,-1
    1468:	1021883a 	mov	r16,r2
    146c:	1887c83a 	sub	r3,r3,r2
    1470:	d8c02b15 	stw	r3,172(sp)
    1474:	d8802b17 	ldw	r2,172(sp)
    1478:	d9002a17 	ldw	r4,168(sp)
    147c:	1100010e 	bge	r2,r4,1484 <___svfprintf_internal_r+0x6f0>
    1480:	2005883a 	mov	r2,r4
    1484:	d8802915 	stw	r2,164(sp)
    1488:	d8003215 	stw	zero,200(sp)
    148c:	e7003fcc 	andi	fp,fp,255
    1490:	e700201c 	xori	fp,fp,128
    1494:	e73fe004 	addi	fp,fp,-128
    1498:	e0000326 	beq	fp,zero,14a8 <___svfprintf_internal_r+0x714>
    149c:	d8c02917 	ldw	r3,164(sp)
    14a0:	18c00044 	addi	r3,r3,1
    14a4:	d8c02915 	stw	r3,164(sp)
    14a8:	90c0008c 	andi	r3,r18,2
    14ac:	d8c02c15 	stw	r3,176(sp)
    14b0:	18000326 	beq	r3,zero,14c0 <___svfprintf_internal_r+0x72c>
    14b4:	d8c02917 	ldw	r3,164(sp)
    14b8:	18c00084 	addi	r3,r3,2
    14bc:	d8c02915 	stw	r3,164(sp)
    14c0:	90c0210c 	andi	r3,r18,132
    14c4:	d8c03015 	stw	r3,192(sp)
    14c8:	1801c31e 	bne	r3,zero,1bd8 <___svfprintf_internal_r+0xe44>
    14cc:	d9003117 	ldw	r4,196(sp)
    14d0:	d8c02917 	ldw	r3,164(sp)
    14d4:	20e9c83a 	sub	r20,r4,r3
    14d8:	0501bf0e 	bge	zero,r20,1bd8 <___svfprintf_internal_r+0xe44>
    14dc:	02400404 	movi	r9,16
    14e0:	d8c02017 	ldw	r3,128(sp)
    14e4:	d8801f17 	ldw	r2,124(sp)
    14e8:	4d053d0e 	bge	r9,r20,29e0 <___svfprintf_internal_r+0x1c4c>
    14ec:	01400074 	movhi	r5,1
    14f0:	29786784 	addi	r5,r5,-7778
    14f4:	dc403c15 	stw	r17,240(sp)
    14f8:	d9403515 	stw	r5,212(sp)
    14fc:	a023883a 	mov	r17,r20
    1500:	482d883a 	mov	r22,r9
    1504:	9029883a 	mov	r20,r18
    1508:	070001c4 	movi	fp,7
    150c:	8025883a 	mov	r18,r16
    1510:	dc002d17 	ldw	r16,180(sp)
    1514:	00000306 	br	1524 <___svfprintf_internal_r+0x790>
    1518:	8c7ffc04 	addi	r17,r17,-16
    151c:	42000204 	addi	r8,r8,8
    1520:	b440130e 	bge	r22,r17,1570 <___svfprintf_internal_r+0x7dc>
    1524:	01000074 	movhi	r4,1
    1528:	18c00404 	addi	r3,r3,16
    152c:	10800044 	addi	r2,r2,1
    1530:	21386784 	addi	r4,r4,-7778
    1534:	41000015 	stw	r4,0(r8)
    1538:	45800115 	stw	r22,4(r8)
    153c:	d8c02015 	stw	r3,128(sp)
    1540:	d8801f15 	stw	r2,124(sp)
    1544:	e0bff40e 	bge	fp,r2,1518 <__alt_mem_onchip_memory2_0+0xf7001518>
    1548:	d9801e04 	addi	r6,sp,120
    154c:	800b883a 	mov	r5,r16
    1550:	9809883a 	mov	r4,r19
    1554:	00066700 	call	6670 <__ssprint_r>
    1558:	103ef51e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    155c:	8c7ffc04 	addi	r17,r17,-16
    1560:	d8c02017 	ldw	r3,128(sp)
    1564:	d8801f17 	ldw	r2,124(sp)
    1568:	da000404 	addi	r8,sp,16
    156c:	b47fed16 	blt	r22,r17,1524 <__alt_mem_onchip_memory2_0+0xf7001524>
    1570:	9021883a 	mov	r16,r18
    1574:	a025883a 	mov	r18,r20
    1578:	8829883a 	mov	r20,r17
    157c:	dc403c17 	ldw	r17,240(sp)
    1580:	d9403517 	ldw	r5,212(sp)
    1584:	a0c7883a 	add	r3,r20,r3
    1588:	10800044 	addi	r2,r2,1
    158c:	41400015 	stw	r5,0(r8)
    1590:	45000115 	stw	r20,4(r8)
    1594:	d8c02015 	stw	r3,128(sp)
    1598:	d8801f15 	stw	r2,124(sp)
    159c:	010001c4 	movi	r4,7
    15a0:	2082c116 	blt	r4,r2,20a8 <___svfprintf_internal_r+0x1314>
    15a4:	df002787 	ldb	fp,158(sp)
    15a8:	42000204 	addi	r8,r8,8
    15ac:	e0000c26 	beq	fp,zero,15e0 <___svfprintf_internal_r+0x84c>
    15b0:	d8801f17 	ldw	r2,124(sp)
    15b4:	d9002784 	addi	r4,sp,158
    15b8:	18c00044 	addi	r3,r3,1
    15bc:	10800044 	addi	r2,r2,1
    15c0:	41000015 	stw	r4,0(r8)
    15c4:	01000044 	movi	r4,1
    15c8:	41000115 	stw	r4,4(r8)
    15cc:	d8c02015 	stw	r3,128(sp)
    15d0:	d8801f15 	stw	r2,124(sp)
    15d4:	010001c4 	movi	r4,7
    15d8:	20825a16 	blt	r4,r2,1f44 <___svfprintf_internal_r+0x11b0>
    15dc:	42000204 	addi	r8,r8,8
    15e0:	d8802c17 	ldw	r2,176(sp)
    15e4:	10000c26 	beq	r2,zero,1618 <___svfprintf_internal_r+0x884>
    15e8:	d8801f17 	ldw	r2,124(sp)
    15ec:	d9002704 	addi	r4,sp,156
    15f0:	18c00084 	addi	r3,r3,2
    15f4:	10800044 	addi	r2,r2,1
    15f8:	41000015 	stw	r4,0(r8)
    15fc:	01000084 	movi	r4,2
    1600:	41000115 	stw	r4,4(r8)
    1604:	d8c02015 	stw	r3,128(sp)
    1608:	d8801f15 	stw	r2,124(sp)
    160c:	010001c4 	movi	r4,7
    1610:	20825416 	blt	r4,r2,1f64 <___svfprintf_internal_r+0x11d0>
    1614:	42000204 	addi	r8,r8,8
    1618:	d9003017 	ldw	r4,192(sp)
    161c:	00802004 	movi	r2,128
    1620:	2081b926 	beq	r4,r2,1d08 <___svfprintf_internal_r+0xf74>
    1624:	d9402a17 	ldw	r5,168(sp)
    1628:	d8802b17 	ldw	r2,172(sp)
    162c:	28adc83a 	sub	r22,r5,r2
    1630:	05802f0e 	bge	zero,r22,16f0 <___svfprintf_internal_r+0x95c>
    1634:	07000404 	movi	fp,16
    1638:	d8801f17 	ldw	r2,124(sp)
    163c:	e583e20e 	bge	fp,r22,25c8 <___svfprintf_internal_r+0x1834>
    1640:	01400074 	movhi	r5,1
    1644:	29786384 	addi	r5,r5,-7794
    1648:	dc402a15 	stw	r17,168(sp)
    164c:	d9402c15 	stw	r5,176(sp)
    1650:	b023883a 	mov	r17,r22
    1654:	050001c4 	movi	r20,7
    1658:	902d883a 	mov	r22,r18
    165c:	8025883a 	mov	r18,r16
    1660:	dc002d17 	ldw	r16,180(sp)
    1664:	00000306 	br	1674 <___svfprintf_internal_r+0x8e0>
    1668:	8c7ffc04 	addi	r17,r17,-16
    166c:	42000204 	addi	r8,r8,8
    1670:	e440110e 	bge	fp,r17,16b8 <___svfprintf_internal_r+0x924>
    1674:	18c00404 	addi	r3,r3,16
    1678:	10800044 	addi	r2,r2,1
    167c:	45400015 	stw	r21,0(r8)
    1680:	47000115 	stw	fp,4(r8)
    1684:	d8c02015 	stw	r3,128(sp)
    1688:	d8801f15 	stw	r2,124(sp)
    168c:	a0bff60e 	bge	r20,r2,1668 <__alt_mem_onchip_memory2_0+0xf7001668>
    1690:	d9801e04 	addi	r6,sp,120
    1694:	800b883a 	mov	r5,r16
    1698:	9809883a 	mov	r4,r19
    169c:	00066700 	call	6670 <__ssprint_r>
    16a0:	103ea31e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    16a4:	8c7ffc04 	addi	r17,r17,-16
    16a8:	d8c02017 	ldw	r3,128(sp)
    16ac:	d8801f17 	ldw	r2,124(sp)
    16b0:	da000404 	addi	r8,sp,16
    16b4:	e47fef16 	blt	fp,r17,1674 <__alt_mem_onchip_memory2_0+0xf7001674>
    16b8:	9021883a 	mov	r16,r18
    16bc:	b025883a 	mov	r18,r22
    16c0:	882d883a 	mov	r22,r17
    16c4:	dc402a17 	ldw	r17,168(sp)
    16c8:	d9002c17 	ldw	r4,176(sp)
    16cc:	1d87883a 	add	r3,r3,r22
    16d0:	10800044 	addi	r2,r2,1
    16d4:	41000015 	stw	r4,0(r8)
    16d8:	45800115 	stw	r22,4(r8)
    16dc:	d8c02015 	stw	r3,128(sp)
    16e0:	d8801f15 	stw	r2,124(sp)
    16e4:	010001c4 	movi	r4,7
    16e8:	20820e16 	blt	r4,r2,1f24 <___svfprintf_internal_r+0x1190>
    16ec:	42000204 	addi	r8,r8,8
    16f0:	9080400c 	andi	r2,r18,256
    16f4:	10013a1e 	bne	r2,zero,1be0 <___svfprintf_internal_r+0xe4c>
    16f8:	d9402b17 	ldw	r5,172(sp)
    16fc:	d8801f17 	ldw	r2,124(sp)
    1700:	44000015 	stw	r16,0(r8)
    1704:	1947883a 	add	r3,r3,r5
    1708:	10800044 	addi	r2,r2,1
    170c:	41400115 	stw	r5,4(r8)
    1710:	d8c02015 	stw	r3,128(sp)
    1714:	d8801f15 	stw	r2,124(sp)
    1718:	010001c4 	movi	r4,7
    171c:	2081f316 	blt	r4,r2,1eec <___svfprintf_internal_r+0x1158>
    1720:	42000204 	addi	r8,r8,8
    1724:	9480010c 	andi	r18,r18,4
    1728:	90003226 	beq	r18,zero,17f4 <___svfprintf_internal_r+0xa60>
    172c:	d9403117 	ldw	r5,196(sp)
    1730:	d8802917 	ldw	r2,164(sp)
    1734:	28a1c83a 	sub	r16,r5,r2
    1738:	04002e0e 	bge	zero,r16,17f4 <___svfprintf_internal_r+0xa60>
    173c:	04400404 	movi	r17,16
    1740:	d8801f17 	ldw	r2,124(sp)
    1744:	8c04db0e 	bge	r17,r16,2ab4 <___svfprintf_internal_r+0x1d20>
    1748:	01400074 	movhi	r5,1
    174c:	29786784 	addi	r5,r5,-7778
    1750:	d9403515 	stw	r5,212(sp)
    1754:	048001c4 	movi	r18,7
    1758:	dd002d17 	ldw	r20,180(sp)
    175c:	00000306 	br	176c <___svfprintf_internal_r+0x9d8>
    1760:	843ffc04 	addi	r16,r16,-16
    1764:	42000204 	addi	r8,r8,8
    1768:	8c00130e 	bge	r17,r16,17b8 <___svfprintf_internal_r+0xa24>
    176c:	01000074 	movhi	r4,1
    1770:	18c00404 	addi	r3,r3,16
    1774:	10800044 	addi	r2,r2,1
    1778:	21386784 	addi	r4,r4,-7778
    177c:	41000015 	stw	r4,0(r8)
    1780:	44400115 	stw	r17,4(r8)
    1784:	d8c02015 	stw	r3,128(sp)
    1788:	d8801f15 	stw	r2,124(sp)
    178c:	90bff40e 	bge	r18,r2,1760 <__alt_mem_onchip_memory2_0+0xf7001760>
    1790:	d9801e04 	addi	r6,sp,120
    1794:	a00b883a 	mov	r5,r20
    1798:	9809883a 	mov	r4,r19
    179c:	00066700 	call	6670 <__ssprint_r>
    17a0:	103e631e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    17a4:	843ffc04 	addi	r16,r16,-16
    17a8:	d8c02017 	ldw	r3,128(sp)
    17ac:	d8801f17 	ldw	r2,124(sp)
    17b0:	da000404 	addi	r8,sp,16
    17b4:	8c3fed16 	blt	r17,r16,176c <__alt_mem_onchip_memory2_0+0xf700176c>
    17b8:	d9403517 	ldw	r5,212(sp)
    17bc:	1c07883a 	add	r3,r3,r16
    17c0:	10800044 	addi	r2,r2,1
    17c4:	41400015 	stw	r5,0(r8)
    17c8:	44000115 	stw	r16,4(r8)
    17cc:	d8c02015 	stw	r3,128(sp)
    17d0:	d8801f15 	stw	r2,124(sp)
    17d4:	010001c4 	movi	r4,7
    17d8:	2080060e 	bge	r4,r2,17f4 <___svfprintf_internal_r+0xa60>
    17dc:	d9402d17 	ldw	r5,180(sp)
    17e0:	d9801e04 	addi	r6,sp,120
    17e4:	9809883a 	mov	r4,r19
    17e8:	00066700 	call	6670 <__ssprint_r>
    17ec:	103e501e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    17f0:	d8c02017 	ldw	r3,128(sp)
    17f4:	d8803117 	ldw	r2,196(sp)
    17f8:	d9002917 	ldw	r4,164(sp)
    17fc:	1100010e 	bge	r2,r4,1804 <___svfprintf_internal_r+0xa70>
    1800:	2005883a 	mov	r2,r4
    1804:	d9402f17 	ldw	r5,188(sp)
    1808:	288b883a 	add	r5,r5,r2
    180c:	d9402f15 	stw	r5,188(sp)
    1810:	1801be1e 	bne	r3,zero,1f0c <___svfprintf_internal_r+0x1178>
    1814:	b8800007 	ldb	r2,0(r23)
    1818:	d8001f15 	stw	zero,124(sp)
    181c:	da000404 	addi	r8,sp,16
    1820:	103d891e 	bne	r2,zero,e48 <__alt_mem_onchip_memory2_0+0xf7000e48>
    1824:	b823883a 	mov	r17,r23
    1828:	003d9f06 	br	ea8 <__alt_mem_onchip_memory2_0+0xf7000ea8>
    182c:	8025883a 	mov	r18,r16
    1830:	dc002903 	ldbu	r16,164(sp)
    1834:	e011883a 	mov	r8,fp
    1838:	84003fcc 	andi	r16,r16,255
    183c:	8005e61e 	bne	r16,zero,2fd8 <___svfprintf_internal_r+0x2244>
    1840:	94800414 	ori	r18,r18,16
    1844:	9080080c 	andi	r2,r18,32
    1848:	10022026 	beq	r2,zero,20cc <___svfprintf_internal_r+0x1338>
    184c:	d9002e17 	ldw	r4,184(sp)
    1850:	d9402a17 	ldw	r5,168(sp)
    1854:	d8002785 	stb	zero,158(sp)
    1858:	20c00204 	addi	r3,r4,8
    185c:	25000017 	ldw	r20,0(r4)
    1860:	25800117 	ldw	r22,4(r4)
    1864:	2803ad16 	blt	r5,zero,271c <___svfprintf_internal_r+0x1988>
    1868:	013fdfc4 	movi	r4,-129
    186c:	a584b03a 	or	r2,r20,r22
    1870:	d8c02e15 	stw	r3,184(sp)
    1874:	9124703a 	and	r18,r18,r4
    1878:	0039883a 	mov	fp,zero
    187c:	103eb01e 	bne	r2,zero,1340 <__alt_mem_onchip_memory2_0+0xf7001340>
    1880:	d8802a17 	ldw	r2,168(sp)
    1884:	1002e71e 	bne	r2,zero,2424 <___svfprintf_internal_r+0x1690>
    1888:	d8002a15 	stw	zero,168(sp)
    188c:	d8002b15 	stw	zero,172(sp)
    1890:	dc001e04 	addi	r16,sp,120
    1894:	003ef706 	br	1474 <__alt_mem_onchip_memory2_0+0xf7001474>
    1898:	8025883a 	mov	r18,r16
    189c:	dc002903 	ldbu	r16,164(sp)
    18a0:	e011883a 	mov	r8,fp
    18a4:	84003fcc 	andi	r16,r16,255
    18a8:	8005c81e 	bne	r16,zero,2fcc <___svfprintf_internal_r+0x2238>
    18ac:	01000074 	movhi	r4,1
    18b0:	21385704 	addi	r4,r4,-7844
    18b4:	d9003a15 	stw	r4,232(sp)
    18b8:	9080080c 	andi	r2,r18,32
    18bc:	10007226 	beq	r2,zero,1a88 <___svfprintf_internal_r+0xcf4>
    18c0:	d9402e17 	ldw	r5,184(sp)
    18c4:	2d000017 	ldw	r20,0(r5)
    18c8:	2d800117 	ldw	r22,4(r5)
    18cc:	29400204 	addi	r5,r5,8
    18d0:	d9402e15 	stw	r5,184(sp)
    18d4:	9080004c 	andi	r2,r18,1
    18d8:	1001aa26 	beq	r2,zero,1f84 <___svfprintf_internal_r+0x11f0>
    18dc:	a584b03a 	or	r2,r20,r22
    18e0:	10032526 	beq	r2,zero,2578 <___svfprintf_internal_r+0x17e4>
    18e4:	d8c02a17 	ldw	r3,168(sp)
    18e8:	00800c04 	movi	r2,48
    18ec:	d8802705 	stb	r2,156(sp)
    18f0:	dc402745 	stb	r17,157(sp)
    18f4:	d8002785 	stb	zero,158(sp)
    18f8:	90800094 	ori	r2,r18,2
    18fc:	1804a316 	blt	r3,zero,2b8c <___svfprintf_internal_r+0x1df8>
    1900:	00bfdfc4 	movi	r2,-129
    1904:	90a4703a 	and	r18,r18,r2
    1908:	94800094 	ori	r18,r18,2
    190c:	0039883a 	mov	fp,zero
    1910:	d9003a17 	ldw	r4,232(sp)
    1914:	dc001e04 	addi	r16,sp,120
    1918:	a08003cc 	andi	r2,r20,15
    191c:	b006973a 	slli	r3,r22,28
    1920:	2085883a 	add	r2,r4,r2
    1924:	a028d13a 	srli	r20,r20,4
    1928:	10800003 	ldbu	r2,0(r2)
    192c:	b02cd13a 	srli	r22,r22,4
    1930:	843fffc4 	addi	r16,r16,-1
    1934:	1d28b03a 	or	r20,r3,r20
    1938:	80800005 	stb	r2,0(r16)
    193c:	a584b03a 	or	r2,r20,r22
    1940:	103ff51e 	bne	r2,zero,1918 <__alt_mem_onchip_memory2_0+0xf7001918>
    1944:	d8c02817 	ldw	r3,160(sp)
    1948:	1c07c83a 	sub	r3,r3,r16
    194c:	d8c02b15 	stw	r3,172(sp)
    1950:	003ec806 	br	1474 <__alt_mem_onchip_memory2_0+0xf7001474>
    1954:	d8c02e17 	ldw	r3,184(sp)
    1958:	d9002e17 	ldw	r4,184(sp)
    195c:	8025883a 	mov	r18,r16
    1960:	18800017 	ldw	r2,0(r3)
    1964:	21000104 	addi	r4,r4,4
    1968:	00c00044 	movi	r3,1
    196c:	e011883a 	mov	r8,fp
    1970:	d8c02915 	stw	r3,164(sp)
    1974:	d8002785 	stb	zero,158(sp)
    1978:	d8801405 	stb	r2,80(sp)
    197c:	d9002e15 	stw	r4,184(sp)
    1980:	d8c02b15 	stw	r3,172(sp)
    1984:	d8002a15 	stw	zero,168(sp)
    1988:	d8003215 	stw	zero,200(sp)
    198c:	dc001404 	addi	r16,sp,80
    1990:	0039883a 	mov	fp,zero
    1994:	003ec406 	br	14a8 <__alt_mem_onchip_memory2_0+0xf70014a8>
    1998:	8025883a 	mov	r18,r16
    199c:	dc002903 	ldbu	r16,164(sp)
    19a0:	e011883a 	mov	r8,fp
    19a4:	84003fcc 	andi	r16,r16,255
    19a8:	803e8726 	beq	r16,zero,13c8 <__alt_mem_onchip_memory2_0+0xf70013c8>
    19ac:	d8c02b03 	ldbu	r3,172(sp)
    19b0:	d8c02785 	stb	r3,158(sp)
    19b4:	003e8406 	br	13c8 <__alt_mem_onchip_memory2_0+0xf70013c8>
    19b8:	00c00044 	movi	r3,1
    19bc:	d8c02905 	stb	r3,164(sp)
    19c0:	00c00ac4 	movi	r3,43
    19c4:	d8c02b05 	stb	r3,172(sp)
    19c8:	bc400007 	ldb	r17,0(r23)
    19cc:	003d4606 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    19d0:	84000814 	ori	r16,r16,32
    19d4:	bc400007 	ldb	r17,0(r23)
    19d8:	003d4306 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    19dc:	d8802e17 	ldw	r2,184(sp)
    19e0:	8025883a 	mov	r18,r16
    19e4:	d8002785 	stb	zero,158(sp)
    19e8:	14000017 	ldw	r16,0(r2)
    19ec:	e011883a 	mov	r8,fp
    19f0:	15000104 	addi	r20,r2,4
    19f4:	80042126 	beq	r16,zero,2a7c <___svfprintf_internal_r+0x1ce8>
    19f8:	d8c02a17 	ldw	r3,168(sp)
    19fc:	1803ee16 	blt	r3,zero,29b8 <___svfprintf_internal_r+0x1c24>
    1a00:	180d883a 	mov	r6,r3
    1a04:	000b883a 	mov	r5,zero
    1a08:	8009883a 	mov	r4,r16
    1a0c:	df003e15 	stw	fp,248(sp)
    1a10:	00051e80 	call	51e8 <memchr>
    1a14:	da003e17 	ldw	r8,248(sp)
    1a18:	10046a26 	beq	r2,zero,2bc4 <___svfprintf_internal_r+0x1e30>
    1a1c:	1405c83a 	sub	r2,r2,r16
    1a20:	d8802b15 	stw	r2,172(sp)
    1a24:	1003ea16 	blt	r2,zero,29d0 <___svfprintf_internal_r+0x1c3c>
    1a28:	df002783 	ldbu	fp,158(sp)
    1a2c:	d8802915 	stw	r2,164(sp)
    1a30:	dd002e15 	stw	r20,184(sp)
    1a34:	d8002a15 	stw	zero,168(sp)
    1a38:	d8003215 	stw	zero,200(sp)
    1a3c:	003e9306 	br	148c <__alt_mem_onchip_memory2_0+0xf700148c>
    1a40:	8025883a 	mov	r18,r16
    1a44:	dc002903 	ldbu	r16,164(sp)
    1a48:	e011883a 	mov	r8,fp
    1a4c:	84003fcc 	andi	r16,r16,255
    1a50:	803f7c26 	beq	r16,zero,1844 <__alt_mem_onchip_memory2_0+0xf7001844>
    1a54:	d8c02b03 	ldbu	r3,172(sp)
    1a58:	d8c02785 	stb	r3,158(sp)
    1a5c:	003f7906 	br	1844 <__alt_mem_onchip_memory2_0+0xf7001844>
    1a60:	8025883a 	mov	r18,r16
    1a64:	dc002903 	ldbu	r16,164(sp)
    1a68:	e011883a 	mov	r8,fp
    1a6c:	84003fcc 	andi	r16,r16,255
    1a70:	8005741e 	bne	r16,zero,3044 <___svfprintf_internal_r+0x22b0>
    1a74:	01000074 	movhi	r4,1
    1a78:	21385c04 	addi	r4,r4,-7824
    1a7c:	d9003a15 	stw	r4,232(sp)
    1a80:	9080080c 	andi	r2,r18,32
    1a84:	103f8e1e 	bne	r2,zero,18c0 <__alt_mem_onchip_memory2_0+0xf70018c0>
    1a88:	9080040c 	andi	r2,r18,16
    1a8c:	1002a726 	beq	r2,zero,252c <___svfprintf_internal_r+0x1798>
    1a90:	d8802e17 	ldw	r2,184(sp)
    1a94:	002d883a 	mov	r22,zero
    1a98:	15000017 	ldw	r20,0(r2)
    1a9c:	10800104 	addi	r2,r2,4
    1aa0:	d8802e15 	stw	r2,184(sp)
    1aa4:	003f8b06 	br	18d4 <__alt_mem_onchip_memory2_0+0xf70018d4>
    1aa8:	84000054 	ori	r16,r16,1
    1aac:	bc400007 	ldb	r17,0(r23)
    1ab0:	003d0d06 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    1ab4:	d8802b07 	ldb	r2,172(sp)
    1ab8:	1002a41e 	bne	r2,zero,254c <___svfprintf_internal_r+0x17b8>
    1abc:	00c00044 	movi	r3,1
    1ac0:	d8c02905 	stb	r3,164(sp)
    1ac4:	00c00804 	movi	r3,32
    1ac8:	d8c02b05 	stb	r3,172(sp)
    1acc:	bc400007 	ldb	r17,0(r23)
    1ad0:	003d0506 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    1ad4:	8025883a 	mov	r18,r16
    1ad8:	dc002903 	ldbu	r16,164(sp)
    1adc:	e011883a 	mov	r8,fp
    1ae0:	84003fcc 	andi	r16,r16,255
    1ae4:	803e0626 	beq	r16,zero,1300 <__alt_mem_onchip_memory2_0+0xf7001300>
    1ae8:	d8c02b03 	ldbu	r3,172(sp)
    1aec:	d8c02785 	stb	r3,158(sp)
    1af0:	003e0306 	br	1300 <__alt_mem_onchip_memory2_0+0xf7001300>
    1af4:	bc400007 	ldb	r17,0(r23)
    1af8:	00801b04 	movi	r2,108
    1afc:	88830a26 	beq	r17,r2,2728 <___svfprintf_internal_r+0x1994>
    1b00:	84000414 	ori	r16,r16,16
    1b04:	003cf806 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    1b08:	8025883a 	mov	r18,r16
    1b0c:	dc002903 	ldbu	r16,164(sp)
    1b10:	e011883a 	mov	r8,fp
    1b14:	84003fcc 	andi	r16,r16,255
    1b18:	8005471e 	bne	r16,zero,3038 <___svfprintf_internal_r+0x22a4>
    1b1c:	9080080c 	andi	r2,r18,32
    1b20:	10028c26 	beq	r2,zero,2554 <___svfprintf_internal_r+0x17c0>
    1b24:	d9002e17 	ldw	r4,184(sp)
    1b28:	d9402f17 	ldw	r5,188(sp)
    1b2c:	20800017 	ldw	r2,0(r4)
    1b30:	2807d7fa 	srai	r3,r5,31
    1b34:	21000104 	addi	r4,r4,4
    1b38:	d9002e15 	stw	r4,184(sp)
    1b3c:	11400015 	stw	r5,0(r2)
    1b40:	10c00115 	stw	r3,4(r2)
    1b44:	003cbe06 	br	e40 <__alt_mem_onchip_memory2_0+0xf7000e40>
    1b48:	84001014 	ori	r16,r16,64
    1b4c:	bc400007 	ldb	r17,0(r23)
    1b50:	003ce506 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    1b54:	01000074 	movhi	r4,1
    1b58:	21385c04 	addi	r4,r4,-7824
    1b5c:	0039883a 	mov	fp,zero
    1b60:	d9003a15 	stw	r4,232(sp)
    1b64:	04401e04 	movi	r17,120
    1b68:	003f6906 	br	1910 <__alt_mem_onchip_memory2_0+0xf7001910>
    1b6c:	8025883a 	mov	r18,r16
    1b70:	dc002903 	ldbu	r16,164(sp)
    1b74:	e011883a 	mov	r8,fp
    1b78:	84003fcc 	andi	r16,r16,255
    1b7c:	8005261e 	bne	r16,zero,3018 <___svfprintf_internal_r+0x2284>
    1b80:	883d6526 	beq	r17,zero,1118 <__alt_mem_onchip_memory2_0+0xf7001118>
    1b84:	00c00044 	movi	r3,1
    1b88:	d8c02915 	stw	r3,164(sp)
    1b8c:	dc401405 	stb	r17,80(sp)
    1b90:	d8002785 	stb	zero,158(sp)
    1b94:	003f7a06 	br	1980 <__alt_mem_onchip_memory2_0+0xf7001980>
    1b98:	01000074 	movhi	r4,1
    1b9c:	21385c04 	addi	r4,r4,-7824
    1ba0:	d9003a15 	stw	r4,232(sp)
    1ba4:	d8c02e15 	stw	r3,184(sp)
    1ba8:	1025883a 	mov	r18,r2
    1bac:	04401e04 	movi	r17,120
    1bb0:	a584b03a 	or	r2,r20,r22
    1bb4:	1000fa1e 	bne	r2,zero,1fa0 <___svfprintf_internal_r+0x120c>
    1bb8:	0039883a 	mov	fp,zero
    1bbc:	00800084 	movi	r2,2
    1bc0:	10803fcc 	andi	r2,r2,255
    1bc4:	00c00044 	movi	r3,1
    1bc8:	10c21626 	beq	r2,r3,2424 <___svfprintf_internal_r+0x1690>
    1bcc:	00c00084 	movi	r3,2
    1bd0:	10fe0e1e 	bne	r2,r3,140c <__alt_mem_onchip_memory2_0+0xf700140c>
    1bd4:	003d4606 	br	10f0 <__alt_mem_onchip_memory2_0+0xf70010f0>
    1bd8:	d8c02017 	ldw	r3,128(sp)
    1bdc:	003e7306 	br	15ac <__alt_mem_onchip_memory2_0+0xf70015ac>
    1be0:	00801944 	movi	r2,101
    1be4:	14407c0e 	bge	r2,r17,1dd8 <___svfprintf_internal_r+0x1044>
    1be8:	d9003617 	ldw	r4,216(sp)
    1bec:	d9403717 	ldw	r5,220(sp)
    1bf0:	000d883a 	mov	r6,zero
    1bf4:	000f883a 	mov	r7,zero
    1bf8:	d8c03d15 	stw	r3,244(sp)
    1bfc:	da003e15 	stw	r8,248(sp)
    1c00:	000a8200 	call	a820 <__eqdf2>
    1c04:	d8c03d17 	ldw	r3,244(sp)
    1c08:	da003e17 	ldw	r8,248(sp)
    1c0c:	1000f51e 	bne	r2,zero,1fe4 <___svfprintf_internal_r+0x1250>
    1c10:	d8801f17 	ldw	r2,124(sp)
    1c14:	01000074 	movhi	r4,1
    1c18:	21386304 	addi	r4,r4,-7796
    1c1c:	18c00044 	addi	r3,r3,1
    1c20:	10800044 	addi	r2,r2,1
    1c24:	41000015 	stw	r4,0(r8)
    1c28:	01000044 	movi	r4,1
    1c2c:	41000115 	stw	r4,4(r8)
    1c30:	d8c02015 	stw	r3,128(sp)
    1c34:	d8801f15 	stw	r2,124(sp)
    1c38:	010001c4 	movi	r4,7
    1c3c:	20826616 	blt	r4,r2,25d8 <___svfprintf_internal_r+0x1844>
    1c40:	42000204 	addi	r8,r8,8
    1c44:	d8802617 	ldw	r2,152(sp)
    1c48:	d9403317 	ldw	r5,204(sp)
    1c4c:	11400216 	blt	r2,r5,1c58 <___svfprintf_internal_r+0xec4>
    1c50:	9080004c 	andi	r2,r18,1
    1c54:	103eb326 	beq	r2,zero,1724 <__alt_mem_onchip_memory2_0+0xf7001724>
    1c58:	d8803817 	ldw	r2,224(sp)
    1c5c:	d9003417 	ldw	r4,208(sp)
    1c60:	d9403817 	ldw	r5,224(sp)
    1c64:	1887883a 	add	r3,r3,r2
    1c68:	d8801f17 	ldw	r2,124(sp)
    1c6c:	41000015 	stw	r4,0(r8)
    1c70:	41400115 	stw	r5,4(r8)
    1c74:	10800044 	addi	r2,r2,1
    1c78:	d8c02015 	stw	r3,128(sp)
    1c7c:	d8801f15 	stw	r2,124(sp)
    1c80:	010001c4 	movi	r4,7
    1c84:	2082af16 	blt	r4,r2,2744 <___svfprintf_internal_r+0x19b0>
    1c88:	42000204 	addi	r8,r8,8
    1c8c:	d8803317 	ldw	r2,204(sp)
    1c90:	143fffc4 	addi	r16,r2,-1
    1c94:	043ea30e 	bge	zero,r16,1724 <__alt_mem_onchip_memory2_0+0xf7001724>
    1c98:	04400404 	movi	r17,16
    1c9c:	d8801f17 	ldw	r2,124(sp)
    1ca0:	8c00860e 	bge	r17,r16,1ebc <___svfprintf_internal_r+0x1128>
    1ca4:	01400074 	movhi	r5,1
    1ca8:	29786384 	addi	r5,r5,-7794
    1cac:	d9402c15 	stw	r5,176(sp)
    1cb0:	058001c4 	movi	r22,7
    1cb4:	dd002d17 	ldw	r20,180(sp)
    1cb8:	00000306 	br	1cc8 <___svfprintf_internal_r+0xf34>
    1cbc:	42000204 	addi	r8,r8,8
    1cc0:	843ffc04 	addi	r16,r16,-16
    1cc4:	8c00800e 	bge	r17,r16,1ec8 <___svfprintf_internal_r+0x1134>
    1cc8:	18c00404 	addi	r3,r3,16
    1ccc:	10800044 	addi	r2,r2,1
    1cd0:	45400015 	stw	r21,0(r8)
    1cd4:	44400115 	stw	r17,4(r8)
    1cd8:	d8c02015 	stw	r3,128(sp)
    1cdc:	d8801f15 	stw	r2,124(sp)
    1ce0:	b0bff60e 	bge	r22,r2,1cbc <__alt_mem_onchip_memory2_0+0xf7001cbc>
    1ce4:	d9801e04 	addi	r6,sp,120
    1ce8:	a00b883a 	mov	r5,r20
    1cec:	9809883a 	mov	r4,r19
    1cf0:	00066700 	call	6670 <__ssprint_r>
    1cf4:	103d0e1e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    1cf8:	d8c02017 	ldw	r3,128(sp)
    1cfc:	d8801f17 	ldw	r2,124(sp)
    1d00:	da000404 	addi	r8,sp,16
    1d04:	003fee06 	br	1cc0 <__alt_mem_onchip_memory2_0+0xf7001cc0>
    1d08:	d9403117 	ldw	r5,196(sp)
    1d0c:	d8802917 	ldw	r2,164(sp)
    1d10:	28adc83a 	sub	r22,r5,r2
    1d14:	05be430e 	bge	zero,r22,1624 <__alt_mem_onchip_memory2_0+0xf7001624>
    1d18:	07000404 	movi	fp,16
    1d1c:	d8801f17 	ldw	r2,124(sp)
    1d20:	e583a20e 	bge	fp,r22,2bac <___svfprintf_internal_r+0x1e18>
    1d24:	01400074 	movhi	r5,1
    1d28:	29786384 	addi	r5,r5,-7794
    1d2c:	dc403015 	stw	r17,192(sp)
    1d30:	d9402c15 	stw	r5,176(sp)
    1d34:	b023883a 	mov	r17,r22
    1d38:	050001c4 	movi	r20,7
    1d3c:	902d883a 	mov	r22,r18
    1d40:	8025883a 	mov	r18,r16
    1d44:	dc002d17 	ldw	r16,180(sp)
    1d48:	00000306 	br	1d58 <___svfprintf_internal_r+0xfc4>
    1d4c:	8c7ffc04 	addi	r17,r17,-16
    1d50:	42000204 	addi	r8,r8,8
    1d54:	e440110e 	bge	fp,r17,1d9c <___svfprintf_internal_r+0x1008>
    1d58:	18c00404 	addi	r3,r3,16
    1d5c:	10800044 	addi	r2,r2,1
    1d60:	45400015 	stw	r21,0(r8)
    1d64:	47000115 	stw	fp,4(r8)
    1d68:	d8c02015 	stw	r3,128(sp)
    1d6c:	d8801f15 	stw	r2,124(sp)
    1d70:	a0bff60e 	bge	r20,r2,1d4c <__alt_mem_onchip_memory2_0+0xf7001d4c>
    1d74:	d9801e04 	addi	r6,sp,120
    1d78:	800b883a 	mov	r5,r16
    1d7c:	9809883a 	mov	r4,r19
    1d80:	00066700 	call	6670 <__ssprint_r>
    1d84:	103cea1e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    1d88:	8c7ffc04 	addi	r17,r17,-16
    1d8c:	d8c02017 	ldw	r3,128(sp)
    1d90:	d8801f17 	ldw	r2,124(sp)
    1d94:	da000404 	addi	r8,sp,16
    1d98:	e47fef16 	blt	fp,r17,1d58 <__alt_mem_onchip_memory2_0+0xf7001d58>
    1d9c:	9021883a 	mov	r16,r18
    1da0:	b025883a 	mov	r18,r22
    1da4:	882d883a 	mov	r22,r17
    1da8:	dc403017 	ldw	r17,192(sp)
    1dac:	d9002c17 	ldw	r4,176(sp)
    1db0:	1d87883a 	add	r3,r3,r22
    1db4:	10800044 	addi	r2,r2,1
    1db8:	41000015 	stw	r4,0(r8)
    1dbc:	45800115 	stw	r22,4(r8)
    1dc0:	d8c02015 	stw	r3,128(sp)
    1dc4:	d8801f15 	stw	r2,124(sp)
    1dc8:	010001c4 	movi	r4,7
    1dcc:	20819a16 	blt	r4,r2,2438 <___svfprintf_internal_r+0x16a4>
    1dd0:	42000204 	addi	r8,r8,8
    1dd4:	003e1306 	br	1624 <__alt_mem_onchip_memory2_0+0xf7001624>
    1dd8:	d9403317 	ldw	r5,204(sp)
    1ddc:	00800044 	movi	r2,1
    1de0:	18c00044 	addi	r3,r3,1
    1de4:	1141710e 	bge	r2,r5,23ac <___svfprintf_internal_r+0x1618>
    1de8:	dc401f17 	ldw	r17,124(sp)
    1dec:	00800044 	movi	r2,1
    1df0:	40800115 	stw	r2,4(r8)
    1df4:	8c400044 	addi	r17,r17,1
    1df8:	44000015 	stw	r16,0(r8)
    1dfc:	d8c02015 	stw	r3,128(sp)
    1e00:	dc401f15 	stw	r17,124(sp)
    1e04:	008001c4 	movi	r2,7
    1e08:	14417416 	blt	r2,r17,23dc <___svfprintf_internal_r+0x1648>
    1e0c:	42000204 	addi	r8,r8,8
    1e10:	d8803817 	ldw	r2,224(sp)
    1e14:	d9003417 	ldw	r4,208(sp)
    1e18:	8c400044 	addi	r17,r17,1
    1e1c:	10c7883a 	add	r3,r2,r3
    1e20:	40800115 	stw	r2,4(r8)
    1e24:	41000015 	stw	r4,0(r8)
    1e28:	d8c02015 	stw	r3,128(sp)
    1e2c:	dc401f15 	stw	r17,124(sp)
    1e30:	008001c4 	movi	r2,7
    1e34:	14417216 	blt	r2,r17,2400 <___svfprintf_internal_r+0x166c>
    1e38:	45800204 	addi	r22,r8,8
    1e3c:	d9003617 	ldw	r4,216(sp)
    1e40:	d9403717 	ldw	r5,220(sp)
    1e44:	000d883a 	mov	r6,zero
    1e48:	000f883a 	mov	r7,zero
    1e4c:	d8c03d15 	stw	r3,244(sp)
    1e50:	000a8200 	call	a820 <__eqdf2>
    1e54:	d8c03d17 	ldw	r3,244(sp)
    1e58:	1000b326 	beq	r2,zero,2128 <___svfprintf_internal_r+0x1394>
    1e5c:	d9403317 	ldw	r5,204(sp)
    1e60:	84000044 	addi	r16,r16,1
    1e64:	8c400044 	addi	r17,r17,1
    1e68:	28bfffc4 	addi	r2,r5,-1
    1e6c:	1887883a 	add	r3,r3,r2
    1e70:	b0800115 	stw	r2,4(r22)
    1e74:	b4000015 	stw	r16,0(r22)
    1e78:	d8c02015 	stw	r3,128(sp)
    1e7c:	dc401f15 	stw	r17,124(sp)
    1e80:	008001c4 	movi	r2,7
    1e84:	1440d216 	blt	r2,r17,21d0 <___svfprintf_internal_r+0x143c>
    1e88:	b5800204 	addi	r22,r22,8
    1e8c:	d9003b17 	ldw	r4,236(sp)
    1e90:	df0022c4 	addi	fp,sp,139
    1e94:	8c400044 	addi	r17,r17,1
    1e98:	20c7883a 	add	r3,r4,r3
    1e9c:	b7000015 	stw	fp,0(r22)
    1ea0:	b1000115 	stw	r4,4(r22)
    1ea4:	d8c02015 	stw	r3,128(sp)
    1ea8:	dc401f15 	stw	r17,124(sp)
    1eac:	008001c4 	movi	r2,7
    1eb0:	14400e16 	blt	r2,r17,1eec <___svfprintf_internal_r+0x1158>
    1eb4:	b2000204 	addi	r8,r22,8
    1eb8:	003e1a06 	br	1724 <__alt_mem_onchip_memory2_0+0xf7001724>
    1ebc:	01000074 	movhi	r4,1
    1ec0:	21386384 	addi	r4,r4,-7794
    1ec4:	d9002c15 	stw	r4,176(sp)
    1ec8:	d9002c17 	ldw	r4,176(sp)
    1ecc:	1c07883a 	add	r3,r3,r16
    1ed0:	44000115 	stw	r16,4(r8)
    1ed4:	41000015 	stw	r4,0(r8)
    1ed8:	10800044 	addi	r2,r2,1
    1edc:	d8c02015 	stw	r3,128(sp)
    1ee0:	d8801f15 	stw	r2,124(sp)
    1ee4:	010001c4 	movi	r4,7
    1ee8:	20be0d0e 	bge	r4,r2,1720 <__alt_mem_onchip_memory2_0+0xf7001720>
    1eec:	d9402d17 	ldw	r5,180(sp)
    1ef0:	d9801e04 	addi	r6,sp,120
    1ef4:	9809883a 	mov	r4,r19
    1ef8:	00066700 	call	6670 <__ssprint_r>
    1efc:	103c8c1e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    1f00:	d8c02017 	ldw	r3,128(sp)
    1f04:	da000404 	addi	r8,sp,16
    1f08:	003e0606 	br	1724 <__alt_mem_onchip_memory2_0+0xf7001724>
    1f0c:	d9402d17 	ldw	r5,180(sp)
    1f10:	d9801e04 	addi	r6,sp,120
    1f14:	9809883a 	mov	r4,r19
    1f18:	00066700 	call	6670 <__ssprint_r>
    1f1c:	103e3d26 	beq	r2,zero,1814 <__alt_mem_onchip_memory2_0+0xf7001814>
    1f20:	003c8306 	br	1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    1f24:	d9402d17 	ldw	r5,180(sp)
    1f28:	d9801e04 	addi	r6,sp,120
    1f2c:	9809883a 	mov	r4,r19
    1f30:	00066700 	call	6670 <__ssprint_r>
    1f34:	103c7e1e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    1f38:	d8c02017 	ldw	r3,128(sp)
    1f3c:	da000404 	addi	r8,sp,16
    1f40:	003deb06 	br	16f0 <__alt_mem_onchip_memory2_0+0xf70016f0>
    1f44:	d9402d17 	ldw	r5,180(sp)
    1f48:	d9801e04 	addi	r6,sp,120
    1f4c:	9809883a 	mov	r4,r19
    1f50:	00066700 	call	6670 <__ssprint_r>
    1f54:	103c761e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    1f58:	d8c02017 	ldw	r3,128(sp)
    1f5c:	da000404 	addi	r8,sp,16
    1f60:	003d9f06 	br	15e0 <__alt_mem_onchip_memory2_0+0xf70015e0>
    1f64:	d9402d17 	ldw	r5,180(sp)
    1f68:	d9801e04 	addi	r6,sp,120
    1f6c:	9809883a 	mov	r4,r19
    1f70:	00066700 	call	6670 <__ssprint_r>
    1f74:	103c6e1e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    1f78:	d8c02017 	ldw	r3,128(sp)
    1f7c:	da000404 	addi	r8,sp,16
    1f80:	003da506 	br	1618 <__alt_mem_onchip_memory2_0+0xf7001618>
    1f84:	d9402a17 	ldw	r5,168(sp)
    1f88:	d8002785 	stb	zero,158(sp)
    1f8c:	283f0816 	blt	r5,zero,1bb0 <__alt_mem_onchip_memory2_0+0xf7001bb0>
    1f90:	00ffdfc4 	movi	r3,-129
    1f94:	a584b03a 	or	r2,r20,r22
    1f98:	90e4703a 	and	r18,r18,r3
    1f9c:	103c5126 	beq	r2,zero,10e4 <__alt_mem_onchip_memory2_0+0xf70010e4>
    1fa0:	0039883a 	mov	fp,zero
    1fa4:	003e5a06 	br	1910 <__alt_mem_onchip_memory2_0+0xf7001910>
    1fa8:	9080040c 	andi	r2,r18,16
    1fac:	10013d26 	beq	r2,zero,24a4 <___svfprintf_internal_r+0x1710>
    1fb0:	d8c02e17 	ldw	r3,184(sp)
    1fb4:	d9002a17 	ldw	r4,168(sp)
    1fb8:	d8002785 	stb	zero,158(sp)
    1fbc:	18800104 	addi	r2,r3,4
    1fc0:	1d000017 	ldw	r20,0(r3)
    1fc4:	002d883a 	mov	r22,zero
    1fc8:	20013f16 	blt	r4,zero,24c8 <___svfprintf_internal_r+0x1734>
    1fcc:	00ffdfc4 	movi	r3,-129
    1fd0:	d8802e15 	stw	r2,184(sp)
    1fd4:	90e4703a 	and	r18,r18,r3
    1fd8:	a03d0926 	beq	r20,zero,1400 <__alt_mem_onchip_memory2_0+0xf7001400>
    1fdc:	0039883a 	mov	fp,zero
    1fe0:	003d0c06 	br	1414 <__alt_mem_onchip_memory2_0+0xf7001414>
    1fe4:	dc402617 	ldw	r17,152(sp)
    1fe8:	0441830e 	bge	zero,r17,25f8 <___svfprintf_internal_r+0x1864>
    1fec:	dc403217 	ldw	r17,200(sp)
    1ff0:	d8803317 	ldw	r2,204(sp)
    1ff4:	1440010e 	bge	r2,r17,1ffc <___svfprintf_internal_r+0x1268>
    1ff8:	1023883a 	mov	r17,r2
    1ffc:	04400a0e 	bge	zero,r17,2028 <___svfprintf_internal_r+0x1294>
    2000:	d8801f17 	ldw	r2,124(sp)
    2004:	1c47883a 	add	r3,r3,r17
    2008:	44000015 	stw	r16,0(r8)
    200c:	10800044 	addi	r2,r2,1
    2010:	44400115 	stw	r17,4(r8)
    2014:	d8c02015 	stw	r3,128(sp)
    2018:	d8801f15 	stw	r2,124(sp)
    201c:	010001c4 	movi	r4,7
    2020:	20827516 	blt	r4,r2,29f8 <___svfprintf_internal_r+0x1c64>
    2024:	42000204 	addi	r8,r8,8
    2028:	88027b16 	blt	r17,zero,2a18 <___svfprintf_internal_r+0x1c84>
    202c:	d9003217 	ldw	r4,200(sp)
    2030:	2463c83a 	sub	r17,r4,r17
    2034:	0440990e 	bge	zero,r17,229c <___svfprintf_internal_r+0x1508>
    2038:	05800404 	movi	r22,16
    203c:	d8801f17 	ldw	r2,124(sp)
    2040:	b441530e 	bge	r22,r17,2590 <___svfprintf_internal_r+0x17fc>
    2044:	01000074 	movhi	r4,1
    2048:	21386384 	addi	r4,r4,-7794
    204c:	d9002c15 	stw	r4,176(sp)
    2050:	070001c4 	movi	fp,7
    2054:	dd002d17 	ldw	r20,180(sp)
    2058:	00000306 	br	2068 <___svfprintf_internal_r+0x12d4>
    205c:	42000204 	addi	r8,r8,8
    2060:	8c7ffc04 	addi	r17,r17,-16
    2064:	b4414d0e 	bge	r22,r17,259c <___svfprintf_internal_r+0x1808>
    2068:	18c00404 	addi	r3,r3,16
    206c:	10800044 	addi	r2,r2,1
    2070:	45400015 	stw	r21,0(r8)
    2074:	45800115 	stw	r22,4(r8)
    2078:	d8c02015 	stw	r3,128(sp)
    207c:	d8801f15 	stw	r2,124(sp)
    2080:	e0bff60e 	bge	fp,r2,205c <__alt_mem_onchip_memory2_0+0xf700205c>
    2084:	d9801e04 	addi	r6,sp,120
    2088:	a00b883a 	mov	r5,r20
    208c:	9809883a 	mov	r4,r19
    2090:	00066700 	call	6670 <__ssprint_r>
    2094:	103c261e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2098:	d8c02017 	ldw	r3,128(sp)
    209c:	d8801f17 	ldw	r2,124(sp)
    20a0:	da000404 	addi	r8,sp,16
    20a4:	003fee06 	br	2060 <__alt_mem_onchip_memory2_0+0xf7002060>
    20a8:	d9402d17 	ldw	r5,180(sp)
    20ac:	d9801e04 	addi	r6,sp,120
    20b0:	9809883a 	mov	r4,r19
    20b4:	00066700 	call	6670 <__ssprint_r>
    20b8:	103c1d1e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    20bc:	d8c02017 	ldw	r3,128(sp)
    20c0:	df002787 	ldb	fp,158(sp)
    20c4:	da000404 	addi	r8,sp,16
    20c8:	003d3806 	br	15ac <__alt_mem_onchip_memory2_0+0xf70015ac>
    20cc:	9080040c 	andi	r2,r18,16
    20d0:	10005c26 	beq	r2,zero,2244 <___svfprintf_internal_r+0x14b0>
    20d4:	d8c02e17 	ldw	r3,184(sp)
    20d8:	d9002a17 	ldw	r4,168(sp)
    20dc:	d8002785 	stb	zero,158(sp)
    20e0:	18800104 	addi	r2,r3,4
    20e4:	1d000017 	ldw	r20,0(r3)
    20e8:	002d883a 	mov	r22,zero
    20ec:	20005e16 	blt	r4,zero,2268 <___svfprintf_internal_r+0x14d4>
    20f0:	00ffdfc4 	movi	r3,-129
    20f4:	d8802e15 	stw	r2,184(sp)
    20f8:	90e4703a 	and	r18,r18,r3
    20fc:	0039883a 	mov	fp,zero
    2100:	a03ddf26 	beq	r20,zero,1880 <__alt_mem_onchip_memory2_0+0xf7001880>
    2104:	00800244 	movi	r2,9
    2108:	153c8e36 	bltu	r2,r20,1344 <__alt_mem_onchip_memory2_0+0xf7001344>
    210c:	a5000c04 	addi	r20,r20,48
    2110:	dc001dc4 	addi	r16,sp,119
    2114:	dd001dc5 	stb	r20,119(sp)
    2118:	d8c02817 	ldw	r3,160(sp)
    211c:	1c07c83a 	sub	r3,r3,r16
    2120:	d8c02b15 	stw	r3,172(sp)
    2124:	003cd306 	br	1474 <__alt_mem_onchip_memory2_0+0xf7001474>
    2128:	d8803317 	ldw	r2,204(sp)
    212c:	143fffc4 	addi	r16,r2,-1
    2130:	043f560e 	bge	zero,r16,1e8c <__alt_mem_onchip_memory2_0+0xf7001e8c>
    2134:	07000404 	movi	fp,16
    2138:	e403530e 	bge	fp,r16,2e88 <___svfprintf_internal_r+0x20f4>
    213c:	01400074 	movhi	r5,1
    2140:	29786384 	addi	r5,r5,-7794
    2144:	d9402c15 	stw	r5,176(sp)
    2148:	01c001c4 	movi	r7,7
    214c:	dd002d17 	ldw	r20,180(sp)
    2150:	00000306 	br	2160 <___svfprintf_internal_r+0x13cc>
    2154:	843ffc04 	addi	r16,r16,-16
    2158:	b5800204 	addi	r22,r22,8
    215c:	e400130e 	bge	fp,r16,21ac <___svfprintf_internal_r+0x1418>
    2160:	18c00404 	addi	r3,r3,16
    2164:	8c400044 	addi	r17,r17,1
    2168:	b5400015 	stw	r21,0(r22)
    216c:	b7000115 	stw	fp,4(r22)
    2170:	d8c02015 	stw	r3,128(sp)
    2174:	dc401f15 	stw	r17,124(sp)
    2178:	3c7ff60e 	bge	r7,r17,2154 <__alt_mem_onchip_memory2_0+0xf7002154>
    217c:	d9801e04 	addi	r6,sp,120
    2180:	a00b883a 	mov	r5,r20
    2184:	9809883a 	mov	r4,r19
    2188:	d9c03d15 	stw	r7,244(sp)
    218c:	00066700 	call	6670 <__ssprint_r>
    2190:	d9c03d17 	ldw	r7,244(sp)
    2194:	103be61e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2198:	843ffc04 	addi	r16,r16,-16
    219c:	d8c02017 	ldw	r3,128(sp)
    21a0:	dc401f17 	ldw	r17,124(sp)
    21a4:	dd800404 	addi	r22,sp,16
    21a8:	e43fed16 	blt	fp,r16,2160 <__alt_mem_onchip_memory2_0+0xf7002160>
    21ac:	d8802c17 	ldw	r2,176(sp)
    21b0:	1c07883a 	add	r3,r3,r16
    21b4:	8c400044 	addi	r17,r17,1
    21b8:	b0800015 	stw	r2,0(r22)
    21bc:	b4000115 	stw	r16,4(r22)
    21c0:	d8c02015 	stw	r3,128(sp)
    21c4:	dc401f15 	stw	r17,124(sp)
    21c8:	008001c4 	movi	r2,7
    21cc:	147f2e0e 	bge	r2,r17,1e88 <__alt_mem_onchip_memory2_0+0xf7001e88>
    21d0:	d9402d17 	ldw	r5,180(sp)
    21d4:	d9801e04 	addi	r6,sp,120
    21d8:	9809883a 	mov	r4,r19
    21dc:	00066700 	call	6670 <__ssprint_r>
    21e0:	103bd31e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    21e4:	d8c02017 	ldw	r3,128(sp)
    21e8:	dc401f17 	ldw	r17,124(sp)
    21ec:	dd800404 	addi	r22,sp,16
    21f0:	003f2606 	br	1e8c <__alt_mem_onchip_memory2_0+0xf7001e8c>
    21f4:	9080040c 	andi	r2,r18,16
    21f8:	1000c326 	beq	r2,zero,2508 <___svfprintf_internal_r+0x1774>
    21fc:	d9402e17 	ldw	r5,184(sp)
    2200:	2d000017 	ldw	r20,0(r5)
    2204:	29400104 	addi	r5,r5,4
    2208:	d9402e15 	stw	r5,184(sp)
    220c:	a02dd7fa 	srai	r22,r20,31
    2210:	b005883a 	mov	r2,r22
    2214:	103c430e 	bge	r2,zero,1324 <__alt_mem_onchip_memory2_0+0xf7001324>
    2218:	d9402a17 	ldw	r5,168(sp)
    221c:	0529c83a 	sub	r20,zero,r20
    2220:	07000b44 	movi	fp,45
    2224:	a004c03a 	cmpne	r2,r20,zero
    2228:	05adc83a 	sub	r22,zero,r22
    222c:	df002785 	stb	fp,158(sp)
    2230:	b0adc83a 	sub	r22,r22,r2
    2234:	28022e16 	blt	r5,zero,2af0 <___svfprintf_internal_r+0x1d5c>
    2238:	00bfdfc4 	movi	r2,-129
    223c:	90a4703a 	and	r18,r18,r2
    2240:	003c3f06 	br	1340 <__alt_mem_onchip_memory2_0+0xf7001340>
    2244:	9080100c 	andi	r2,r18,64
    2248:	d8002785 	stb	zero,158(sp)
    224c:	10012526 	beq	r2,zero,26e4 <___svfprintf_internal_r+0x1950>
    2250:	d9402e17 	ldw	r5,184(sp)
    2254:	d8c02a17 	ldw	r3,168(sp)
    2258:	002d883a 	mov	r22,zero
    225c:	28800104 	addi	r2,r5,4
    2260:	2d00000b 	ldhu	r20,0(r5)
    2264:	183fa20e 	bge	r3,zero,20f0 <__alt_mem_onchip_memory2_0+0xf70020f0>
    2268:	d8802e15 	stw	r2,184(sp)
    226c:	0039883a 	mov	fp,zero
    2270:	a584b03a 	or	r2,r20,r22
    2274:	103c321e 	bne	r2,zero,1340 <__alt_mem_onchip_memory2_0+0xf7001340>
    2278:	00800044 	movi	r2,1
    227c:	003e5006 	br	1bc0 <__alt_mem_onchip_memory2_0+0xf7001bc0>
    2280:	d9402d17 	ldw	r5,180(sp)
    2284:	d9801e04 	addi	r6,sp,120
    2288:	9809883a 	mov	r4,r19
    228c:	00066700 	call	6670 <__ssprint_r>
    2290:	103ba71e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2294:	d8c02017 	ldw	r3,128(sp)
    2298:	da000404 	addi	r8,sp,16
    229c:	d9003217 	ldw	r4,200(sp)
    22a0:	d8802617 	ldw	r2,152(sp)
    22a4:	d9403317 	ldw	r5,204(sp)
    22a8:	8123883a 	add	r17,r16,r4
    22ac:	11400216 	blt	r2,r5,22b8 <___svfprintf_internal_r+0x1524>
    22b0:	9100004c 	andi	r4,r18,1
    22b4:	20000d26 	beq	r4,zero,22ec <___svfprintf_internal_r+0x1558>
    22b8:	d9003817 	ldw	r4,224(sp)
    22bc:	d9403417 	ldw	r5,208(sp)
    22c0:	1907883a 	add	r3,r3,r4
    22c4:	d9001f17 	ldw	r4,124(sp)
    22c8:	41400015 	stw	r5,0(r8)
    22cc:	d9403817 	ldw	r5,224(sp)
    22d0:	21000044 	addi	r4,r4,1
    22d4:	d8c02015 	stw	r3,128(sp)
    22d8:	41400115 	stw	r5,4(r8)
    22dc:	d9001f15 	stw	r4,124(sp)
    22e0:	014001c4 	movi	r5,7
    22e4:	2901dc16 	blt	r5,r4,2a58 <___svfprintf_internal_r+0x1cc4>
    22e8:	42000204 	addi	r8,r8,8
    22ec:	d9003317 	ldw	r4,204(sp)
    22f0:	8121883a 	add	r16,r16,r4
    22f4:	2085c83a 	sub	r2,r4,r2
    22f8:	8461c83a 	sub	r16,r16,r17
    22fc:	1400010e 	bge	r2,r16,2304 <___svfprintf_internal_r+0x1570>
    2300:	1021883a 	mov	r16,r2
    2304:	04000a0e 	bge	zero,r16,2330 <___svfprintf_internal_r+0x159c>
    2308:	d9001f17 	ldw	r4,124(sp)
    230c:	1c07883a 	add	r3,r3,r16
    2310:	44400015 	stw	r17,0(r8)
    2314:	21000044 	addi	r4,r4,1
    2318:	44000115 	stw	r16,4(r8)
    231c:	d8c02015 	stw	r3,128(sp)
    2320:	d9001f15 	stw	r4,124(sp)
    2324:	014001c4 	movi	r5,7
    2328:	2901e616 	blt	r5,r4,2ac4 <___svfprintf_internal_r+0x1d30>
    232c:	42000204 	addi	r8,r8,8
    2330:	8001f616 	blt	r16,zero,2b0c <___svfprintf_internal_r+0x1d78>
    2334:	1421c83a 	sub	r16,r2,r16
    2338:	043cfa0e 	bge	zero,r16,1724 <__alt_mem_onchip_memory2_0+0xf7001724>
    233c:	04400404 	movi	r17,16
    2340:	d8801f17 	ldw	r2,124(sp)
    2344:	8c3edd0e 	bge	r17,r16,1ebc <__alt_mem_onchip_memory2_0+0xf7001ebc>
    2348:	01400074 	movhi	r5,1
    234c:	29786384 	addi	r5,r5,-7794
    2350:	d9402c15 	stw	r5,176(sp)
    2354:	058001c4 	movi	r22,7
    2358:	dd002d17 	ldw	r20,180(sp)
    235c:	00000306 	br	236c <___svfprintf_internal_r+0x15d8>
    2360:	42000204 	addi	r8,r8,8
    2364:	843ffc04 	addi	r16,r16,-16
    2368:	8c3ed70e 	bge	r17,r16,1ec8 <__alt_mem_onchip_memory2_0+0xf7001ec8>
    236c:	18c00404 	addi	r3,r3,16
    2370:	10800044 	addi	r2,r2,1
    2374:	45400015 	stw	r21,0(r8)
    2378:	44400115 	stw	r17,4(r8)
    237c:	d8c02015 	stw	r3,128(sp)
    2380:	d8801f15 	stw	r2,124(sp)
    2384:	b0bff60e 	bge	r22,r2,2360 <__alt_mem_onchip_memory2_0+0xf7002360>
    2388:	d9801e04 	addi	r6,sp,120
    238c:	a00b883a 	mov	r5,r20
    2390:	9809883a 	mov	r4,r19
    2394:	00066700 	call	6670 <__ssprint_r>
    2398:	103b651e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    239c:	d8c02017 	ldw	r3,128(sp)
    23a0:	d8801f17 	ldw	r2,124(sp)
    23a4:	da000404 	addi	r8,sp,16
    23a8:	003fee06 	br	2364 <__alt_mem_onchip_memory2_0+0xf7002364>
    23ac:	9088703a 	and	r4,r18,r2
    23b0:	203e8d1e 	bne	r4,zero,1de8 <__alt_mem_onchip_memory2_0+0xf7001de8>
    23b4:	dc401f17 	ldw	r17,124(sp)
    23b8:	40800115 	stw	r2,4(r8)
    23bc:	44000015 	stw	r16,0(r8)
    23c0:	8c400044 	addi	r17,r17,1
    23c4:	d8c02015 	stw	r3,128(sp)
    23c8:	dc401f15 	stw	r17,124(sp)
    23cc:	008001c4 	movi	r2,7
    23d0:	147f7f16 	blt	r2,r17,21d0 <__alt_mem_onchip_memory2_0+0xf70021d0>
    23d4:	45800204 	addi	r22,r8,8
    23d8:	003eac06 	br	1e8c <__alt_mem_onchip_memory2_0+0xf7001e8c>
    23dc:	d9402d17 	ldw	r5,180(sp)
    23e0:	d9801e04 	addi	r6,sp,120
    23e4:	9809883a 	mov	r4,r19
    23e8:	00066700 	call	6670 <__ssprint_r>
    23ec:	103b501e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    23f0:	d8c02017 	ldw	r3,128(sp)
    23f4:	dc401f17 	ldw	r17,124(sp)
    23f8:	da000404 	addi	r8,sp,16
    23fc:	003e8406 	br	1e10 <__alt_mem_onchip_memory2_0+0xf7001e10>
    2400:	d9402d17 	ldw	r5,180(sp)
    2404:	d9801e04 	addi	r6,sp,120
    2408:	9809883a 	mov	r4,r19
    240c:	00066700 	call	6670 <__ssprint_r>
    2410:	103b471e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2414:	d8c02017 	ldw	r3,128(sp)
    2418:	dc401f17 	ldw	r17,124(sp)
    241c:	dd800404 	addi	r22,sp,16
    2420:	003e8606 	br	1e3c <__alt_mem_onchip_memory2_0+0xf7001e3c>
    2424:	0029883a 	mov	r20,zero
    2428:	a5000c04 	addi	r20,r20,48
    242c:	dc001dc4 	addi	r16,sp,119
    2430:	dd001dc5 	stb	r20,119(sp)
    2434:	003f3806 	br	2118 <__alt_mem_onchip_memory2_0+0xf7002118>
    2438:	d9402d17 	ldw	r5,180(sp)
    243c:	d9801e04 	addi	r6,sp,120
    2440:	9809883a 	mov	r4,r19
    2444:	00066700 	call	6670 <__ssprint_r>
    2448:	103b391e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    244c:	d8c02017 	ldw	r3,128(sp)
    2450:	da000404 	addi	r8,sp,16
    2454:	003c7306 	br	1624 <__alt_mem_onchip_memory2_0+0xf7001624>
    2458:	d9003617 	ldw	r4,216(sp)
    245c:	d9403717 	ldw	r5,220(sp)
    2460:	da003e15 	stw	r8,248(sp)
    2464:	00064cc0 	call	64cc <__fpclassifyd>
    2468:	da003e17 	ldw	r8,248(sp)
    246c:	1000bd1e 	bne	r2,zero,2764 <___svfprintf_internal_r+0x19d0>
    2470:	008011c4 	movi	r2,71
    2474:	14411e0e 	bge	r2,r17,28f0 <___svfprintf_internal_r+0x1b5c>
    2478:	04000074 	movhi	r16,1
    247c:	84385604 	addi	r16,r16,-7848
    2480:	00c000c4 	movi	r3,3
    2484:	00bfdfc4 	movi	r2,-129
    2488:	d8c02915 	stw	r3,164(sp)
    248c:	90a4703a 	and	r18,r18,r2
    2490:	df002783 	ldbu	fp,158(sp)
    2494:	d8c02b15 	stw	r3,172(sp)
    2498:	d8002a15 	stw	zero,168(sp)
    249c:	d8003215 	stw	zero,200(sp)
    24a0:	003bfa06 	br	148c <__alt_mem_onchip_memory2_0+0xf700148c>
    24a4:	9080100c 	andi	r2,r18,64
    24a8:	d8002785 	stb	zero,158(sp)
    24ac:	10009426 	beq	r2,zero,2700 <___svfprintf_internal_r+0x196c>
    24b0:	d9402e17 	ldw	r5,184(sp)
    24b4:	d8c02a17 	ldw	r3,168(sp)
    24b8:	002d883a 	mov	r22,zero
    24bc:	28800104 	addi	r2,r5,4
    24c0:	2d00000b 	ldhu	r20,0(r5)
    24c4:	183ec10e 	bge	r3,zero,1fcc <__alt_mem_onchip_memory2_0+0xf7001fcc>
    24c8:	a586b03a 	or	r3,r20,r22
    24cc:	d8802e15 	stw	r2,184(sp)
    24d0:	183ec21e 	bne	r3,zero,1fdc <__alt_mem_onchip_memory2_0+0xf7001fdc>
    24d4:	0039883a 	mov	fp,zero
    24d8:	0005883a 	mov	r2,zero
    24dc:	003db806 	br	1bc0 <__alt_mem_onchip_memory2_0+0xf7001bc0>
    24e0:	d8c02e17 	ldw	r3,184(sp)
    24e4:	d9002e17 	ldw	r4,184(sp)
    24e8:	d9402e17 	ldw	r5,184(sp)
    24ec:	18c00017 	ldw	r3,0(r3)
    24f0:	21000117 	ldw	r4,4(r4)
    24f4:	29400204 	addi	r5,r5,8
    24f8:	d8c03615 	stw	r3,216(sp)
    24fc:	d9003715 	stw	r4,220(sp)
    2500:	d9402e15 	stw	r5,184(sp)
    2504:	003b5a06 	br	1270 <__alt_mem_onchip_memory2_0+0xf7001270>
    2508:	9080100c 	andi	r2,r18,64
    250c:	10010726 	beq	r2,zero,292c <___svfprintf_internal_r+0x1b98>
    2510:	d8802e17 	ldw	r2,184(sp)
    2514:	1500000f 	ldh	r20,0(r2)
    2518:	10800104 	addi	r2,r2,4
    251c:	d8802e15 	stw	r2,184(sp)
    2520:	a02dd7fa 	srai	r22,r20,31
    2524:	b005883a 	mov	r2,r22
    2528:	003b7d06 	br	1320 <__alt_mem_onchip_memory2_0+0xf7001320>
    252c:	9080100c 	andi	r2,r18,64
    2530:	10010526 	beq	r2,zero,2948 <___svfprintf_internal_r+0x1bb4>
    2534:	d8c02e17 	ldw	r3,184(sp)
    2538:	002d883a 	mov	r22,zero
    253c:	1d00000b 	ldhu	r20,0(r3)
    2540:	18c00104 	addi	r3,r3,4
    2544:	d8c02e15 	stw	r3,184(sp)
    2548:	003ce206 	br	18d4 <__alt_mem_onchip_memory2_0+0xf70018d4>
    254c:	bc400007 	ldb	r17,0(r23)
    2550:	003a6506 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    2554:	9080040c 	andi	r2,r18,16
    2558:	10010126 	beq	r2,zero,2960 <___svfprintf_internal_r+0x1bcc>
    255c:	d8c02e17 	ldw	r3,184(sp)
    2560:	d9002f17 	ldw	r4,188(sp)
    2564:	18800017 	ldw	r2,0(r3)
    2568:	18c00104 	addi	r3,r3,4
    256c:	d8c02e15 	stw	r3,184(sp)
    2570:	11000015 	stw	r4,0(r2)
    2574:	003a3206 	br	e40 <__alt_mem_onchip_memory2_0+0xf7000e40>
    2578:	d9002a17 	ldw	r4,168(sp)
    257c:	d8002785 	stb	zero,158(sp)
    2580:	203d8d16 	blt	r4,zero,1bb8 <__alt_mem_onchip_memory2_0+0xf7001bb8>
    2584:	00bfdfc4 	movi	r2,-129
    2588:	90a4703a 	and	r18,r18,r2
    258c:	003ad506 	br	10e4 <__alt_mem_onchip_memory2_0+0xf70010e4>
    2590:	01400074 	movhi	r5,1
    2594:	29786384 	addi	r5,r5,-7794
    2598:	d9402c15 	stw	r5,176(sp)
    259c:	d9402c17 	ldw	r5,176(sp)
    25a0:	1c47883a 	add	r3,r3,r17
    25a4:	10800044 	addi	r2,r2,1
    25a8:	41400015 	stw	r5,0(r8)
    25ac:	44400115 	stw	r17,4(r8)
    25b0:	d8c02015 	stw	r3,128(sp)
    25b4:	d8801f15 	stw	r2,124(sp)
    25b8:	010001c4 	movi	r4,7
    25bc:	20bf3016 	blt	r4,r2,2280 <__alt_mem_onchip_memory2_0+0xf7002280>
    25c0:	42000204 	addi	r8,r8,8
    25c4:	003f3506 	br	229c <__alt_mem_onchip_memory2_0+0xf700229c>
    25c8:	01000074 	movhi	r4,1
    25cc:	21386384 	addi	r4,r4,-7794
    25d0:	d9002c15 	stw	r4,176(sp)
    25d4:	003c3c06 	br	16c8 <__alt_mem_onchip_memory2_0+0xf70016c8>
    25d8:	d9402d17 	ldw	r5,180(sp)
    25dc:	d9801e04 	addi	r6,sp,120
    25e0:	9809883a 	mov	r4,r19
    25e4:	00066700 	call	6670 <__ssprint_r>
    25e8:	103ad11e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    25ec:	d8c02017 	ldw	r3,128(sp)
    25f0:	da000404 	addi	r8,sp,16
    25f4:	003d9306 	br	1c44 <__alt_mem_onchip_memory2_0+0xf7001c44>
    25f8:	d8801f17 	ldw	r2,124(sp)
    25fc:	01400074 	movhi	r5,1
    2600:	01000044 	movi	r4,1
    2604:	18c00044 	addi	r3,r3,1
    2608:	10800044 	addi	r2,r2,1
    260c:	29786304 	addi	r5,r5,-7796
    2610:	41000115 	stw	r4,4(r8)
    2614:	41400015 	stw	r5,0(r8)
    2618:	d8c02015 	stw	r3,128(sp)
    261c:	d8801f15 	stw	r2,124(sp)
    2620:	010001c4 	movi	r4,7
    2624:	2080b516 	blt	r4,r2,28fc <___svfprintf_internal_r+0x1b68>
    2628:	42000204 	addi	r8,r8,8
    262c:	8800041e 	bne	r17,zero,2640 <___svfprintf_internal_r+0x18ac>
    2630:	d8803317 	ldw	r2,204(sp)
    2634:	1000021e 	bne	r2,zero,2640 <___svfprintf_internal_r+0x18ac>
    2638:	9080004c 	andi	r2,r18,1
    263c:	103c3926 	beq	r2,zero,1724 <__alt_mem_onchip_memory2_0+0xf7001724>
    2640:	d9003817 	ldw	r4,224(sp)
    2644:	d8801f17 	ldw	r2,124(sp)
    2648:	d9403417 	ldw	r5,208(sp)
    264c:	20c7883a 	add	r3,r4,r3
    2650:	10800044 	addi	r2,r2,1
    2654:	41000115 	stw	r4,4(r8)
    2658:	41400015 	stw	r5,0(r8)
    265c:	d8c02015 	stw	r3,128(sp)
    2660:	d8801f15 	stw	r2,124(sp)
    2664:	010001c4 	movi	r4,7
    2668:	20818016 	blt	r4,r2,2c6c <___svfprintf_internal_r+0x1ed8>
    266c:	42000204 	addi	r8,r8,8
    2670:	0463c83a 	sub	r17,zero,r17
    2674:	0440cb0e 	bge	zero,r17,29a4 <___svfprintf_internal_r+0x1c10>
    2678:	05800404 	movi	r22,16
    267c:	b440e80e 	bge	r22,r17,2a20 <___svfprintf_internal_r+0x1c8c>
    2680:	01400074 	movhi	r5,1
    2684:	29786384 	addi	r5,r5,-7794
    2688:	d9402c15 	stw	r5,176(sp)
    268c:	070001c4 	movi	fp,7
    2690:	dd002d17 	ldw	r20,180(sp)
    2694:	00000306 	br	26a4 <___svfprintf_internal_r+0x1910>
    2698:	42000204 	addi	r8,r8,8
    269c:	8c7ffc04 	addi	r17,r17,-16
    26a0:	b440e20e 	bge	r22,r17,2a2c <___svfprintf_internal_r+0x1c98>
    26a4:	18c00404 	addi	r3,r3,16
    26a8:	10800044 	addi	r2,r2,1
    26ac:	45400015 	stw	r21,0(r8)
    26b0:	45800115 	stw	r22,4(r8)
    26b4:	d8c02015 	stw	r3,128(sp)
    26b8:	d8801f15 	stw	r2,124(sp)
    26bc:	e0bff60e 	bge	fp,r2,2698 <__alt_mem_onchip_memory2_0+0xf7002698>
    26c0:	d9801e04 	addi	r6,sp,120
    26c4:	a00b883a 	mov	r5,r20
    26c8:	9809883a 	mov	r4,r19
    26cc:	00066700 	call	6670 <__ssprint_r>
    26d0:	103a971e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    26d4:	d8c02017 	ldw	r3,128(sp)
    26d8:	d8801f17 	ldw	r2,124(sp)
    26dc:	da000404 	addi	r8,sp,16
    26e0:	003fee06 	br	269c <__alt_mem_onchip_memory2_0+0xf700269c>
    26e4:	d9002e17 	ldw	r4,184(sp)
    26e8:	d9402a17 	ldw	r5,168(sp)
    26ec:	002d883a 	mov	r22,zero
    26f0:	20800104 	addi	r2,r4,4
    26f4:	25000017 	ldw	r20,0(r4)
    26f8:	283e7d0e 	bge	r5,zero,20f0 <__alt_mem_onchip_memory2_0+0xf70020f0>
    26fc:	003eda06 	br	2268 <__alt_mem_onchip_memory2_0+0xf7002268>
    2700:	d9002e17 	ldw	r4,184(sp)
    2704:	d9402a17 	ldw	r5,168(sp)
    2708:	002d883a 	mov	r22,zero
    270c:	20800104 	addi	r2,r4,4
    2710:	25000017 	ldw	r20,0(r4)
    2714:	283e2d0e 	bge	r5,zero,1fcc <__alt_mem_onchip_memory2_0+0xf7001fcc>
    2718:	003f6b06 	br	24c8 <__alt_mem_onchip_memory2_0+0xf70024c8>
    271c:	d8c02e15 	stw	r3,184(sp)
    2720:	0039883a 	mov	fp,zero
    2724:	003ed206 	br	2270 <__alt_mem_onchip_memory2_0+0xf7002270>
    2728:	bc400043 	ldbu	r17,1(r23)
    272c:	84000814 	ori	r16,r16,32
    2730:	bdc00044 	addi	r23,r23,1
    2734:	8c403fcc 	andi	r17,r17,255
    2738:	8c40201c 	xori	r17,r17,128
    273c:	8c7fe004 	addi	r17,r17,-128
    2740:	0039e906 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    2744:	d9402d17 	ldw	r5,180(sp)
    2748:	d9801e04 	addi	r6,sp,120
    274c:	9809883a 	mov	r4,r19
    2750:	00066700 	call	6670 <__ssprint_r>
    2754:	103a761e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2758:	d8c02017 	ldw	r3,128(sp)
    275c:	da000404 	addi	r8,sp,16
    2760:	003d4a06 	br	1c8c <__alt_mem_onchip_memory2_0+0xf7001c8c>
    2764:	d9002a17 	ldw	r4,168(sp)
    2768:	05bff7c4 	movi	r22,-33
    276c:	00bfffc4 	movi	r2,-1
    2770:	8dac703a 	and	r22,r17,r22
    2774:	20806a26 	beq	r4,r2,2920 <___svfprintf_internal_r+0x1b8c>
    2778:	008011c4 	movi	r2,71
    277c:	b0813726 	beq	r22,r2,2c5c <___svfprintf_internal_r+0x1ec8>
    2780:	d9003717 	ldw	r4,220(sp)
    2784:	90c04014 	ori	r3,r18,256
    2788:	d8c02c15 	stw	r3,176(sp)
    278c:	20015d16 	blt	r4,zero,2d04 <___svfprintf_internal_r+0x1f70>
    2790:	dd003717 	ldw	r20,220(sp)
    2794:	d8002905 	stb	zero,164(sp)
    2798:	00801984 	movi	r2,102
    279c:	88814026 	beq	r17,r2,2ca0 <___svfprintf_internal_r+0x1f0c>
    27a0:	00801184 	movi	r2,70
    27a4:	88817126 	beq	r17,r2,2d6c <___svfprintf_internal_r+0x1fd8>
    27a8:	00801144 	movi	r2,69
    27ac:	b0816226 	beq	r22,r2,2d38 <___svfprintf_internal_r+0x1fa4>
    27b0:	d8c02a17 	ldw	r3,168(sp)
    27b4:	d8802104 	addi	r2,sp,132
    27b8:	d8800315 	stw	r2,12(sp)
    27bc:	d9403617 	ldw	r5,216(sp)
    27c0:	d8802504 	addi	r2,sp,148
    27c4:	d8800215 	stw	r2,8(sp)
    27c8:	d8802604 	addi	r2,sp,152
    27cc:	d8c00015 	stw	r3,0(sp)
    27d0:	d8800115 	stw	r2,4(sp)
    27d4:	01c00084 	movi	r7,2
    27d8:	a00d883a 	mov	r6,r20
    27dc:	9809883a 	mov	r4,r19
    27e0:	d8c03d15 	stw	r3,244(sp)
    27e4:	da003e15 	stw	r8,248(sp)
    27e8:	00032780 	call	3278 <_dtoa_r>
    27ec:	1021883a 	mov	r16,r2
    27f0:	008019c4 	movi	r2,103
    27f4:	d8c03d17 	ldw	r3,244(sp)
    27f8:	da003e17 	ldw	r8,248(sp)
    27fc:	8880e726 	beq	r17,r2,2b9c <___svfprintf_internal_r+0x1e08>
    2800:	008011c4 	movi	r2,71
    2804:	8880d426 	beq	r17,r2,2b58 <___svfprintf_internal_r+0x1dc4>
    2808:	80f9883a 	add	fp,r16,r3
    280c:	d9003617 	ldw	r4,216(sp)
    2810:	000d883a 	mov	r6,zero
    2814:	000f883a 	mov	r7,zero
    2818:	a00b883a 	mov	r5,r20
    281c:	da003e15 	stw	r8,248(sp)
    2820:	000a8200 	call	a820 <__eqdf2>
    2824:	da003e17 	ldw	r8,248(sp)
    2828:	1000e426 	beq	r2,zero,2bbc <___svfprintf_internal_r+0x1e28>
    282c:	d8802117 	ldw	r2,132(sp)
    2830:	1700062e 	bgeu	r2,fp,284c <___svfprintf_internal_r+0x1ab8>
    2834:	01000c04 	movi	r4,48
    2838:	10c00044 	addi	r3,r2,1
    283c:	d8c02115 	stw	r3,132(sp)
    2840:	11000005 	stb	r4,0(r2)
    2844:	d8802117 	ldw	r2,132(sp)
    2848:	173ffb36 	bltu	r2,fp,2838 <__alt_mem_onchip_memory2_0+0xf7002838>
    284c:	1405c83a 	sub	r2,r2,r16
    2850:	d8803315 	stw	r2,204(sp)
    2854:	008011c4 	movi	r2,71
    2858:	b080c526 	beq	r22,r2,2b70 <___svfprintf_internal_r+0x1ddc>
    285c:	00801944 	movi	r2,101
    2860:	1441d80e 	bge	r2,r17,2fc4 <___svfprintf_internal_r+0x2230>
    2864:	d8c02617 	ldw	r3,152(sp)
    2868:	00801984 	movi	r2,102
    286c:	d8c03215 	stw	r3,200(sp)
    2870:	88813426 	beq	r17,r2,2d44 <___svfprintf_internal_r+0x1fb0>
    2874:	d8c03217 	ldw	r3,200(sp)
    2878:	d9003317 	ldw	r4,204(sp)
    287c:	19012516 	blt	r3,r4,2d14 <___svfprintf_internal_r+0x1f80>
    2880:	9480004c 	andi	r18,r18,1
    2884:	9001841e 	bne	r18,zero,2e98 <___svfprintf_internal_r+0x2104>
    2888:	1805883a 	mov	r2,r3
    288c:	1801cb16 	blt	r3,zero,2fbc <___svfprintf_internal_r+0x2228>
    2890:	d8c03217 	ldw	r3,200(sp)
    2894:	044019c4 	movi	r17,103
    2898:	d8c02b15 	stw	r3,172(sp)
    289c:	df002907 	ldb	fp,164(sp)
    28a0:	e000a61e 	bne	fp,zero,2b3c <___svfprintf_internal_r+0x1da8>
    28a4:	df002783 	ldbu	fp,158(sp)
    28a8:	d8802915 	stw	r2,164(sp)
    28ac:	dc802c17 	ldw	r18,176(sp)
    28b0:	d8002a15 	stw	zero,168(sp)
    28b4:	003af506 	br	148c <__alt_mem_onchip_memory2_0+0xf700148c>
    28b8:	04000074 	movhi	r16,1
    28bc:	84385304 	addi	r16,r16,-7860
    28c0:	003a7e06 	br	12bc <__alt_mem_onchip_memory2_0+0xf70012bc>
    28c4:	d9003917 	ldw	r4,228(sp)
    28c8:	04001004 	movi	r16,64
    28cc:	800b883a 	mov	r5,r16
    28d0:	00049dc0 	call	49dc <_malloc_r>
    28d4:	d9002d17 	ldw	r4,180(sp)
    28d8:	20800015 	stw	r2,0(r4)
    28dc:	20800415 	stw	r2,16(r4)
    28e0:	1001d026 	beq	r2,zero,3024 <___svfprintf_internal_r+0x2290>
    28e4:	d8802d17 	ldw	r2,180(sp)
    28e8:	14000515 	stw	r16,20(r2)
    28ec:	00394406 	br	e00 <__alt_mem_onchip_memory2_0+0xf7000e00>
    28f0:	04000074 	movhi	r16,1
    28f4:	84385504 	addi	r16,r16,-7852
    28f8:	003ee106 	br	2480 <__alt_mem_onchip_memory2_0+0xf7002480>
    28fc:	d9402d17 	ldw	r5,180(sp)
    2900:	d9801e04 	addi	r6,sp,120
    2904:	9809883a 	mov	r4,r19
    2908:	00066700 	call	6670 <__ssprint_r>
    290c:	103a081e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2910:	dc402617 	ldw	r17,152(sp)
    2914:	d8c02017 	ldw	r3,128(sp)
    2918:	da000404 	addi	r8,sp,16
    291c:	003f4306 	br	262c <__alt_mem_onchip_memory2_0+0xf700262c>
    2920:	01400184 	movi	r5,6
    2924:	d9402a15 	stw	r5,168(sp)
    2928:	003f9506 	br	2780 <__alt_mem_onchip_memory2_0+0xf7002780>
    292c:	d8c02e17 	ldw	r3,184(sp)
    2930:	1d000017 	ldw	r20,0(r3)
    2934:	18c00104 	addi	r3,r3,4
    2938:	d8c02e15 	stw	r3,184(sp)
    293c:	a02dd7fa 	srai	r22,r20,31
    2940:	b005883a 	mov	r2,r22
    2944:	003a7606 	br	1320 <__alt_mem_onchip_memory2_0+0xf7001320>
    2948:	d9002e17 	ldw	r4,184(sp)
    294c:	002d883a 	mov	r22,zero
    2950:	25000017 	ldw	r20,0(r4)
    2954:	21000104 	addi	r4,r4,4
    2958:	d9002e15 	stw	r4,184(sp)
    295c:	003bdd06 	br	18d4 <__alt_mem_onchip_memory2_0+0xf70018d4>
    2960:	9480100c 	andi	r18,r18,64
    2964:	90006e26 	beq	r18,zero,2b20 <___svfprintf_internal_r+0x1d8c>
    2968:	d9402e17 	ldw	r5,184(sp)
    296c:	d8c02f17 	ldw	r3,188(sp)
    2970:	28800017 	ldw	r2,0(r5)
    2974:	29400104 	addi	r5,r5,4
    2978:	d9402e15 	stw	r5,184(sp)
    297c:	10c0000d 	sth	r3,0(r2)
    2980:	00392f06 	br	e40 <__alt_mem_onchip_memory2_0+0xf7000e40>
    2984:	d9402d17 	ldw	r5,180(sp)
    2988:	d9801e04 	addi	r6,sp,120
    298c:	9809883a 	mov	r4,r19
    2990:	00066700 	call	6670 <__ssprint_r>
    2994:	1039e61e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2998:	d8c02017 	ldw	r3,128(sp)
    299c:	d8801f17 	ldw	r2,124(sp)
    29a0:	da000404 	addi	r8,sp,16
    29a4:	d9403317 	ldw	r5,204(sp)
    29a8:	10800044 	addi	r2,r2,1
    29ac:	44000015 	stw	r16,0(r8)
    29b0:	28c7883a 	add	r3,r5,r3
    29b4:	003b5506 	br	170c <__alt_mem_onchip_memory2_0+0xf700170c>
    29b8:	8009883a 	mov	r4,r16
    29bc:	df003e15 	stw	fp,248(sp)
    29c0:	0000cfc0 	call	cfc <strlen>
    29c4:	d8802b15 	stw	r2,172(sp)
    29c8:	da003e17 	ldw	r8,248(sp)
    29cc:	103c160e 	bge	r2,zero,1a28 <__alt_mem_onchip_memory2_0+0xf7001a28>
    29d0:	0005883a 	mov	r2,zero
    29d4:	003c1406 	br	1a28 <__alt_mem_onchip_memory2_0+0xf7001a28>
    29d8:	00bfffc4 	movi	r2,-1
    29dc:	0039d906 	br	1144 <__alt_mem_onchip_memory2_0+0xf7001144>
    29e0:	01000074 	movhi	r4,1
    29e4:	21386784 	addi	r4,r4,-7778
    29e8:	d9003515 	stw	r4,212(sp)
    29ec:	003ae406 	br	1580 <__alt_mem_onchip_memory2_0+0xf7001580>
    29f0:	013fffc4 	movi	r4,-1
    29f4:	0039fa06 	br	11e0 <__alt_mem_onchip_memory2_0+0xf70011e0>
    29f8:	d9402d17 	ldw	r5,180(sp)
    29fc:	d9801e04 	addi	r6,sp,120
    2a00:	9809883a 	mov	r4,r19
    2a04:	00066700 	call	6670 <__ssprint_r>
    2a08:	1039c91e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2a0c:	d8c02017 	ldw	r3,128(sp)
    2a10:	da000404 	addi	r8,sp,16
    2a14:	003d8406 	br	2028 <__alt_mem_onchip_memory2_0+0xf7002028>
    2a18:	0023883a 	mov	r17,zero
    2a1c:	003d8306 	br	202c <__alt_mem_onchip_memory2_0+0xf700202c>
    2a20:	01000074 	movhi	r4,1
    2a24:	21386384 	addi	r4,r4,-7794
    2a28:	d9002c15 	stw	r4,176(sp)
    2a2c:	d9002c17 	ldw	r4,176(sp)
    2a30:	1c47883a 	add	r3,r3,r17
    2a34:	10800044 	addi	r2,r2,1
    2a38:	41000015 	stw	r4,0(r8)
    2a3c:	44400115 	stw	r17,4(r8)
    2a40:	d8c02015 	stw	r3,128(sp)
    2a44:	d8801f15 	stw	r2,124(sp)
    2a48:	010001c4 	movi	r4,7
    2a4c:	20bfcd16 	blt	r4,r2,2984 <__alt_mem_onchip_memory2_0+0xf7002984>
    2a50:	42000204 	addi	r8,r8,8
    2a54:	003fd306 	br	29a4 <__alt_mem_onchip_memory2_0+0xf70029a4>
    2a58:	d9402d17 	ldw	r5,180(sp)
    2a5c:	d9801e04 	addi	r6,sp,120
    2a60:	9809883a 	mov	r4,r19
    2a64:	00066700 	call	6670 <__ssprint_r>
    2a68:	1039b11e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2a6c:	d8802617 	ldw	r2,152(sp)
    2a70:	d8c02017 	ldw	r3,128(sp)
    2a74:	da000404 	addi	r8,sp,16
    2a78:	003e1c06 	br	22ec <__alt_mem_onchip_memory2_0+0xf70022ec>
    2a7c:	d8802a17 	ldw	r2,168(sp)
    2a80:	00c00184 	movi	r3,6
    2a84:	1880012e 	bgeu	r3,r2,2a8c <___svfprintf_internal_r+0x1cf8>
    2a88:	1805883a 	mov	r2,r3
    2a8c:	d8802b15 	stw	r2,172(sp)
    2a90:	1000f316 	blt	r2,zero,2e60 <___svfprintf_internal_r+0x20cc>
    2a94:	04000074 	movhi	r16,1
    2a98:	d8802915 	stw	r2,164(sp)
    2a9c:	dd002e15 	stw	r20,184(sp)
    2aa0:	d8002a15 	stw	zero,168(sp)
    2aa4:	d8003215 	stw	zero,200(sp)
    2aa8:	84386104 	addi	r16,r16,-7804
    2aac:	0039883a 	mov	fp,zero
    2ab0:	003a7d06 	br	14a8 <__alt_mem_onchip_memory2_0+0xf70014a8>
    2ab4:	01000074 	movhi	r4,1
    2ab8:	21386784 	addi	r4,r4,-7778
    2abc:	d9003515 	stw	r4,212(sp)
    2ac0:	003b3d06 	br	17b8 <__alt_mem_onchip_memory2_0+0xf70017b8>
    2ac4:	d9402d17 	ldw	r5,180(sp)
    2ac8:	d9801e04 	addi	r6,sp,120
    2acc:	9809883a 	mov	r4,r19
    2ad0:	00066700 	call	6670 <__ssprint_r>
    2ad4:	1039961e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2ad8:	d8802617 	ldw	r2,152(sp)
    2adc:	d9403317 	ldw	r5,204(sp)
    2ae0:	d8c02017 	ldw	r3,128(sp)
    2ae4:	da000404 	addi	r8,sp,16
    2ae8:	2885c83a 	sub	r2,r5,r2
    2aec:	003e1006 	br	2330 <__alt_mem_onchip_memory2_0+0xf7002330>
    2af0:	00800044 	movi	r2,1
    2af4:	10803fcc 	andi	r2,r2,255
    2af8:	00c00044 	movi	r3,1
    2afc:	10fa1026 	beq	r2,r3,1340 <__alt_mem_onchip_memory2_0+0xf7001340>
    2b00:	00c00084 	movi	r3,2
    2b04:	10fb8226 	beq	r2,r3,1910 <__alt_mem_onchip_memory2_0+0xf7001910>
    2b08:	003a4206 	br	1414 <__alt_mem_onchip_memory2_0+0xf7001414>
    2b0c:	0021883a 	mov	r16,zero
    2b10:	003e0806 	br	2334 <__alt_mem_onchip_memory2_0+0xf7002334>
    2b14:	07000b44 	movi	fp,45
    2b18:	df002785 	stb	fp,158(sp)
    2b1c:	0039e306 	br	12ac <__alt_mem_onchip_memory2_0+0xf70012ac>
    2b20:	d9002e17 	ldw	r4,184(sp)
    2b24:	d9402f17 	ldw	r5,188(sp)
    2b28:	20800017 	ldw	r2,0(r4)
    2b2c:	21000104 	addi	r4,r4,4
    2b30:	d9002e15 	stw	r4,184(sp)
    2b34:	11400015 	stw	r5,0(r2)
    2b38:	0038c106 	br	e40 <__alt_mem_onchip_memory2_0+0xf7000e40>
    2b3c:	00c00b44 	movi	r3,45
    2b40:	d8c02785 	stb	r3,158(sp)
    2b44:	d8802915 	stw	r2,164(sp)
    2b48:	dc802c17 	ldw	r18,176(sp)
    2b4c:	d8002a15 	stw	zero,168(sp)
    2b50:	07000b44 	movi	fp,45
    2b54:	003a5106 	br	149c <__alt_mem_onchip_memory2_0+0xf700149c>
    2b58:	9080004c 	andi	r2,r18,1
    2b5c:	1000941e 	bne	r2,zero,2db0 <___svfprintf_internal_r+0x201c>
    2b60:	d8802117 	ldw	r2,132(sp)
    2b64:	1405c83a 	sub	r2,r2,r16
    2b68:	d8803315 	stw	r2,204(sp)
    2b6c:	b441151e 	bne	r22,r17,2fc4 <___svfprintf_internal_r+0x2230>
    2b70:	dd802617 	ldw	r22,152(sp)
    2b74:	00bfff44 	movi	r2,-3
    2b78:	b0801a16 	blt	r22,r2,2be4 <___svfprintf_internal_r+0x1e50>
    2b7c:	d9402a17 	ldw	r5,168(sp)
    2b80:	2d801816 	blt	r5,r22,2be4 <___svfprintf_internal_r+0x1e50>
    2b84:	dd803215 	stw	r22,200(sp)
    2b88:	003f3a06 	br	2874 <__alt_mem_onchip_memory2_0+0xf7002874>
    2b8c:	1025883a 	mov	r18,r2
    2b90:	0039883a 	mov	fp,zero
    2b94:	00800084 	movi	r2,2
    2b98:	003fd606 	br	2af4 <__alt_mem_onchip_memory2_0+0xf7002af4>
    2b9c:	9080004c 	andi	r2,r18,1
    2ba0:	103f191e 	bne	r2,zero,2808 <__alt_mem_onchip_memory2_0+0xf7002808>
    2ba4:	d8802117 	ldw	r2,132(sp)
    2ba8:	003f2806 	br	284c <__alt_mem_onchip_memory2_0+0xf700284c>
    2bac:	01000074 	movhi	r4,1
    2bb0:	21386384 	addi	r4,r4,-7794
    2bb4:	d9002c15 	stw	r4,176(sp)
    2bb8:	003c7c06 	br	1dac <__alt_mem_onchip_memory2_0+0xf7001dac>
    2bbc:	e005883a 	mov	r2,fp
    2bc0:	003f2206 	br	284c <__alt_mem_onchip_memory2_0+0xf700284c>
    2bc4:	d9002a17 	ldw	r4,168(sp)
    2bc8:	df002783 	ldbu	fp,158(sp)
    2bcc:	dd002e15 	stw	r20,184(sp)
    2bd0:	d9002915 	stw	r4,164(sp)
    2bd4:	d9002b15 	stw	r4,172(sp)
    2bd8:	d8002a15 	stw	zero,168(sp)
    2bdc:	d8003215 	stw	zero,200(sp)
    2be0:	003a2a06 	br	148c <__alt_mem_onchip_memory2_0+0xf700148c>
    2be4:	8c7fff84 	addi	r17,r17,-2
    2be8:	b5bfffc4 	addi	r22,r22,-1
    2bec:	dd802615 	stw	r22,152(sp)
    2bf0:	dc4022c5 	stb	r17,139(sp)
    2bf4:	b000c316 	blt	r22,zero,2f04 <___svfprintf_internal_r+0x2170>
    2bf8:	00800ac4 	movi	r2,43
    2bfc:	d8802305 	stb	r2,140(sp)
    2c00:	00800244 	movi	r2,9
    2c04:	15806e16 	blt	r2,r22,2dc0 <___svfprintf_internal_r+0x202c>
    2c08:	00800c04 	movi	r2,48
    2c0c:	b5800c04 	addi	r22,r22,48
    2c10:	d8802345 	stb	r2,141(sp)
    2c14:	dd802385 	stb	r22,142(sp)
    2c18:	d88023c4 	addi	r2,sp,143
    2c1c:	df0022c4 	addi	fp,sp,139
    2c20:	d8c03317 	ldw	r3,204(sp)
    2c24:	1739c83a 	sub	fp,r2,fp
    2c28:	d9003317 	ldw	r4,204(sp)
    2c2c:	e0c7883a 	add	r3,fp,r3
    2c30:	df003b15 	stw	fp,236(sp)
    2c34:	d8c02b15 	stw	r3,172(sp)
    2c38:	00800044 	movi	r2,1
    2c3c:	1100b70e 	bge	r2,r4,2f1c <___svfprintf_internal_r+0x2188>
    2c40:	d8c02b17 	ldw	r3,172(sp)
    2c44:	18c00044 	addi	r3,r3,1
    2c48:	d8c02b15 	stw	r3,172(sp)
    2c4c:	1805883a 	mov	r2,r3
    2c50:	1800b016 	blt	r3,zero,2f14 <___svfprintf_internal_r+0x2180>
    2c54:	d8003215 	stw	zero,200(sp)
    2c58:	003f1006 	br	289c <__alt_mem_onchip_memory2_0+0xf700289c>
    2c5c:	d8802a17 	ldw	r2,168(sp)
    2c60:	103ec71e 	bne	r2,zero,2780 <__alt_mem_onchip_memory2_0+0xf7002780>
    2c64:	dc002a15 	stw	r16,168(sp)
    2c68:	003ec506 	br	2780 <__alt_mem_onchip_memory2_0+0xf7002780>
    2c6c:	d9402d17 	ldw	r5,180(sp)
    2c70:	d9801e04 	addi	r6,sp,120
    2c74:	9809883a 	mov	r4,r19
    2c78:	00066700 	call	6670 <__ssprint_r>
    2c7c:	10392c1e 	bne	r2,zero,1130 <__alt_mem_onchip_memory2_0+0xf7001130>
    2c80:	dc402617 	ldw	r17,152(sp)
    2c84:	d8c02017 	ldw	r3,128(sp)
    2c88:	d8801f17 	ldw	r2,124(sp)
    2c8c:	da000404 	addi	r8,sp,16
    2c90:	003e7706 	br	2670 <__alt_mem_onchip_memory2_0+0xf7002670>
    2c94:	182f883a 	mov	r23,r3
    2c98:	d8002a15 	stw	zero,168(sp)
    2c9c:	00389306 	br	eec <__alt_mem_onchip_memory2_0+0xf7000eec>
    2ca0:	d8c02a17 	ldw	r3,168(sp)
    2ca4:	d8802104 	addi	r2,sp,132
    2ca8:	d8800315 	stw	r2,12(sp)
    2cac:	d9403617 	ldw	r5,216(sp)
    2cb0:	d8802504 	addi	r2,sp,148
    2cb4:	d8800215 	stw	r2,8(sp)
    2cb8:	d8802604 	addi	r2,sp,152
    2cbc:	d8c00015 	stw	r3,0(sp)
    2cc0:	9809883a 	mov	r4,r19
    2cc4:	d8800115 	stw	r2,4(sp)
    2cc8:	01c000c4 	movi	r7,3
    2ccc:	a00d883a 	mov	r6,r20
    2cd0:	da003e15 	stw	r8,248(sp)
    2cd4:	00032780 	call	3278 <_dtoa_r>
    2cd8:	d9002a17 	ldw	r4,168(sp)
    2cdc:	da003e17 	ldw	r8,248(sp)
    2ce0:	1021883a 	mov	r16,r2
    2ce4:	1139883a 	add	fp,r2,r4
    2ce8:	2007883a 	mov	r3,r4
    2cec:	81000007 	ldb	r4,0(r16)
    2cf0:	00800c04 	movi	r2,48
    2cf4:	20806f26 	beq	r4,r2,2eb4 <___svfprintf_internal_r+0x2120>
    2cf8:	d8c02617 	ldw	r3,152(sp)
    2cfc:	e0f9883a 	add	fp,fp,r3
    2d00:	003ec206 	br	280c <__alt_mem_onchip_memory2_0+0xf700280c>
    2d04:	00c00b44 	movi	r3,45
    2d08:	2520003c 	xorhi	r20,r4,32768
    2d0c:	d8c02905 	stb	r3,164(sp)
    2d10:	003ea106 	br	2798 <__alt_mem_onchip_memory2_0+0xf7002798>
    2d14:	d8c03217 	ldw	r3,200(sp)
    2d18:	00c0890e 	bge	zero,r3,2f40 <___svfprintf_internal_r+0x21ac>
    2d1c:	00800044 	movi	r2,1
    2d20:	d9003317 	ldw	r4,204(sp)
    2d24:	1105883a 	add	r2,r2,r4
    2d28:	d8802b15 	stw	r2,172(sp)
    2d2c:	10005f16 	blt	r2,zero,2eac <___svfprintf_internal_r+0x2118>
    2d30:	044019c4 	movi	r17,103
    2d34:	003ed906 	br	289c <__alt_mem_onchip_memory2_0+0xf700289c>
    2d38:	d9002a17 	ldw	r4,168(sp)
    2d3c:	20c00044 	addi	r3,r4,1
    2d40:	003e9c06 	br	27b4 <__alt_mem_onchip_memory2_0+0xf70027b4>
    2d44:	d9002a17 	ldw	r4,168(sp)
    2d48:	00c0680e 	bge	zero,r3,2eec <___svfprintf_internal_r+0x2158>
    2d4c:	2000461e 	bne	r4,zero,2e68 <___svfprintf_internal_r+0x20d4>
    2d50:	9480004c 	andi	r18,r18,1
    2d54:	9000441e 	bne	r18,zero,2e68 <___svfprintf_internal_r+0x20d4>
    2d58:	1805883a 	mov	r2,r3
    2d5c:	1800a116 	blt	r3,zero,2fe4 <___svfprintf_internal_r+0x2250>
    2d60:	d8c03217 	ldw	r3,200(sp)
    2d64:	d8c02b15 	stw	r3,172(sp)
    2d68:	003ecc06 	br	289c <__alt_mem_onchip_memory2_0+0xf700289c>
    2d6c:	d9402a17 	ldw	r5,168(sp)
    2d70:	d8802104 	addi	r2,sp,132
    2d74:	d8800315 	stw	r2,12(sp)
    2d78:	d9400015 	stw	r5,0(sp)
    2d7c:	d8802504 	addi	r2,sp,148
    2d80:	d9403617 	ldw	r5,216(sp)
    2d84:	d8800215 	stw	r2,8(sp)
    2d88:	d8802604 	addi	r2,sp,152
    2d8c:	d8800115 	stw	r2,4(sp)
    2d90:	01c000c4 	movi	r7,3
    2d94:	a00d883a 	mov	r6,r20
    2d98:	9809883a 	mov	r4,r19
    2d9c:	da003e15 	stw	r8,248(sp)
    2da0:	00032780 	call	3278 <_dtoa_r>
    2da4:	d8c02a17 	ldw	r3,168(sp)
    2da8:	da003e17 	ldw	r8,248(sp)
    2dac:	1021883a 	mov	r16,r2
    2db0:	00801184 	movi	r2,70
    2db4:	80f9883a 	add	fp,r16,r3
    2db8:	88bfcc26 	beq	r17,r2,2cec <__alt_mem_onchip_memory2_0+0xf7002cec>
    2dbc:	003e9306 	br	280c <__alt_mem_onchip_memory2_0+0xf700280c>
    2dc0:	df0022c4 	addi	fp,sp,139
    2dc4:	dc002a15 	stw	r16,168(sp)
    2dc8:	9829883a 	mov	r20,r19
    2dcc:	e021883a 	mov	r16,fp
    2dd0:	4027883a 	mov	r19,r8
    2dd4:	b009883a 	mov	r4,r22
    2dd8:	01400284 	movi	r5,10
    2ddc:	0000a640 	call	a64 <__modsi3>
    2de0:	10800c04 	addi	r2,r2,48
    2de4:	843fffc4 	addi	r16,r16,-1
    2de8:	b009883a 	mov	r4,r22
    2dec:	01400284 	movi	r5,10
    2df0:	80800005 	stb	r2,0(r16)
    2df4:	00009e00 	call	9e0 <__divsi3>
    2df8:	102d883a 	mov	r22,r2
    2dfc:	00800244 	movi	r2,9
    2e00:	15bff416 	blt	r2,r22,2dd4 <__alt_mem_onchip_memory2_0+0xf7002dd4>
    2e04:	9811883a 	mov	r8,r19
    2e08:	b0800c04 	addi	r2,r22,48
    2e0c:	a027883a 	mov	r19,r20
    2e10:	8029883a 	mov	r20,r16
    2e14:	a17fffc4 	addi	r5,r20,-1
    2e18:	a0bfffc5 	stb	r2,-1(r20)
    2e1c:	dc002a17 	ldw	r16,168(sp)
    2e20:	2f00782e 	bgeu	r5,fp,3004 <___svfprintf_internal_r+0x2270>
    2e24:	d9c02384 	addi	r7,sp,142
    2e28:	3d0fc83a 	sub	r7,r7,r20
    2e2c:	d9002344 	addi	r4,sp,141
    2e30:	e1cf883a 	add	r7,fp,r7
    2e34:	00000106 	br	2e3c <___svfprintf_internal_r+0x20a8>
    2e38:	28800003 	ldbu	r2,0(r5)
    2e3c:	20800005 	stb	r2,0(r4)
    2e40:	21000044 	addi	r4,r4,1
    2e44:	29400044 	addi	r5,r5,1
    2e48:	21fffb1e 	bne	r4,r7,2e38 <__alt_mem_onchip_memory2_0+0xf7002e38>
    2e4c:	d8802304 	addi	r2,sp,140
    2e50:	1505c83a 	sub	r2,r2,r20
    2e54:	d8c02344 	addi	r3,sp,141
    2e58:	1885883a 	add	r2,r3,r2
    2e5c:	003f7006 	br	2c20 <__alt_mem_onchip_memory2_0+0xf7002c20>
    2e60:	0005883a 	mov	r2,zero
    2e64:	003f0b06 	br	2a94 <__alt_mem_onchip_memory2_0+0xf7002a94>
    2e68:	d9002a17 	ldw	r4,168(sp)
    2e6c:	d8c03217 	ldw	r3,200(sp)
    2e70:	20800044 	addi	r2,r4,1
    2e74:	1885883a 	add	r2,r3,r2
    2e78:	d8802b15 	stw	r2,172(sp)
    2e7c:	103e870e 	bge	r2,zero,289c <__alt_mem_onchip_memory2_0+0xf700289c>
    2e80:	0005883a 	mov	r2,zero
    2e84:	003e8506 	br	289c <__alt_mem_onchip_memory2_0+0xf700289c>
    2e88:	01000074 	movhi	r4,1
    2e8c:	21386384 	addi	r4,r4,-7794
    2e90:	d9002c15 	stw	r4,176(sp)
    2e94:	003cc506 	br	21ac <__alt_mem_onchip_memory2_0+0xf70021ac>
    2e98:	d8c03217 	ldw	r3,200(sp)
    2e9c:	18c00044 	addi	r3,r3,1
    2ea0:	d8c02b15 	stw	r3,172(sp)
    2ea4:	1805883a 	mov	r2,r3
    2ea8:	183fa10e 	bge	r3,zero,2d30 <__alt_mem_onchip_memory2_0+0xf7002d30>
    2eac:	0005883a 	mov	r2,zero
    2eb0:	003f9f06 	br	2d30 <__alt_mem_onchip_memory2_0+0xf7002d30>
    2eb4:	d9003617 	ldw	r4,216(sp)
    2eb8:	000d883a 	mov	r6,zero
    2ebc:	000f883a 	mov	r7,zero
    2ec0:	a00b883a 	mov	r5,r20
    2ec4:	d8c03d15 	stw	r3,244(sp)
    2ec8:	da003e15 	stw	r8,248(sp)
    2ecc:	000a8200 	call	a820 <__eqdf2>
    2ed0:	d8c03d17 	ldw	r3,244(sp)
    2ed4:	da003e17 	ldw	r8,248(sp)
    2ed8:	103f8726 	beq	r2,zero,2cf8 <__alt_mem_onchip_memory2_0+0xf7002cf8>
    2edc:	00800044 	movi	r2,1
    2ee0:	10c7c83a 	sub	r3,r2,r3
    2ee4:	d8c02615 	stw	r3,152(sp)
    2ee8:	003f8406 	br	2cfc <__alt_mem_onchip_memory2_0+0xf7002cfc>
    2eec:	20000e1e 	bne	r4,zero,2f28 <___svfprintf_internal_r+0x2194>
    2ef0:	9480004c 	andi	r18,r18,1
    2ef4:	90000c1e 	bne	r18,zero,2f28 <___svfprintf_internal_r+0x2194>
    2ef8:	00800044 	movi	r2,1
    2efc:	d8802b15 	stw	r2,172(sp)
    2f00:	003e6606 	br	289c <__alt_mem_onchip_memory2_0+0xf700289c>
    2f04:	00800b44 	movi	r2,45
    2f08:	05adc83a 	sub	r22,zero,r22
    2f0c:	d8802305 	stb	r2,140(sp)
    2f10:	003f3b06 	br	2c00 <__alt_mem_onchip_memory2_0+0xf7002c00>
    2f14:	0005883a 	mov	r2,zero
    2f18:	003f4e06 	br	2c54 <__alt_mem_onchip_memory2_0+0xf7002c54>
    2f1c:	90a4703a 	and	r18,r18,r2
    2f20:	903f4a26 	beq	r18,zero,2c4c <__alt_mem_onchip_memory2_0+0xf7002c4c>
    2f24:	003f4606 	br	2c40 <__alt_mem_onchip_memory2_0+0xf7002c40>
    2f28:	d8c02a17 	ldw	r3,168(sp)
    2f2c:	18c00084 	addi	r3,r3,2
    2f30:	d8c02b15 	stw	r3,172(sp)
    2f34:	1805883a 	mov	r2,r3
    2f38:	183e580e 	bge	r3,zero,289c <__alt_mem_onchip_memory2_0+0xf700289c>
    2f3c:	003fd006 	br	2e80 <__alt_mem_onchip_memory2_0+0xf7002e80>
    2f40:	00800084 	movi	r2,2
    2f44:	10c5c83a 	sub	r2,r2,r3
    2f48:	003f7506 	br	2d20 <__alt_mem_onchip_memory2_0+0xf7002d20>
    2f4c:	d9402e17 	ldw	r5,184(sp)
    2f50:	d9002e17 	ldw	r4,184(sp)
    2f54:	bc400043 	ldbu	r17,1(r23)
    2f58:	29400017 	ldw	r5,0(r5)
    2f5c:	20800104 	addi	r2,r4,4
    2f60:	d8802e15 	stw	r2,184(sp)
    2f64:	d9402a15 	stw	r5,168(sp)
    2f68:	182f883a 	mov	r23,r3
    2f6c:	283df10e 	bge	r5,zero,2734 <__alt_mem_onchip_memory2_0+0xf7002734>
    2f70:	8c403fcc 	andi	r17,r17,255
    2f74:	017fffc4 	movi	r5,-1
    2f78:	8c40201c 	xori	r17,r17,128
    2f7c:	d9402a15 	stw	r5,168(sp)
    2f80:	8c7fe004 	addi	r17,r17,-128
    2f84:	0037d806 	br	ee8 <__alt_mem_onchip_memory2_0+0xf7000ee8>
    2f88:	9080004c 	andi	r2,r18,1
    2f8c:	0039883a 	mov	fp,zero
    2f90:	10000726 	beq	r2,zero,2fb0 <___svfprintf_internal_r+0x221c>
    2f94:	d8c02817 	ldw	r3,160(sp)
    2f98:	dc001dc4 	addi	r16,sp,119
    2f9c:	00800c04 	movi	r2,48
    2fa0:	1c07c83a 	sub	r3,r3,r16
    2fa4:	d8801dc5 	stb	r2,119(sp)
    2fa8:	d8c02b15 	stw	r3,172(sp)
    2fac:	00393106 	br	1474 <__alt_mem_onchip_memory2_0+0xf7001474>
    2fb0:	d8002b15 	stw	zero,172(sp)
    2fb4:	dc001e04 	addi	r16,sp,120
    2fb8:	00392e06 	br	1474 <__alt_mem_onchip_memory2_0+0xf7001474>
    2fbc:	0005883a 	mov	r2,zero
    2fc0:	003e3306 	br	2890 <__alt_mem_onchip_memory2_0+0xf7002890>
    2fc4:	dd802617 	ldw	r22,152(sp)
    2fc8:	003f0706 	br	2be8 <__alt_mem_onchip_memory2_0+0xf7002be8>
    2fcc:	d8c02b03 	ldbu	r3,172(sp)
    2fd0:	d8c02785 	stb	r3,158(sp)
    2fd4:	003a3506 	br	18ac <__alt_mem_onchip_memory2_0+0xf70018ac>
    2fd8:	d8c02b03 	ldbu	r3,172(sp)
    2fdc:	d8c02785 	stb	r3,158(sp)
    2fe0:	003a1706 	br	1840 <__alt_mem_onchip_memory2_0+0xf7001840>
    2fe4:	0005883a 	mov	r2,zero
    2fe8:	003f5d06 	br	2d60 <__alt_mem_onchip_memory2_0+0xf7002d60>
    2fec:	d8c02b03 	ldbu	r3,172(sp)
    2ff0:	d8c02785 	stb	r3,158(sp)
    2ff4:	0038f306 	br	13c4 <__alt_mem_onchip_memory2_0+0xf70013c4>
    2ff8:	d8c02b03 	ldbu	r3,172(sp)
    2ffc:	d8c02785 	stb	r3,158(sp)
    3000:	0038be06 	br	12fc <__alt_mem_onchip_memory2_0+0xf70012fc>
    3004:	d8802344 	addi	r2,sp,141
    3008:	003f0506 	br	2c20 <__alt_mem_onchip_memory2_0+0xf7002c20>
    300c:	d8c02b03 	ldbu	r3,172(sp)
    3010:	d8c02785 	stb	r3,158(sp)
    3014:	00388b06 	br	1244 <__alt_mem_onchip_memory2_0+0xf7001244>
    3018:	d8c02b03 	ldbu	r3,172(sp)
    301c:	d8c02785 	stb	r3,158(sp)
    3020:	003ad706 	br	1b80 <__alt_mem_onchip_memory2_0+0xf7001b80>
    3024:	d9403917 	ldw	r5,228(sp)
    3028:	00800304 	movi	r2,12
    302c:	28800015 	stw	r2,0(r5)
    3030:	00bfffc4 	movi	r2,-1
    3034:	00384306 	br	1144 <__alt_mem_onchip_memory2_0+0xf7001144>
    3038:	d8c02b03 	ldbu	r3,172(sp)
    303c:	d8c02785 	stb	r3,158(sp)
    3040:	003ab606 	br	1b1c <__alt_mem_onchip_memory2_0+0xf7001b1c>
    3044:	d8c02b03 	ldbu	r3,172(sp)
    3048:	d8c02785 	stb	r3,158(sp)
    304c:	003a8906 	br	1a74 <__alt_mem_onchip_memory2_0+0xf7001a74>

00003050 <quorem>:
    3050:	defff204 	addi	sp,sp,-56
    3054:	ddc00b15 	stw	r23,44(sp)
    3058:	20800417 	ldw	r2,16(r4)
    305c:	2dc00417 	ldw	r23,16(r5)
    3060:	dfc00d15 	stw	ra,52(sp)
    3064:	df000c15 	stw	fp,48(sp)
    3068:	dd800a15 	stw	r22,40(sp)
    306c:	dd400915 	stw	r21,36(sp)
    3070:	dd000815 	stw	r20,32(sp)
    3074:	dcc00715 	stw	r19,28(sp)
    3078:	dc800615 	stw	r18,24(sp)
    307c:	dc400515 	stw	r17,20(sp)
    3080:	dc000415 	stw	r16,16(sp)
    3084:	15c07a16 	blt	r2,r23,3270 <quorem+0x220>
    3088:	bdffffc4 	addi	r23,r23,-1
    308c:	bde9883a 	add	r20,r23,r23
    3090:	28c00504 	addi	r3,r5,20
    3094:	a529883a 	add	r20,r20,r20
    3098:	1d39883a 	add	fp,r3,r20
    309c:	24c00504 	addi	r19,r4,20
    30a0:	d9400215 	stw	r5,8(sp)
    30a4:	9d29883a 	add	r20,r19,r20
    30a8:	e1400017 	ldw	r5,0(fp)
    30ac:	d9000015 	stw	r4,0(sp)
    30b0:	a1000017 	ldw	r4,0(r20)
    30b4:	29400044 	addi	r5,r5,1
    30b8:	d8c00115 	stw	r3,4(sp)
    30bc:	dd000315 	stw	r20,12(sp)
    30c0:	0000ad80 	call	ad8 <__udivsi3>
    30c4:	1025883a 	mov	r18,r2
    30c8:	10003026 	beq	r2,zero,318c <quorem+0x13c>
    30cc:	dc400117 	ldw	r17,4(sp)
    30d0:	9829883a 	mov	r20,r19
    30d4:	002d883a 	mov	r22,zero
    30d8:	0021883a 	mov	r16,zero
    30dc:	8d400017 	ldw	r21,0(r17)
    30e0:	900b883a 	mov	r5,r18
    30e4:	8c400104 	addi	r17,r17,4
    30e8:	a93fffcc 	andi	r4,r21,65535
    30ec:	0000b940 	call	b94 <__mulsi3>
    30f0:	a808d43a 	srli	r4,r21,16
    30f4:	900b883a 	mov	r5,r18
    30f8:	15ad883a 	add	r22,r2,r22
    30fc:	0000b940 	call	b94 <__mulsi3>
    3100:	a1000017 	ldw	r4,0(r20)
    3104:	b00cd43a 	srli	r6,r22,16
    3108:	b0ffffcc 	andi	r3,r22,65535
    310c:	217fffcc 	andi	r5,r4,65535
    3110:	2c21883a 	add	r16,r5,r16
    3114:	80c7c83a 	sub	r3,r16,r3
    3118:	2008d43a 	srli	r4,r4,16
    311c:	1185883a 	add	r2,r2,r6
    3120:	1821d43a 	srai	r16,r3,16
    3124:	117fffcc 	andi	r5,r2,65535
    3128:	2149c83a 	sub	r4,r4,r5
    312c:	2421883a 	add	r16,r4,r16
    3130:	8008943a 	slli	r4,r16,16
    3134:	18ffffcc 	andi	r3,r3,65535
    3138:	102cd43a 	srli	r22,r2,16
    313c:	20c8b03a 	or	r4,r4,r3
    3140:	a1000015 	stw	r4,0(r20)
    3144:	8021d43a 	srai	r16,r16,16
    3148:	a5000104 	addi	r20,r20,4
    314c:	e47fe32e 	bgeu	fp,r17,30dc <__alt_mem_onchip_memory2_0+0xf70030dc>
    3150:	d8c00317 	ldw	r3,12(sp)
    3154:	18800017 	ldw	r2,0(r3)
    3158:	10000c1e 	bne	r2,zero,318c <quorem+0x13c>
    315c:	18bfff04 	addi	r2,r3,-4
    3160:	9880082e 	bgeu	r19,r2,3184 <quorem+0x134>
    3164:	18ffff17 	ldw	r3,-4(r3)
    3168:	18000326 	beq	r3,zero,3178 <quorem+0x128>
    316c:	00000506 	br	3184 <quorem+0x134>
    3170:	10c00017 	ldw	r3,0(r2)
    3174:	1800031e 	bne	r3,zero,3184 <quorem+0x134>
    3178:	10bfff04 	addi	r2,r2,-4
    317c:	bdffffc4 	addi	r23,r23,-1
    3180:	98bffb36 	bltu	r19,r2,3170 <__alt_mem_onchip_memory2_0+0xf7003170>
    3184:	d8c00017 	ldw	r3,0(sp)
    3188:	1dc00415 	stw	r23,16(r3)
    318c:	d9400217 	ldw	r5,8(sp)
    3190:	d9000017 	ldw	r4,0(sp)
    3194:	0005d980 	call	5d98 <__mcmp>
    3198:	10002816 	blt	r2,zero,323c <quorem+0x1ec>
    319c:	dc400117 	ldw	r17,4(sp)
    31a0:	94800044 	addi	r18,r18,1
    31a4:	980d883a 	mov	r6,r19
    31a8:	0007883a 	mov	r3,zero
    31ac:	31000017 	ldw	r4,0(r6)
    31b0:	89400017 	ldw	r5,0(r17)
    31b4:	31800104 	addi	r6,r6,4
    31b8:	20bfffcc 	andi	r2,r4,65535
    31bc:	10c7883a 	add	r3,r2,r3
    31c0:	28bfffcc 	andi	r2,r5,65535
    31c4:	1885c83a 	sub	r2,r3,r2
    31c8:	280ad43a 	srli	r5,r5,16
    31cc:	2008d43a 	srli	r4,r4,16
    31d0:	1007d43a 	srai	r3,r2,16
    31d4:	10bfffcc 	andi	r2,r2,65535
    31d8:	2149c83a 	sub	r4,r4,r5
    31dc:	20c9883a 	add	r4,r4,r3
    31e0:	200a943a 	slli	r5,r4,16
    31e4:	8c400104 	addi	r17,r17,4
    31e8:	2007d43a 	srai	r3,r4,16
    31ec:	2884b03a 	or	r2,r5,r2
    31f0:	30bfff15 	stw	r2,-4(r6)
    31f4:	e47fed2e 	bgeu	fp,r17,31ac <__alt_mem_onchip_memory2_0+0xf70031ac>
    31f8:	bdc5883a 	add	r2,r23,r23
    31fc:	1085883a 	add	r2,r2,r2
    3200:	9887883a 	add	r3,r19,r2
    3204:	18800017 	ldw	r2,0(r3)
    3208:	10000c1e 	bne	r2,zero,323c <quorem+0x1ec>
    320c:	18bfff04 	addi	r2,r3,-4
    3210:	9880082e 	bgeu	r19,r2,3234 <quorem+0x1e4>
    3214:	18ffff17 	ldw	r3,-4(r3)
    3218:	18000326 	beq	r3,zero,3228 <quorem+0x1d8>
    321c:	00000506 	br	3234 <quorem+0x1e4>
    3220:	10c00017 	ldw	r3,0(r2)
    3224:	1800031e 	bne	r3,zero,3234 <quorem+0x1e4>
    3228:	10bfff04 	addi	r2,r2,-4
    322c:	bdffffc4 	addi	r23,r23,-1
    3230:	98bffb36 	bltu	r19,r2,3220 <__alt_mem_onchip_memory2_0+0xf7003220>
    3234:	d8c00017 	ldw	r3,0(sp)
    3238:	1dc00415 	stw	r23,16(r3)
    323c:	9005883a 	mov	r2,r18
    3240:	dfc00d17 	ldw	ra,52(sp)
    3244:	df000c17 	ldw	fp,48(sp)
    3248:	ddc00b17 	ldw	r23,44(sp)
    324c:	dd800a17 	ldw	r22,40(sp)
    3250:	dd400917 	ldw	r21,36(sp)
    3254:	dd000817 	ldw	r20,32(sp)
    3258:	dcc00717 	ldw	r19,28(sp)
    325c:	dc800617 	ldw	r18,24(sp)
    3260:	dc400517 	ldw	r17,20(sp)
    3264:	dc000417 	ldw	r16,16(sp)
    3268:	dec00e04 	addi	sp,sp,56
    326c:	f800283a 	ret
    3270:	0005883a 	mov	r2,zero
    3274:	003ff206 	br	3240 <__alt_mem_onchip_memory2_0+0xf7003240>

00003278 <_dtoa_r>:
    3278:	20801017 	ldw	r2,64(r4)
    327c:	deffde04 	addi	sp,sp,-136
    3280:	df002015 	stw	fp,128(sp)
    3284:	dcc01b15 	stw	r19,108(sp)
    3288:	dc801a15 	stw	r18,104(sp)
    328c:	dc401915 	stw	r17,100(sp)
    3290:	dc001815 	stw	r16,96(sp)
    3294:	dfc02115 	stw	ra,132(sp)
    3298:	ddc01f15 	stw	r23,124(sp)
    329c:	dd801e15 	stw	r22,120(sp)
    32a0:	dd401d15 	stw	r21,116(sp)
    32a4:	dd001c15 	stw	r20,112(sp)
    32a8:	d9c00315 	stw	r7,12(sp)
    32ac:	2039883a 	mov	fp,r4
    32b0:	3023883a 	mov	r17,r6
    32b4:	2825883a 	mov	r18,r5
    32b8:	dc002417 	ldw	r16,144(sp)
    32bc:	3027883a 	mov	r19,r6
    32c0:	10000826 	beq	r2,zero,32e4 <_dtoa_r+0x6c>
    32c4:	21801117 	ldw	r6,68(r4)
    32c8:	00c00044 	movi	r3,1
    32cc:	100b883a 	mov	r5,r2
    32d0:	1986983a 	sll	r3,r3,r6
    32d4:	11800115 	stw	r6,4(r2)
    32d8:	10c00215 	stw	r3,8(r2)
    32dc:	00054bc0 	call	54bc <_Bfree>
    32e0:	e0001015 	stw	zero,64(fp)
    32e4:	88002e16 	blt	r17,zero,33a0 <_dtoa_r+0x128>
    32e8:	80000015 	stw	zero,0(r16)
    32ec:	889ffc2c 	andhi	r2,r17,32752
    32f0:	00dffc34 	movhi	r3,32752
    32f4:	10c01c26 	beq	r2,r3,3368 <_dtoa_r+0xf0>
    32f8:	000d883a 	mov	r6,zero
    32fc:	000f883a 	mov	r7,zero
    3300:	9009883a 	mov	r4,r18
    3304:	980b883a 	mov	r5,r19
    3308:	000a8200 	call	a820 <__eqdf2>
    330c:	10002b1e 	bne	r2,zero,33bc <_dtoa_r+0x144>
    3310:	d9c02317 	ldw	r7,140(sp)
    3314:	00800044 	movi	r2,1
    3318:	38800015 	stw	r2,0(r7)
    331c:	d8802517 	ldw	r2,148(sp)
    3320:	10019e26 	beq	r2,zero,399c <_dtoa_r+0x724>
    3324:	d8c02517 	ldw	r3,148(sp)
    3328:	00800074 	movhi	r2,1
    332c:	10b86344 	addi	r2,r2,-7795
    3330:	18800015 	stw	r2,0(r3)
    3334:	10bfffc4 	addi	r2,r2,-1
    3338:	dfc02117 	ldw	ra,132(sp)
    333c:	df002017 	ldw	fp,128(sp)
    3340:	ddc01f17 	ldw	r23,124(sp)
    3344:	dd801e17 	ldw	r22,120(sp)
    3348:	dd401d17 	ldw	r21,116(sp)
    334c:	dd001c17 	ldw	r20,112(sp)
    3350:	dcc01b17 	ldw	r19,108(sp)
    3354:	dc801a17 	ldw	r18,104(sp)
    3358:	dc401917 	ldw	r17,100(sp)
    335c:	dc001817 	ldw	r16,96(sp)
    3360:	dec02204 	addi	sp,sp,136
    3364:	f800283a 	ret
    3368:	d8c02317 	ldw	r3,140(sp)
    336c:	0089c3c4 	movi	r2,9999
    3370:	18800015 	stw	r2,0(r3)
    3374:	90017726 	beq	r18,zero,3954 <_dtoa_r+0x6dc>
    3378:	00800074 	movhi	r2,1
    337c:	10b86f04 	addi	r2,r2,-7748
    3380:	d9002517 	ldw	r4,148(sp)
    3384:	203fec26 	beq	r4,zero,3338 <__alt_mem_onchip_memory2_0+0xf7003338>
    3388:	10c000c7 	ldb	r3,3(r2)
    338c:	1801781e 	bne	r3,zero,3970 <_dtoa_r+0x6f8>
    3390:	10c000c4 	addi	r3,r2,3
    3394:	d9802517 	ldw	r6,148(sp)
    3398:	30c00015 	stw	r3,0(r6)
    339c:	003fe606 	br	3338 <__alt_mem_onchip_memory2_0+0xf7003338>
    33a0:	04e00034 	movhi	r19,32768
    33a4:	9cffffc4 	addi	r19,r19,-1
    33a8:	00800044 	movi	r2,1
    33ac:	8ce6703a 	and	r19,r17,r19
    33b0:	80800015 	stw	r2,0(r16)
    33b4:	9823883a 	mov	r17,r19
    33b8:	003fcc06 	br	32ec <__alt_mem_onchip_memory2_0+0xf70032ec>
    33bc:	d8800204 	addi	r2,sp,8
    33c0:	d8800015 	stw	r2,0(sp)
    33c4:	d9c00104 	addi	r7,sp,4
    33c8:	900b883a 	mov	r5,r18
    33cc:	980d883a 	mov	r6,r19
    33d0:	e009883a 	mov	r4,fp
    33d4:	8820d53a 	srli	r16,r17,20
    33d8:	00061640 	call	6164 <__d2b>
    33dc:	d8800915 	stw	r2,36(sp)
    33e0:	8001651e 	bne	r16,zero,3978 <_dtoa_r+0x700>
    33e4:	dd800217 	ldw	r22,8(sp)
    33e8:	dc000117 	ldw	r16,4(sp)
    33ec:	00800804 	movi	r2,32
    33f0:	b421883a 	add	r16,r22,r16
    33f4:	80c10c84 	addi	r3,r16,1074
    33f8:	10c2d10e 	bge	r2,r3,3f40 <_dtoa_r+0xcc8>
    33fc:	00801004 	movi	r2,64
    3400:	81010484 	addi	r4,r16,1042
    3404:	10c7c83a 	sub	r3,r2,r3
    3408:	9108d83a 	srl	r4,r18,r4
    340c:	88e2983a 	sll	r17,r17,r3
    3410:	2448b03a 	or	r4,r4,r17
    3414:	000bd3c0 	call	bd3c <__floatunsidf>
    3418:	017f8434 	movhi	r5,65040
    341c:	01800044 	movi	r6,1
    3420:	1009883a 	mov	r4,r2
    3424:	194b883a 	add	r5,r3,r5
    3428:	843fffc4 	addi	r16,r16,-1
    342c:	d9801115 	stw	r6,68(sp)
    3430:	000d883a 	mov	r6,zero
    3434:	01cffe34 	movhi	r7,16376
    3438:	000b2e40 	call	b2e4 <__subdf3>
    343c:	0198dbf4 	movhi	r6,25455
    3440:	01cff4f4 	movhi	r7,16339
    3444:	3190d844 	addi	r6,r6,17249
    3448:	39e1e9c4 	addi	r7,r7,-30809
    344c:	1009883a 	mov	r4,r2
    3450:	180b883a 	mov	r5,r3
    3454:	000aa780 	call	aa78 <__muldf3>
    3458:	01a2d874 	movhi	r6,35681
    345c:	01cff1f4 	movhi	r7,16327
    3460:	31b22cc4 	addi	r6,r6,-14157
    3464:	39e28a04 	addi	r7,r7,-30168
    3468:	180b883a 	mov	r5,r3
    346c:	1009883a 	mov	r4,r2
    3470:	00095a40 	call	95a4 <__adddf3>
    3474:	8009883a 	mov	r4,r16
    3478:	1029883a 	mov	r20,r2
    347c:	1823883a 	mov	r17,r3
    3480:	000bc600 	call	bc60 <__floatsidf>
    3484:	019427f4 	movhi	r6,20639
    3488:	01cff4f4 	movhi	r7,16339
    348c:	319e7ec4 	addi	r6,r6,31227
    3490:	39d104c4 	addi	r7,r7,17427
    3494:	1009883a 	mov	r4,r2
    3498:	180b883a 	mov	r5,r3
    349c:	000aa780 	call	aa78 <__muldf3>
    34a0:	100d883a 	mov	r6,r2
    34a4:	180f883a 	mov	r7,r3
    34a8:	a009883a 	mov	r4,r20
    34ac:	880b883a 	mov	r5,r17
    34b0:	00095a40 	call	95a4 <__adddf3>
    34b4:	1009883a 	mov	r4,r2
    34b8:	180b883a 	mov	r5,r3
    34bc:	1029883a 	mov	r20,r2
    34c0:	1823883a 	mov	r17,r3
    34c4:	000bbe00 	call	bbe0 <__fixdfsi>
    34c8:	000d883a 	mov	r6,zero
    34cc:	000f883a 	mov	r7,zero
    34d0:	a009883a 	mov	r4,r20
    34d4:	880b883a 	mov	r5,r17
    34d8:	d8800515 	stw	r2,20(sp)
    34dc:	000a9840 	call	a984 <__ledf2>
    34e0:	10028716 	blt	r2,zero,3f00 <_dtoa_r+0xc88>
    34e4:	d8c00517 	ldw	r3,20(sp)
    34e8:	00800584 	movi	r2,22
    34ec:	10c27536 	bltu	r2,r3,3ec4 <_dtoa_r+0xc4c>
    34f0:	180490fa 	slli	r2,r3,3
    34f4:	00c00074 	movhi	r3,1
    34f8:	18f88b04 	addi	r3,r3,-7636
    34fc:	1885883a 	add	r2,r3,r2
    3500:	11000017 	ldw	r4,0(r2)
    3504:	11400117 	ldw	r5,4(r2)
    3508:	900d883a 	mov	r6,r18
    350c:	980f883a 	mov	r7,r19
    3510:	000a8a80 	call	a8a8 <__gedf2>
    3514:	00828d0e 	bge	zero,r2,3f4c <_dtoa_r+0xcd4>
    3518:	d9000517 	ldw	r4,20(sp)
    351c:	d8000e15 	stw	zero,56(sp)
    3520:	213fffc4 	addi	r4,r4,-1
    3524:	d9000515 	stw	r4,20(sp)
    3528:	b42dc83a 	sub	r22,r22,r16
    352c:	b5bfffc4 	addi	r22,r22,-1
    3530:	b0026f16 	blt	r22,zero,3ef0 <_dtoa_r+0xc78>
    3534:	d8000815 	stw	zero,32(sp)
    3538:	d9c00517 	ldw	r7,20(sp)
    353c:	38026416 	blt	r7,zero,3ed0 <_dtoa_r+0xc58>
    3540:	b1ed883a 	add	r22,r22,r7
    3544:	d9c00d15 	stw	r7,52(sp)
    3548:	d8000a15 	stw	zero,40(sp)
    354c:	d9800317 	ldw	r6,12(sp)
    3550:	00800244 	movi	r2,9
    3554:	11811436 	bltu	r2,r6,39a8 <_dtoa_r+0x730>
    3558:	00800144 	movi	r2,5
    355c:	1184e10e 	bge	r2,r6,48e4 <_dtoa_r+0x166c>
    3560:	31bfff04 	addi	r6,r6,-4
    3564:	d9800315 	stw	r6,12(sp)
    3568:	0023883a 	mov	r17,zero
    356c:	d9800317 	ldw	r6,12(sp)
    3570:	008000c4 	movi	r2,3
    3574:	30836726 	beq	r6,r2,4314 <_dtoa_r+0x109c>
    3578:	1183410e 	bge	r2,r6,4280 <_dtoa_r+0x1008>
    357c:	d9c00317 	ldw	r7,12(sp)
    3580:	00800104 	movi	r2,4
    3584:	38827c26 	beq	r7,r2,3f78 <_dtoa_r+0xd00>
    3588:	00800144 	movi	r2,5
    358c:	3884c41e 	bne	r7,r2,48a0 <_dtoa_r+0x1628>
    3590:	00800044 	movi	r2,1
    3594:	d8800b15 	stw	r2,44(sp)
    3598:	d8c00517 	ldw	r3,20(sp)
    359c:	d9002217 	ldw	r4,136(sp)
    35a0:	1907883a 	add	r3,r3,r4
    35a4:	19800044 	addi	r6,r3,1
    35a8:	d8c00c15 	stw	r3,48(sp)
    35ac:	d9800615 	stw	r6,24(sp)
    35b0:	0183a40e 	bge	zero,r6,4444 <_dtoa_r+0x11cc>
    35b4:	d9800617 	ldw	r6,24(sp)
    35b8:	3021883a 	mov	r16,r6
    35bc:	e0001115 	stw	zero,68(fp)
    35c0:	008005c4 	movi	r2,23
    35c4:	1184c92e 	bgeu	r2,r6,48ec <_dtoa_r+0x1674>
    35c8:	00c00044 	movi	r3,1
    35cc:	00800104 	movi	r2,4
    35d0:	1085883a 	add	r2,r2,r2
    35d4:	11000504 	addi	r4,r2,20
    35d8:	180b883a 	mov	r5,r3
    35dc:	18c00044 	addi	r3,r3,1
    35e0:	313ffb2e 	bgeu	r6,r4,35d0 <__alt_mem_onchip_memory2_0+0xf70035d0>
    35e4:	e1401115 	stw	r5,68(fp)
    35e8:	e009883a 	mov	r4,fp
    35ec:	00054140 	call	5414 <_Balloc>
    35f0:	d8800715 	stw	r2,28(sp)
    35f4:	e0801015 	stw	r2,64(fp)
    35f8:	00800384 	movi	r2,14
    35fc:	1400f736 	bltu	r2,r16,39dc <_dtoa_r+0x764>
    3600:	8800f626 	beq	r17,zero,39dc <_dtoa_r+0x764>
    3604:	d9c00517 	ldw	r7,20(sp)
    3608:	01c39a0e 	bge	zero,r7,4474 <_dtoa_r+0x11fc>
    360c:	388003cc 	andi	r2,r7,15
    3610:	100490fa 	slli	r2,r2,3
    3614:	382bd13a 	srai	r21,r7,4
    3618:	00c00074 	movhi	r3,1
    361c:	18f88b04 	addi	r3,r3,-7636
    3620:	1885883a 	add	r2,r3,r2
    3624:	a8c0040c 	andi	r3,r21,16
    3628:	12400017 	ldw	r9,0(r2)
    362c:	12000117 	ldw	r8,4(r2)
    3630:	18037926 	beq	r3,zero,4418 <_dtoa_r+0x11a0>
    3634:	00800074 	movhi	r2,1
    3638:	10b88104 	addi	r2,r2,-7676
    363c:	11800817 	ldw	r6,32(r2)
    3640:	11c00917 	ldw	r7,36(r2)
    3644:	9009883a 	mov	r4,r18
    3648:	980b883a 	mov	r5,r19
    364c:	da001715 	stw	r8,92(sp)
    3650:	da401615 	stw	r9,88(sp)
    3654:	0009e500 	call	9e50 <__divdf3>
    3658:	da001717 	ldw	r8,92(sp)
    365c:	da401617 	ldw	r9,88(sp)
    3660:	ad4003cc 	andi	r21,r21,15
    3664:	040000c4 	movi	r16,3
    3668:	1023883a 	mov	r17,r2
    366c:	1829883a 	mov	r20,r3
    3670:	a8001126 	beq	r21,zero,36b8 <_dtoa_r+0x440>
    3674:	05c00074 	movhi	r23,1
    3678:	bdf88104 	addi	r23,r23,-7676
    367c:	4805883a 	mov	r2,r9
    3680:	4007883a 	mov	r3,r8
    3684:	a980004c 	andi	r6,r21,1
    3688:	1009883a 	mov	r4,r2
    368c:	a82bd07a 	srai	r21,r21,1
    3690:	180b883a 	mov	r5,r3
    3694:	30000426 	beq	r6,zero,36a8 <_dtoa_r+0x430>
    3698:	b9800017 	ldw	r6,0(r23)
    369c:	b9c00117 	ldw	r7,4(r23)
    36a0:	84000044 	addi	r16,r16,1
    36a4:	000aa780 	call	aa78 <__muldf3>
    36a8:	bdc00204 	addi	r23,r23,8
    36ac:	a83ff51e 	bne	r21,zero,3684 <__alt_mem_onchip_memory2_0+0xf7003684>
    36b0:	1013883a 	mov	r9,r2
    36b4:	1811883a 	mov	r8,r3
    36b8:	480d883a 	mov	r6,r9
    36bc:	400f883a 	mov	r7,r8
    36c0:	8809883a 	mov	r4,r17
    36c4:	a00b883a 	mov	r5,r20
    36c8:	0009e500 	call	9e50 <__divdf3>
    36cc:	d8800f15 	stw	r2,60(sp)
    36d0:	d8c01015 	stw	r3,64(sp)
    36d4:	d8c00e17 	ldw	r3,56(sp)
    36d8:	18000626 	beq	r3,zero,36f4 <_dtoa_r+0x47c>
    36dc:	d9000f17 	ldw	r4,60(sp)
    36e0:	d9401017 	ldw	r5,64(sp)
    36e4:	000d883a 	mov	r6,zero
    36e8:	01cffc34 	movhi	r7,16368
    36ec:	000a9840 	call	a984 <__ledf2>
    36f0:	10040b16 	blt	r2,zero,4720 <_dtoa_r+0x14a8>
    36f4:	8009883a 	mov	r4,r16
    36f8:	000bc600 	call	bc60 <__floatsidf>
    36fc:	d9800f17 	ldw	r6,60(sp)
    3700:	d9c01017 	ldw	r7,64(sp)
    3704:	1009883a 	mov	r4,r2
    3708:	180b883a 	mov	r5,r3
    370c:	000aa780 	call	aa78 <__muldf3>
    3710:	000d883a 	mov	r6,zero
    3714:	01d00734 	movhi	r7,16412
    3718:	1009883a 	mov	r4,r2
    371c:	180b883a 	mov	r5,r3
    3720:	00095a40 	call	95a4 <__adddf3>
    3724:	1021883a 	mov	r16,r2
    3728:	d8800617 	ldw	r2,24(sp)
    372c:	047f3034 	movhi	r17,64704
    3730:	1c63883a 	add	r17,r3,r17
    3734:	10031826 	beq	r2,zero,4398 <_dtoa_r+0x1120>
    3738:	d8c00517 	ldw	r3,20(sp)
    373c:	db000617 	ldw	r12,24(sp)
    3740:	d8c01315 	stw	r3,76(sp)
    3744:	d9000b17 	ldw	r4,44(sp)
    3748:	20038f26 	beq	r4,zero,4588 <_dtoa_r+0x1310>
    374c:	60bfffc4 	addi	r2,r12,-1
    3750:	100490fa 	slli	r2,r2,3
    3754:	00c00074 	movhi	r3,1
    3758:	18f88b04 	addi	r3,r3,-7636
    375c:	1885883a 	add	r2,r3,r2
    3760:	11800017 	ldw	r6,0(r2)
    3764:	11c00117 	ldw	r7,4(r2)
    3768:	d8800717 	ldw	r2,28(sp)
    376c:	0009883a 	mov	r4,zero
    3770:	014ff834 	movhi	r5,16352
    3774:	db001615 	stw	r12,88(sp)
    3778:	15c00044 	addi	r23,r2,1
    377c:	0009e500 	call	9e50 <__divdf3>
    3780:	800d883a 	mov	r6,r16
    3784:	880f883a 	mov	r7,r17
    3788:	1009883a 	mov	r4,r2
    378c:	180b883a 	mov	r5,r3
    3790:	000b2e40 	call	b2e4 <__subdf3>
    3794:	d9401017 	ldw	r5,64(sp)
    3798:	d9000f17 	ldw	r4,60(sp)
    379c:	102b883a 	mov	r21,r2
    37a0:	d8c01215 	stw	r3,72(sp)
    37a4:	000bbe00 	call	bbe0 <__fixdfsi>
    37a8:	1009883a 	mov	r4,r2
    37ac:	1029883a 	mov	r20,r2
    37b0:	000bc600 	call	bc60 <__floatsidf>
    37b4:	d9000f17 	ldw	r4,60(sp)
    37b8:	d9401017 	ldw	r5,64(sp)
    37bc:	100d883a 	mov	r6,r2
    37c0:	180f883a 	mov	r7,r3
    37c4:	000b2e40 	call	b2e4 <__subdf3>
    37c8:	1823883a 	mov	r17,r3
    37cc:	d8c00717 	ldw	r3,28(sp)
    37d0:	d9401217 	ldw	r5,72(sp)
    37d4:	a2000c04 	addi	r8,r20,48
    37d8:	1021883a 	mov	r16,r2
    37dc:	1a000005 	stb	r8,0(r3)
    37e0:	800d883a 	mov	r6,r16
    37e4:	880f883a 	mov	r7,r17
    37e8:	a809883a 	mov	r4,r21
    37ec:	4029883a 	mov	r20,r8
    37f0:	000a8a80 	call	a8a8 <__gedf2>
    37f4:	00841d16 	blt	zero,r2,486c <_dtoa_r+0x15f4>
    37f8:	800d883a 	mov	r6,r16
    37fc:	880f883a 	mov	r7,r17
    3800:	0009883a 	mov	r4,zero
    3804:	014ffc34 	movhi	r5,16368
    3808:	000b2e40 	call	b2e4 <__subdf3>
    380c:	d9401217 	ldw	r5,72(sp)
    3810:	100d883a 	mov	r6,r2
    3814:	180f883a 	mov	r7,r3
    3818:	a809883a 	mov	r4,r21
    381c:	000a8a80 	call	a8a8 <__gedf2>
    3820:	db001617 	ldw	r12,88(sp)
    3824:	00840e16 	blt	zero,r2,4860 <_dtoa_r+0x15e8>
    3828:	00800044 	movi	r2,1
    382c:	13006b0e 	bge	r2,r12,39dc <_dtoa_r+0x764>
    3830:	d9000717 	ldw	r4,28(sp)
    3834:	dd800f15 	stw	r22,60(sp)
    3838:	dcc01015 	stw	r19,64(sp)
    383c:	2319883a 	add	r12,r4,r12
    3840:	dcc01217 	ldw	r19,72(sp)
    3844:	602d883a 	mov	r22,r12
    3848:	dc801215 	stw	r18,72(sp)
    384c:	b825883a 	mov	r18,r23
    3850:	00000906 	br	3878 <_dtoa_r+0x600>
    3854:	000b2e40 	call	b2e4 <__subdf3>
    3858:	a80d883a 	mov	r6,r21
    385c:	980f883a 	mov	r7,r19
    3860:	1009883a 	mov	r4,r2
    3864:	180b883a 	mov	r5,r3
    3868:	000a9840 	call	a984 <__ledf2>
    386c:	1003e816 	blt	r2,zero,4810 <_dtoa_r+0x1598>
    3870:	b825883a 	mov	r18,r23
    3874:	bd83e926 	beq	r23,r22,481c <_dtoa_r+0x15a4>
    3878:	a809883a 	mov	r4,r21
    387c:	980b883a 	mov	r5,r19
    3880:	000d883a 	mov	r6,zero
    3884:	01d00934 	movhi	r7,16420
    3888:	000aa780 	call	aa78 <__muldf3>
    388c:	000d883a 	mov	r6,zero
    3890:	01d00934 	movhi	r7,16420
    3894:	8009883a 	mov	r4,r16
    3898:	880b883a 	mov	r5,r17
    389c:	102b883a 	mov	r21,r2
    38a0:	1827883a 	mov	r19,r3
    38a4:	000aa780 	call	aa78 <__muldf3>
    38a8:	180b883a 	mov	r5,r3
    38ac:	1009883a 	mov	r4,r2
    38b0:	1821883a 	mov	r16,r3
    38b4:	1023883a 	mov	r17,r2
    38b8:	000bbe00 	call	bbe0 <__fixdfsi>
    38bc:	1009883a 	mov	r4,r2
    38c0:	1029883a 	mov	r20,r2
    38c4:	000bc600 	call	bc60 <__floatsidf>
    38c8:	8809883a 	mov	r4,r17
    38cc:	800b883a 	mov	r5,r16
    38d0:	100d883a 	mov	r6,r2
    38d4:	180f883a 	mov	r7,r3
    38d8:	000b2e40 	call	b2e4 <__subdf3>
    38dc:	a5000c04 	addi	r20,r20,48
    38e0:	a80d883a 	mov	r6,r21
    38e4:	980f883a 	mov	r7,r19
    38e8:	1009883a 	mov	r4,r2
    38ec:	180b883a 	mov	r5,r3
    38f0:	95000005 	stb	r20,0(r18)
    38f4:	1021883a 	mov	r16,r2
    38f8:	1823883a 	mov	r17,r3
    38fc:	000a9840 	call	a984 <__ledf2>
    3900:	bdc00044 	addi	r23,r23,1
    3904:	800d883a 	mov	r6,r16
    3908:	880f883a 	mov	r7,r17
    390c:	0009883a 	mov	r4,zero
    3910:	014ffc34 	movhi	r5,16368
    3914:	103fcf0e 	bge	r2,zero,3854 <__alt_mem_onchip_memory2_0+0xf7003854>
    3918:	d8c01317 	ldw	r3,76(sp)
    391c:	d8c00515 	stw	r3,20(sp)
    3920:	d9400917 	ldw	r5,36(sp)
    3924:	e009883a 	mov	r4,fp
    3928:	00054bc0 	call	54bc <_Bfree>
    392c:	d9000517 	ldw	r4,20(sp)
    3930:	d9802317 	ldw	r6,140(sp)
    3934:	d9c02517 	ldw	r7,148(sp)
    3938:	b8000005 	stb	zero,0(r23)
    393c:	20800044 	addi	r2,r4,1
    3940:	30800015 	stw	r2,0(r6)
    3944:	3802aa26 	beq	r7,zero,43f0 <_dtoa_r+0x1178>
    3948:	3dc00015 	stw	r23,0(r7)
    394c:	d8800717 	ldw	r2,28(sp)
    3950:	003e7906 	br	3338 <__alt_mem_onchip_memory2_0+0xf7003338>
    3954:	00800434 	movhi	r2,16
    3958:	10bfffc4 	addi	r2,r2,-1
    395c:	88a2703a 	and	r17,r17,r2
    3960:	883e851e 	bne	r17,zero,3378 <__alt_mem_onchip_memory2_0+0xf7003378>
    3964:	00800074 	movhi	r2,1
    3968:	10b86c04 	addi	r2,r2,-7760
    396c:	003e8406 	br	3380 <__alt_mem_onchip_memory2_0+0xf7003380>
    3970:	10c00204 	addi	r3,r2,8
    3974:	003e8706 	br	3394 <__alt_mem_onchip_memory2_0+0xf7003394>
    3978:	01400434 	movhi	r5,16
    397c:	297fffc4 	addi	r5,r5,-1
    3980:	994a703a 	and	r5,r19,r5
    3984:	9009883a 	mov	r4,r18
    3988:	843f0044 	addi	r16,r16,-1023
    398c:	294ffc34 	orhi	r5,r5,16368
    3990:	dd800217 	ldw	r22,8(sp)
    3994:	d8001115 	stw	zero,68(sp)
    3998:	003ea506 	br	3430 <__alt_mem_onchip_memory2_0+0xf7003430>
    399c:	00800074 	movhi	r2,1
    39a0:	10b86304 	addi	r2,r2,-7796
    39a4:	003e6406 	br	3338 <__alt_mem_onchip_memory2_0+0xf7003338>
    39a8:	e0001115 	stw	zero,68(fp)
    39ac:	000b883a 	mov	r5,zero
    39b0:	e009883a 	mov	r4,fp
    39b4:	00054140 	call	5414 <_Balloc>
    39b8:	01bfffc4 	movi	r6,-1
    39bc:	01c00044 	movi	r7,1
    39c0:	d8800715 	stw	r2,28(sp)
    39c4:	d9800c15 	stw	r6,48(sp)
    39c8:	e0801015 	stw	r2,64(fp)
    39cc:	d8000315 	stw	zero,12(sp)
    39d0:	d9c00b15 	stw	r7,44(sp)
    39d4:	d9800615 	stw	r6,24(sp)
    39d8:	d8002215 	stw	zero,136(sp)
    39dc:	d8800117 	ldw	r2,4(sp)
    39e0:	10008916 	blt	r2,zero,3c08 <_dtoa_r+0x990>
    39e4:	d9000517 	ldw	r4,20(sp)
    39e8:	00c00384 	movi	r3,14
    39ec:	19008616 	blt	r3,r4,3c08 <_dtoa_r+0x990>
    39f0:	200490fa 	slli	r2,r4,3
    39f4:	00c00074 	movhi	r3,1
    39f8:	d9802217 	ldw	r6,136(sp)
    39fc:	18f88b04 	addi	r3,r3,-7636
    3a00:	1885883a 	add	r2,r3,r2
    3a04:	14000017 	ldw	r16,0(r2)
    3a08:	14400117 	ldw	r17,4(r2)
    3a0c:	30016316 	blt	r6,zero,3f9c <_dtoa_r+0xd24>
    3a10:	800d883a 	mov	r6,r16
    3a14:	880f883a 	mov	r7,r17
    3a18:	9009883a 	mov	r4,r18
    3a1c:	980b883a 	mov	r5,r19
    3a20:	0009e500 	call	9e50 <__divdf3>
    3a24:	180b883a 	mov	r5,r3
    3a28:	1009883a 	mov	r4,r2
    3a2c:	000bbe00 	call	bbe0 <__fixdfsi>
    3a30:	1009883a 	mov	r4,r2
    3a34:	102b883a 	mov	r21,r2
    3a38:	000bc600 	call	bc60 <__floatsidf>
    3a3c:	800d883a 	mov	r6,r16
    3a40:	880f883a 	mov	r7,r17
    3a44:	1009883a 	mov	r4,r2
    3a48:	180b883a 	mov	r5,r3
    3a4c:	000aa780 	call	aa78 <__muldf3>
    3a50:	100d883a 	mov	r6,r2
    3a54:	180f883a 	mov	r7,r3
    3a58:	9009883a 	mov	r4,r18
    3a5c:	980b883a 	mov	r5,r19
    3a60:	000b2e40 	call	b2e4 <__subdf3>
    3a64:	d9c00717 	ldw	r7,28(sp)
    3a68:	1009883a 	mov	r4,r2
    3a6c:	a8800c04 	addi	r2,r21,48
    3a70:	38800005 	stb	r2,0(r7)
    3a74:	3dc00044 	addi	r23,r7,1
    3a78:	d9c00617 	ldw	r7,24(sp)
    3a7c:	01800044 	movi	r6,1
    3a80:	180b883a 	mov	r5,r3
    3a84:	2005883a 	mov	r2,r4
    3a88:	39803826 	beq	r7,r6,3b6c <_dtoa_r+0x8f4>
    3a8c:	000d883a 	mov	r6,zero
    3a90:	01d00934 	movhi	r7,16420
    3a94:	000aa780 	call	aa78 <__muldf3>
    3a98:	000d883a 	mov	r6,zero
    3a9c:	000f883a 	mov	r7,zero
    3aa0:	1009883a 	mov	r4,r2
    3aa4:	180b883a 	mov	r5,r3
    3aa8:	1025883a 	mov	r18,r2
    3aac:	1827883a 	mov	r19,r3
    3ab0:	000a8200 	call	a820 <__eqdf2>
    3ab4:	103f9a26 	beq	r2,zero,3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3ab8:	d9c00617 	ldw	r7,24(sp)
    3abc:	d8c00717 	ldw	r3,28(sp)
    3ac0:	b829883a 	mov	r20,r23
    3ac4:	38bfffc4 	addi	r2,r7,-1
    3ac8:	18ad883a 	add	r22,r3,r2
    3acc:	00000a06 	br	3af8 <_dtoa_r+0x880>
    3ad0:	000aa780 	call	aa78 <__muldf3>
    3ad4:	000d883a 	mov	r6,zero
    3ad8:	000f883a 	mov	r7,zero
    3adc:	1009883a 	mov	r4,r2
    3ae0:	180b883a 	mov	r5,r3
    3ae4:	1025883a 	mov	r18,r2
    3ae8:	1827883a 	mov	r19,r3
    3aec:	b829883a 	mov	r20,r23
    3af0:	000a8200 	call	a820 <__eqdf2>
    3af4:	103f8a26 	beq	r2,zero,3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3af8:	800d883a 	mov	r6,r16
    3afc:	880f883a 	mov	r7,r17
    3b00:	9009883a 	mov	r4,r18
    3b04:	980b883a 	mov	r5,r19
    3b08:	0009e500 	call	9e50 <__divdf3>
    3b0c:	180b883a 	mov	r5,r3
    3b10:	1009883a 	mov	r4,r2
    3b14:	000bbe00 	call	bbe0 <__fixdfsi>
    3b18:	1009883a 	mov	r4,r2
    3b1c:	102b883a 	mov	r21,r2
    3b20:	000bc600 	call	bc60 <__floatsidf>
    3b24:	800d883a 	mov	r6,r16
    3b28:	880f883a 	mov	r7,r17
    3b2c:	1009883a 	mov	r4,r2
    3b30:	180b883a 	mov	r5,r3
    3b34:	000aa780 	call	aa78 <__muldf3>
    3b38:	100d883a 	mov	r6,r2
    3b3c:	180f883a 	mov	r7,r3
    3b40:	9009883a 	mov	r4,r18
    3b44:	980b883a 	mov	r5,r19
    3b48:	000b2e40 	call	b2e4 <__subdf3>
    3b4c:	aa000c04 	addi	r8,r21,48
    3b50:	a2000005 	stb	r8,0(r20)
    3b54:	000d883a 	mov	r6,zero
    3b58:	01d00934 	movhi	r7,16420
    3b5c:	1009883a 	mov	r4,r2
    3b60:	180b883a 	mov	r5,r3
    3b64:	a5c00044 	addi	r23,r20,1
    3b68:	b53fd91e 	bne	r22,r20,3ad0 <__alt_mem_onchip_memory2_0+0xf7003ad0>
    3b6c:	100d883a 	mov	r6,r2
    3b70:	180f883a 	mov	r7,r3
    3b74:	1009883a 	mov	r4,r2
    3b78:	180b883a 	mov	r5,r3
    3b7c:	00095a40 	call	95a4 <__adddf3>
    3b80:	100d883a 	mov	r6,r2
    3b84:	180f883a 	mov	r7,r3
    3b88:	8009883a 	mov	r4,r16
    3b8c:	880b883a 	mov	r5,r17
    3b90:	1027883a 	mov	r19,r2
    3b94:	1825883a 	mov	r18,r3
    3b98:	000a9840 	call	a984 <__ledf2>
    3b9c:	10000816 	blt	r2,zero,3bc0 <_dtoa_r+0x948>
    3ba0:	980d883a 	mov	r6,r19
    3ba4:	900f883a 	mov	r7,r18
    3ba8:	8009883a 	mov	r4,r16
    3bac:	880b883a 	mov	r5,r17
    3bb0:	000a8200 	call	a820 <__eqdf2>
    3bb4:	103f5a1e 	bne	r2,zero,3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3bb8:	ad40004c 	andi	r21,r21,1
    3bbc:	a83f5826 	beq	r21,zero,3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3bc0:	bd3fffc3 	ldbu	r20,-1(r23)
    3bc4:	b8bfffc4 	addi	r2,r23,-1
    3bc8:	1007883a 	mov	r3,r2
    3bcc:	01400e44 	movi	r5,57
    3bd0:	d9800717 	ldw	r6,28(sp)
    3bd4:	00000506 	br	3bec <_dtoa_r+0x974>
    3bd8:	18ffffc4 	addi	r3,r3,-1
    3bdc:	11824726 	beq	r2,r6,44fc <_dtoa_r+0x1284>
    3be0:	1d000003 	ldbu	r20,0(r3)
    3be4:	102f883a 	mov	r23,r2
    3be8:	10bfffc4 	addi	r2,r2,-1
    3bec:	a1003fcc 	andi	r4,r20,255
    3bf0:	2100201c 	xori	r4,r4,128
    3bf4:	213fe004 	addi	r4,r4,-128
    3bf8:	217ff726 	beq	r4,r5,3bd8 <__alt_mem_onchip_memory2_0+0xf7003bd8>
    3bfc:	a2000044 	addi	r8,r20,1
    3c00:	12000005 	stb	r8,0(r2)
    3c04:	003f4606 	br	3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3c08:	d9000b17 	ldw	r4,44(sp)
    3c0c:	2000c826 	beq	r4,zero,3f30 <_dtoa_r+0xcb8>
    3c10:	d9800317 	ldw	r6,12(sp)
    3c14:	00c00044 	movi	r3,1
    3c18:	1980f90e 	bge	r3,r6,4000 <_dtoa_r+0xd88>
    3c1c:	d8800617 	ldw	r2,24(sp)
    3c20:	d8c00a17 	ldw	r3,40(sp)
    3c24:	157fffc4 	addi	r21,r2,-1
    3c28:	1d41f316 	blt	r3,r21,43f8 <_dtoa_r+0x1180>
    3c2c:	1d6bc83a 	sub	r21,r3,r21
    3c30:	d9c00617 	ldw	r7,24(sp)
    3c34:	3802aa16 	blt	r7,zero,46e0 <_dtoa_r+0x1468>
    3c38:	dd000817 	ldw	r20,32(sp)
    3c3c:	d8800617 	ldw	r2,24(sp)
    3c40:	d8c00817 	ldw	r3,32(sp)
    3c44:	01400044 	movi	r5,1
    3c48:	e009883a 	mov	r4,fp
    3c4c:	1887883a 	add	r3,r3,r2
    3c50:	d8c00815 	stw	r3,32(sp)
    3c54:	b0ad883a 	add	r22,r22,r2
    3c58:	00058480 	call	5848 <__i2b>
    3c5c:	1023883a 	mov	r17,r2
    3c60:	a0000826 	beq	r20,zero,3c84 <_dtoa_r+0xa0c>
    3c64:	0580070e 	bge	zero,r22,3c84 <_dtoa_r+0xa0c>
    3c68:	a005883a 	mov	r2,r20
    3c6c:	b500b916 	blt	r22,r20,3f54 <_dtoa_r+0xcdc>
    3c70:	d9000817 	ldw	r4,32(sp)
    3c74:	a0a9c83a 	sub	r20,r20,r2
    3c78:	b0adc83a 	sub	r22,r22,r2
    3c7c:	2089c83a 	sub	r4,r4,r2
    3c80:	d9000815 	stw	r4,32(sp)
    3c84:	d9800a17 	ldw	r6,40(sp)
    3c88:	0181810e 	bge	zero,r6,4290 <_dtoa_r+0x1018>
    3c8c:	d9c00b17 	ldw	r7,44(sp)
    3c90:	3800b326 	beq	r7,zero,3f60 <_dtoa_r+0xce8>
    3c94:	a800b226 	beq	r21,zero,3f60 <_dtoa_r+0xce8>
    3c98:	880b883a 	mov	r5,r17
    3c9c:	a80d883a 	mov	r6,r21
    3ca0:	e009883a 	mov	r4,fp
    3ca4:	0005b100 	call	5b10 <__pow5mult>
    3ca8:	d9800917 	ldw	r6,36(sp)
    3cac:	100b883a 	mov	r5,r2
    3cb0:	e009883a 	mov	r4,fp
    3cb4:	1023883a 	mov	r17,r2
    3cb8:	00058840 	call	5884 <__multiply>
    3cbc:	1021883a 	mov	r16,r2
    3cc0:	d8800a17 	ldw	r2,40(sp)
    3cc4:	d9400917 	ldw	r5,36(sp)
    3cc8:	e009883a 	mov	r4,fp
    3ccc:	1545c83a 	sub	r2,r2,r21
    3cd0:	d8800a15 	stw	r2,40(sp)
    3cd4:	00054bc0 	call	54bc <_Bfree>
    3cd8:	d8c00a17 	ldw	r3,40(sp)
    3cdc:	18009f1e 	bne	r3,zero,3f5c <_dtoa_r+0xce4>
    3ce0:	05c00044 	movi	r23,1
    3ce4:	e009883a 	mov	r4,fp
    3ce8:	b80b883a 	mov	r5,r23
    3cec:	00058480 	call	5848 <__i2b>
    3cf0:	d9000d17 	ldw	r4,52(sp)
    3cf4:	102b883a 	mov	r21,r2
    3cf8:	2000ce26 	beq	r4,zero,4034 <_dtoa_r+0xdbc>
    3cfc:	200d883a 	mov	r6,r4
    3d00:	100b883a 	mov	r5,r2
    3d04:	e009883a 	mov	r4,fp
    3d08:	0005b100 	call	5b10 <__pow5mult>
    3d0c:	d9800317 	ldw	r6,12(sp)
    3d10:	102b883a 	mov	r21,r2
    3d14:	b981810e 	bge	r23,r6,431c <_dtoa_r+0x10a4>
    3d18:	0027883a 	mov	r19,zero
    3d1c:	a8800417 	ldw	r2,16(r21)
    3d20:	05c00804 	movi	r23,32
    3d24:	10800104 	addi	r2,r2,4
    3d28:	1085883a 	add	r2,r2,r2
    3d2c:	1085883a 	add	r2,r2,r2
    3d30:	a885883a 	add	r2,r21,r2
    3d34:	11000017 	ldw	r4,0(r2)
    3d38:	00057300 	call	5730 <__hi0bits>
    3d3c:	b885c83a 	sub	r2,r23,r2
    3d40:	1585883a 	add	r2,r2,r22
    3d44:	108007cc 	andi	r2,r2,31
    3d48:	1000b326 	beq	r2,zero,4018 <_dtoa_r+0xda0>
    3d4c:	00c00804 	movi	r3,32
    3d50:	1887c83a 	sub	r3,r3,r2
    3d54:	01000104 	movi	r4,4
    3d58:	20c2cd0e 	bge	r4,r3,4890 <_dtoa_r+0x1618>
    3d5c:	00c00704 	movi	r3,28
    3d60:	1885c83a 	sub	r2,r3,r2
    3d64:	d8c00817 	ldw	r3,32(sp)
    3d68:	a0a9883a 	add	r20,r20,r2
    3d6c:	b0ad883a 	add	r22,r22,r2
    3d70:	1887883a 	add	r3,r3,r2
    3d74:	d8c00815 	stw	r3,32(sp)
    3d78:	d9800817 	ldw	r6,32(sp)
    3d7c:	0180040e 	bge	zero,r6,3d90 <_dtoa_r+0xb18>
    3d80:	800b883a 	mov	r5,r16
    3d84:	e009883a 	mov	r4,fp
    3d88:	0005c500 	call	5c50 <__lshift>
    3d8c:	1021883a 	mov	r16,r2
    3d90:	0580050e 	bge	zero,r22,3da8 <_dtoa_r+0xb30>
    3d94:	a80b883a 	mov	r5,r21
    3d98:	b00d883a 	mov	r6,r22
    3d9c:	e009883a 	mov	r4,fp
    3da0:	0005c500 	call	5c50 <__lshift>
    3da4:	102b883a 	mov	r21,r2
    3da8:	d9c00e17 	ldw	r7,56(sp)
    3dac:	3801211e 	bne	r7,zero,4234 <_dtoa_r+0xfbc>
    3db0:	d9800617 	ldw	r6,24(sp)
    3db4:	0181380e 	bge	zero,r6,4298 <_dtoa_r+0x1020>
    3db8:	d8c00b17 	ldw	r3,44(sp)
    3dbc:	1800ab1e 	bne	r3,zero,406c <_dtoa_r+0xdf4>
    3dc0:	dc800717 	ldw	r18,28(sp)
    3dc4:	dcc00617 	ldw	r19,24(sp)
    3dc8:	9029883a 	mov	r20,r18
    3dcc:	00000206 	br	3dd8 <_dtoa_r+0xb60>
    3dd0:	00054e40 	call	54e4 <__multadd>
    3dd4:	1021883a 	mov	r16,r2
    3dd8:	a80b883a 	mov	r5,r21
    3ddc:	8009883a 	mov	r4,r16
    3de0:	00030500 	call	3050 <quorem>
    3de4:	10800c04 	addi	r2,r2,48
    3de8:	90800005 	stb	r2,0(r18)
    3dec:	94800044 	addi	r18,r18,1
    3df0:	9507c83a 	sub	r3,r18,r20
    3df4:	000f883a 	mov	r7,zero
    3df8:	01800284 	movi	r6,10
    3dfc:	800b883a 	mov	r5,r16
    3e00:	e009883a 	mov	r4,fp
    3e04:	1cfff216 	blt	r3,r19,3dd0 <__alt_mem_onchip_memory2_0+0xf7003dd0>
    3e08:	1011883a 	mov	r8,r2
    3e0c:	d8800617 	ldw	r2,24(sp)
    3e10:	0082370e 	bge	zero,r2,46f0 <_dtoa_r+0x1478>
    3e14:	d9000717 	ldw	r4,28(sp)
    3e18:	0025883a 	mov	r18,zero
    3e1c:	20af883a 	add	r23,r4,r2
    3e20:	01800044 	movi	r6,1
    3e24:	800b883a 	mov	r5,r16
    3e28:	e009883a 	mov	r4,fp
    3e2c:	da001715 	stw	r8,92(sp)
    3e30:	0005c500 	call	5c50 <__lshift>
    3e34:	a80b883a 	mov	r5,r21
    3e38:	1009883a 	mov	r4,r2
    3e3c:	d8800915 	stw	r2,36(sp)
    3e40:	0005d980 	call	5d98 <__mcmp>
    3e44:	da001717 	ldw	r8,92(sp)
    3e48:	0081800e 	bge	zero,r2,444c <_dtoa_r+0x11d4>
    3e4c:	b93fffc3 	ldbu	r4,-1(r23)
    3e50:	b8bfffc4 	addi	r2,r23,-1
    3e54:	1007883a 	mov	r3,r2
    3e58:	01800e44 	movi	r6,57
    3e5c:	d9c00717 	ldw	r7,28(sp)
    3e60:	00000506 	br	3e78 <_dtoa_r+0xc00>
    3e64:	18ffffc4 	addi	r3,r3,-1
    3e68:	11c12326 	beq	r2,r7,42f8 <_dtoa_r+0x1080>
    3e6c:	19000003 	ldbu	r4,0(r3)
    3e70:	102f883a 	mov	r23,r2
    3e74:	10bfffc4 	addi	r2,r2,-1
    3e78:	21403fcc 	andi	r5,r4,255
    3e7c:	2940201c 	xori	r5,r5,128
    3e80:	297fe004 	addi	r5,r5,-128
    3e84:	29bff726 	beq	r5,r6,3e64 <__alt_mem_onchip_memory2_0+0xf7003e64>
    3e88:	21000044 	addi	r4,r4,1
    3e8c:	11000005 	stb	r4,0(r2)
    3e90:	a80b883a 	mov	r5,r21
    3e94:	e009883a 	mov	r4,fp
    3e98:	00054bc0 	call	54bc <_Bfree>
    3e9c:	883ea026 	beq	r17,zero,3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3ea0:	90000426 	beq	r18,zero,3eb4 <_dtoa_r+0xc3c>
    3ea4:	94400326 	beq	r18,r17,3eb4 <_dtoa_r+0xc3c>
    3ea8:	900b883a 	mov	r5,r18
    3eac:	e009883a 	mov	r4,fp
    3eb0:	00054bc0 	call	54bc <_Bfree>
    3eb4:	880b883a 	mov	r5,r17
    3eb8:	e009883a 	mov	r4,fp
    3ebc:	00054bc0 	call	54bc <_Bfree>
    3ec0:	003e9706 	br	3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3ec4:	01800044 	movi	r6,1
    3ec8:	d9800e15 	stw	r6,56(sp)
    3ecc:	003d9606 	br	3528 <__alt_mem_onchip_memory2_0+0xf7003528>
    3ed0:	d8800817 	ldw	r2,32(sp)
    3ed4:	d8c00517 	ldw	r3,20(sp)
    3ed8:	d8000d15 	stw	zero,52(sp)
    3edc:	10c5c83a 	sub	r2,r2,r3
    3ee0:	00c9c83a 	sub	r4,zero,r3
    3ee4:	d8800815 	stw	r2,32(sp)
    3ee8:	d9000a15 	stw	r4,40(sp)
    3eec:	003d9706 	br	354c <__alt_mem_onchip_memory2_0+0xf700354c>
    3ef0:	05adc83a 	sub	r22,zero,r22
    3ef4:	dd800815 	stw	r22,32(sp)
    3ef8:	002d883a 	mov	r22,zero
    3efc:	003d8e06 	br	3538 <__alt_mem_onchip_memory2_0+0xf7003538>
    3f00:	d9000517 	ldw	r4,20(sp)
    3f04:	000bc600 	call	bc60 <__floatsidf>
    3f08:	100d883a 	mov	r6,r2
    3f0c:	180f883a 	mov	r7,r3
    3f10:	a009883a 	mov	r4,r20
    3f14:	880b883a 	mov	r5,r17
    3f18:	000a8200 	call	a820 <__eqdf2>
    3f1c:	103d7126 	beq	r2,zero,34e4 <__alt_mem_onchip_memory2_0+0xf70034e4>
    3f20:	d9c00517 	ldw	r7,20(sp)
    3f24:	39ffffc4 	addi	r7,r7,-1
    3f28:	d9c00515 	stw	r7,20(sp)
    3f2c:	003d6d06 	br	34e4 <__alt_mem_onchip_memory2_0+0xf70034e4>
    3f30:	dd400a17 	ldw	r21,40(sp)
    3f34:	dd000817 	ldw	r20,32(sp)
    3f38:	0023883a 	mov	r17,zero
    3f3c:	003f4806 	br	3c60 <__alt_mem_onchip_memory2_0+0xf7003c60>
    3f40:	10e3c83a 	sub	r17,r2,r3
    3f44:	9448983a 	sll	r4,r18,r17
    3f48:	003d3206 	br	3414 <__alt_mem_onchip_memory2_0+0xf7003414>
    3f4c:	d8000e15 	stw	zero,56(sp)
    3f50:	003d7506 	br	3528 <__alt_mem_onchip_memory2_0+0xf7003528>
    3f54:	b005883a 	mov	r2,r22
    3f58:	003f4506 	br	3c70 <__alt_mem_onchip_memory2_0+0xf7003c70>
    3f5c:	dc000915 	stw	r16,36(sp)
    3f60:	d9800a17 	ldw	r6,40(sp)
    3f64:	d9400917 	ldw	r5,36(sp)
    3f68:	e009883a 	mov	r4,fp
    3f6c:	0005b100 	call	5b10 <__pow5mult>
    3f70:	1021883a 	mov	r16,r2
    3f74:	003f5a06 	br	3ce0 <__alt_mem_onchip_memory2_0+0xf7003ce0>
    3f78:	01c00044 	movi	r7,1
    3f7c:	d9c00b15 	stw	r7,44(sp)
    3f80:	d8802217 	ldw	r2,136(sp)
    3f84:	0081280e 	bge	zero,r2,4428 <_dtoa_r+0x11b0>
    3f88:	100d883a 	mov	r6,r2
    3f8c:	1021883a 	mov	r16,r2
    3f90:	d8800c15 	stw	r2,48(sp)
    3f94:	d8800615 	stw	r2,24(sp)
    3f98:	003d8806 	br	35bc <__alt_mem_onchip_memory2_0+0xf70035bc>
    3f9c:	d8800617 	ldw	r2,24(sp)
    3fa0:	00be9b16 	blt	zero,r2,3a10 <__alt_mem_onchip_memory2_0+0xf7003a10>
    3fa4:	10010f1e 	bne	r2,zero,43e4 <_dtoa_r+0x116c>
    3fa8:	880b883a 	mov	r5,r17
    3fac:	000d883a 	mov	r6,zero
    3fb0:	01d00534 	movhi	r7,16404
    3fb4:	8009883a 	mov	r4,r16
    3fb8:	000aa780 	call	aa78 <__muldf3>
    3fbc:	900d883a 	mov	r6,r18
    3fc0:	980f883a 	mov	r7,r19
    3fc4:	1009883a 	mov	r4,r2
    3fc8:	180b883a 	mov	r5,r3
    3fcc:	000a8a80 	call	a8a8 <__gedf2>
    3fd0:	002b883a 	mov	r21,zero
    3fd4:	0023883a 	mov	r17,zero
    3fd8:	1000bf16 	blt	r2,zero,42d8 <_dtoa_r+0x1060>
    3fdc:	d9802217 	ldw	r6,136(sp)
    3fe0:	ddc00717 	ldw	r23,28(sp)
    3fe4:	018c303a 	nor	r6,zero,r6
    3fe8:	d9800515 	stw	r6,20(sp)
    3fec:	a80b883a 	mov	r5,r21
    3ff0:	e009883a 	mov	r4,fp
    3ff4:	00054bc0 	call	54bc <_Bfree>
    3ff8:	883e4926 	beq	r17,zero,3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    3ffc:	003fad06 	br	3eb4 <__alt_mem_onchip_memory2_0+0xf7003eb4>
    4000:	d9c01117 	ldw	r7,68(sp)
    4004:	3801bc26 	beq	r7,zero,46f8 <_dtoa_r+0x1480>
    4008:	10810cc4 	addi	r2,r2,1075
    400c:	dd400a17 	ldw	r21,40(sp)
    4010:	dd000817 	ldw	r20,32(sp)
    4014:	003f0a06 	br	3c40 <__alt_mem_onchip_memory2_0+0xf7003c40>
    4018:	00800704 	movi	r2,28
    401c:	d9000817 	ldw	r4,32(sp)
    4020:	a0a9883a 	add	r20,r20,r2
    4024:	b0ad883a 	add	r22,r22,r2
    4028:	2089883a 	add	r4,r4,r2
    402c:	d9000815 	stw	r4,32(sp)
    4030:	003f5106 	br	3d78 <__alt_mem_onchip_memory2_0+0xf7003d78>
    4034:	d8c00317 	ldw	r3,12(sp)
    4038:	b8c1fc0e 	bge	r23,r3,482c <_dtoa_r+0x15b4>
    403c:	0027883a 	mov	r19,zero
    4040:	b805883a 	mov	r2,r23
    4044:	003f3e06 	br	3d40 <__alt_mem_onchip_memory2_0+0xf7003d40>
    4048:	880b883a 	mov	r5,r17
    404c:	e009883a 	mov	r4,fp
    4050:	000f883a 	mov	r7,zero
    4054:	01800284 	movi	r6,10
    4058:	00054e40 	call	54e4 <__multadd>
    405c:	d9000c17 	ldw	r4,48(sp)
    4060:	1023883a 	mov	r17,r2
    4064:	0102040e 	bge	zero,r4,4878 <_dtoa_r+0x1600>
    4068:	d9000615 	stw	r4,24(sp)
    406c:	0500050e 	bge	zero,r20,4084 <_dtoa_r+0xe0c>
    4070:	880b883a 	mov	r5,r17
    4074:	a00d883a 	mov	r6,r20
    4078:	e009883a 	mov	r4,fp
    407c:	0005c500 	call	5c50 <__lshift>
    4080:	1023883a 	mov	r17,r2
    4084:	9801241e 	bne	r19,zero,4518 <_dtoa_r+0x12a0>
    4088:	8829883a 	mov	r20,r17
    408c:	d9000617 	ldw	r4,24(sp)
    4090:	dcc00717 	ldw	r19,28(sp)
    4094:	9480004c 	andi	r18,r18,1
    4098:	20bfffc4 	addi	r2,r4,-1
    409c:	9885883a 	add	r2,r19,r2
    40a0:	d8800415 	stw	r2,16(sp)
    40a4:	dc800615 	stw	r18,24(sp)
    40a8:	a80b883a 	mov	r5,r21
    40ac:	8009883a 	mov	r4,r16
    40b0:	00030500 	call	3050 <quorem>
    40b4:	880b883a 	mov	r5,r17
    40b8:	8009883a 	mov	r4,r16
    40bc:	102f883a 	mov	r23,r2
    40c0:	0005d980 	call	5d98 <__mcmp>
    40c4:	a80b883a 	mov	r5,r21
    40c8:	a00d883a 	mov	r6,r20
    40cc:	e009883a 	mov	r4,fp
    40d0:	102d883a 	mov	r22,r2
    40d4:	0005df80 	call	5df8 <__mdiff>
    40d8:	1007883a 	mov	r3,r2
    40dc:	10800317 	ldw	r2,12(r2)
    40e0:	bc800c04 	addi	r18,r23,48
    40e4:	180b883a 	mov	r5,r3
    40e8:	10004e1e 	bne	r2,zero,4224 <_dtoa_r+0xfac>
    40ec:	8009883a 	mov	r4,r16
    40f0:	d8c01615 	stw	r3,88(sp)
    40f4:	0005d980 	call	5d98 <__mcmp>
    40f8:	d8c01617 	ldw	r3,88(sp)
    40fc:	e009883a 	mov	r4,fp
    4100:	d8801615 	stw	r2,88(sp)
    4104:	180b883a 	mov	r5,r3
    4108:	00054bc0 	call	54bc <_Bfree>
    410c:	d8801617 	ldw	r2,88(sp)
    4110:	1000041e 	bne	r2,zero,4124 <_dtoa_r+0xeac>
    4114:	d9800317 	ldw	r6,12(sp)
    4118:	3000021e 	bne	r6,zero,4124 <_dtoa_r+0xeac>
    411c:	d8c00617 	ldw	r3,24(sp)
    4120:	18003726 	beq	r3,zero,4200 <_dtoa_r+0xf88>
    4124:	b0002016 	blt	r22,zero,41a8 <_dtoa_r+0xf30>
    4128:	b000041e 	bne	r22,zero,413c <_dtoa_r+0xec4>
    412c:	d9000317 	ldw	r4,12(sp)
    4130:	2000021e 	bne	r4,zero,413c <_dtoa_r+0xec4>
    4134:	d8c00617 	ldw	r3,24(sp)
    4138:	18001b26 	beq	r3,zero,41a8 <_dtoa_r+0xf30>
    413c:	00810716 	blt	zero,r2,455c <_dtoa_r+0x12e4>
    4140:	d8c00417 	ldw	r3,16(sp)
    4144:	9d800044 	addi	r22,r19,1
    4148:	9c800005 	stb	r18,0(r19)
    414c:	b02f883a 	mov	r23,r22
    4150:	98c10626 	beq	r19,r3,456c <_dtoa_r+0x12f4>
    4154:	800b883a 	mov	r5,r16
    4158:	000f883a 	mov	r7,zero
    415c:	01800284 	movi	r6,10
    4160:	e009883a 	mov	r4,fp
    4164:	00054e40 	call	54e4 <__multadd>
    4168:	1021883a 	mov	r16,r2
    416c:	000f883a 	mov	r7,zero
    4170:	01800284 	movi	r6,10
    4174:	880b883a 	mov	r5,r17
    4178:	e009883a 	mov	r4,fp
    417c:	8d002526 	beq	r17,r20,4214 <_dtoa_r+0xf9c>
    4180:	00054e40 	call	54e4 <__multadd>
    4184:	a00b883a 	mov	r5,r20
    4188:	000f883a 	mov	r7,zero
    418c:	01800284 	movi	r6,10
    4190:	e009883a 	mov	r4,fp
    4194:	1023883a 	mov	r17,r2
    4198:	00054e40 	call	54e4 <__multadd>
    419c:	1029883a 	mov	r20,r2
    41a0:	b027883a 	mov	r19,r22
    41a4:	003fc006 	br	40a8 <__alt_mem_onchip_memory2_0+0xf70040a8>
    41a8:	9011883a 	mov	r8,r18
    41ac:	00800e0e 	bge	zero,r2,41e8 <_dtoa_r+0xf70>
    41b0:	800b883a 	mov	r5,r16
    41b4:	01800044 	movi	r6,1
    41b8:	e009883a 	mov	r4,fp
    41bc:	da001715 	stw	r8,92(sp)
    41c0:	0005c500 	call	5c50 <__lshift>
    41c4:	a80b883a 	mov	r5,r21
    41c8:	1009883a 	mov	r4,r2
    41cc:	1021883a 	mov	r16,r2
    41d0:	0005d980 	call	5d98 <__mcmp>
    41d4:	da001717 	ldw	r8,92(sp)
    41d8:	0081960e 	bge	zero,r2,4834 <_dtoa_r+0x15bc>
    41dc:	00800e44 	movi	r2,57
    41e0:	40817026 	beq	r8,r2,47a4 <_dtoa_r+0x152c>
    41e4:	ba000c44 	addi	r8,r23,49
    41e8:	8825883a 	mov	r18,r17
    41ec:	9dc00044 	addi	r23,r19,1
    41f0:	9a000005 	stb	r8,0(r19)
    41f4:	a023883a 	mov	r17,r20
    41f8:	dc000915 	stw	r16,36(sp)
    41fc:	003f2406 	br	3e90 <__alt_mem_onchip_memory2_0+0xf7003e90>
    4200:	00800e44 	movi	r2,57
    4204:	9011883a 	mov	r8,r18
    4208:	90816626 	beq	r18,r2,47a4 <_dtoa_r+0x152c>
    420c:	05bff516 	blt	zero,r22,41e4 <__alt_mem_onchip_memory2_0+0xf70041e4>
    4210:	003ff506 	br	41e8 <__alt_mem_onchip_memory2_0+0xf70041e8>
    4214:	00054e40 	call	54e4 <__multadd>
    4218:	1023883a 	mov	r17,r2
    421c:	1029883a 	mov	r20,r2
    4220:	003fdf06 	br	41a0 <__alt_mem_onchip_memory2_0+0xf70041a0>
    4224:	e009883a 	mov	r4,fp
    4228:	00054bc0 	call	54bc <_Bfree>
    422c:	00800044 	movi	r2,1
    4230:	003fbc06 	br	4124 <__alt_mem_onchip_memory2_0+0xf7004124>
    4234:	a80b883a 	mov	r5,r21
    4238:	8009883a 	mov	r4,r16
    423c:	0005d980 	call	5d98 <__mcmp>
    4240:	103edb0e 	bge	r2,zero,3db0 <__alt_mem_onchip_memory2_0+0xf7003db0>
    4244:	800b883a 	mov	r5,r16
    4248:	000f883a 	mov	r7,zero
    424c:	01800284 	movi	r6,10
    4250:	e009883a 	mov	r4,fp
    4254:	00054e40 	call	54e4 <__multadd>
    4258:	1021883a 	mov	r16,r2
    425c:	d8800517 	ldw	r2,20(sp)
    4260:	d8c00b17 	ldw	r3,44(sp)
    4264:	10bfffc4 	addi	r2,r2,-1
    4268:	d8800515 	stw	r2,20(sp)
    426c:	183f761e 	bne	r3,zero,4048 <__alt_mem_onchip_memory2_0+0xf7004048>
    4270:	d9000c17 	ldw	r4,48(sp)
    4274:	0101730e 	bge	zero,r4,4844 <_dtoa_r+0x15cc>
    4278:	d9000615 	stw	r4,24(sp)
    427c:	003ed006 	br	3dc0 <__alt_mem_onchip_memory2_0+0xf7003dc0>
    4280:	00800084 	movi	r2,2
    4284:	3081861e 	bne	r6,r2,48a0 <_dtoa_r+0x1628>
    4288:	d8000b15 	stw	zero,44(sp)
    428c:	003f3c06 	br	3f80 <__alt_mem_onchip_memory2_0+0xf7003f80>
    4290:	dc000917 	ldw	r16,36(sp)
    4294:	003e9206 	br	3ce0 <__alt_mem_onchip_memory2_0+0xf7003ce0>
    4298:	d9c00317 	ldw	r7,12(sp)
    429c:	00800084 	movi	r2,2
    42a0:	11fec50e 	bge	r2,r7,3db8 <__alt_mem_onchip_memory2_0+0xf7003db8>
    42a4:	d9000617 	ldw	r4,24(sp)
    42a8:	20013c1e 	bne	r4,zero,479c <_dtoa_r+0x1524>
    42ac:	a80b883a 	mov	r5,r21
    42b0:	000f883a 	mov	r7,zero
    42b4:	01800144 	movi	r6,5
    42b8:	e009883a 	mov	r4,fp
    42bc:	00054e40 	call	54e4 <__multadd>
    42c0:	100b883a 	mov	r5,r2
    42c4:	8009883a 	mov	r4,r16
    42c8:	102b883a 	mov	r21,r2
    42cc:	0005d980 	call	5d98 <__mcmp>
    42d0:	dc000915 	stw	r16,36(sp)
    42d4:	00bf410e 	bge	zero,r2,3fdc <__alt_mem_onchip_memory2_0+0xf7003fdc>
    42d8:	d9c00717 	ldw	r7,28(sp)
    42dc:	00800c44 	movi	r2,49
    42e0:	38800005 	stb	r2,0(r7)
    42e4:	d8800517 	ldw	r2,20(sp)
    42e8:	3dc00044 	addi	r23,r7,1
    42ec:	10800044 	addi	r2,r2,1
    42f0:	d8800515 	stw	r2,20(sp)
    42f4:	003f3d06 	br	3fec <__alt_mem_onchip_memory2_0+0xf7003fec>
    42f8:	d9800517 	ldw	r6,20(sp)
    42fc:	d9c00717 	ldw	r7,28(sp)
    4300:	00800c44 	movi	r2,49
    4304:	31800044 	addi	r6,r6,1
    4308:	d9800515 	stw	r6,20(sp)
    430c:	38800005 	stb	r2,0(r7)
    4310:	003edf06 	br	3e90 <__alt_mem_onchip_memory2_0+0xf7003e90>
    4314:	d8000b15 	stw	zero,44(sp)
    4318:	003c9f06 	br	3598 <__alt_mem_onchip_memory2_0+0xf7003598>
    431c:	903e7e1e 	bne	r18,zero,3d18 <__alt_mem_onchip_memory2_0+0xf7003d18>
    4320:	00800434 	movhi	r2,16
    4324:	10bfffc4 	addi	r2,r2,-1
    4328:	9884703a 	and	r2,r19,r2
    432c:	1000ea1e 	bne	r2,zero,46d8 <_dtoa_r+0x1460>
    4330:	9cdffc2c 	andhi	r19,r19,32752
    4334:	9800e826 	beq	r19,zero,46d8 <_dtoa_r+0x1460>
    4338:	d9c00817 	ldw	r7,32(sp)
    433c:	b5800044 	addi	r22,r22,1
    4340:	04c00044 	movi	r19,1
    4344:	39c00044 	addi	r7,r7,1
    4348:	d9c00815 	stw	r7,32(sp)
    434c:	d8800d17 	ldw	r2,52(sp)
    4350:	103e721e 	bne	r2,zero,3d1c <__alt_mem_onchip_memory2_0+0xf7003d1c>
    4354:	00800044 	movi	r2,1
    4358:	003e7906 	br	3d40 <__alt_mem_onchip_memory2_0+0xf7003d40>
    435c:	8009883a 	mov	r4,r16
    4360:	000bc600 	call	bc60 <__floatsidf>
    4364:	d9800f17 	ldw	r6,60(sp)
    4368:	d9c01017 	ldw	r7,64(sp)
    436c:	1009883a 	mov	r4,r2
    4370:	180b883a 	mov	r5,r3
    4374:	000aa780 	call	aa78 <__muldf3>
    4378:	000d883a 	mov	r6,zero
    437c:	01d00734 	movhi	r7,16412
    4380:	1009883a 	mov	r4,r2
    4384:	180b883a 	mov	r5,r3
    4388:	00095a40 	call	95a4 <__adddf3>
    438c:	047f3034 	movhi	r17,64704
    4390:	1021883a 	mov	r16,r2
    4394:	1c63883a 	add	r17,r3,r17
    4398:	d9000f17 	ldw	r4,60(sp)
    439c:	d9401017 	ldw	r5,64(sp)
    43a0:	000d883a 	mov	r6,zero
    43a4:	01d00534 	movhi	r7,16404
    43a8:	000b2e40 	call	b2e4 <__subdf3>
    43ac:	800d883a 	mov	r6,r16
    43b0:	880f883a 	mov	r7,r17
    43b4:	1009883a 	mov	r4,r2
    43b8:	180b883a 	mov	r5,r3
    43bc:	102b883a 	mov	r21,r2
    43c0:	1829883a 	mov	r20,r3
    43c4:	000a8a80 	call	a8a8 <__gedf2>
    43c8:	00806c16 	blt	zero,r2,457c <_dtoa_r+0x1304>
    43cc:	89e0003c 	xorhi	r7,r17,32768
    43d0:	800d883a 	mov	r6,r16
    43d4:	a809883a 	mov	r4,r21
    43d8:	a00b883a 	mov	r5,r20
    43dc:	000a9840 	call	a984 <__ledf2>
    43e0:	103d7e0e 	bge	r2,zero,39dc <__alt_mem_onchip_memory2_0+0xf70039dc>
    43e4:	002b883a 	mov	r21,zero
    43e8:	0023883a 	mov	r17,zero
    43ec:	003efb06 	br	3fdc <__alt_mem_onchip_memory2_0+0xf7003fdc>
    43f0:	d8800717 	ldw	r2,28(sp)
    43f4:	003bd006 	br	3338 <__alt_mem_onchip_memory2_0+0xf7003338>
    43f8:	d9000a17 	ldw	r4,40(sp)
    43fc:	d9800d17 	ldw	r6,52(sp)
    4400:	dd400a15 	stw	r21,40(sp)
    4404:	a905c83a 	sub	r2,r21,r4
    4408:	308d883a 	add	r6,r6,r2
    440c:	d9800d15 	stw	r6,52(sp)
    4410:	002b883a 	mov	r21,zero
    4414:	003e0606 	br	3c30 <__alt_mem_onchip_memory2_0+0xf7003c30>
    4418:	9023883a 	mov	r17,r18
    441c:	9829883a 	mov	r20,r19
    4420:	04000084 	movi	r16,2
    4424:	003c9206 	br	3670 <__alt_mem_onchip_memory2_0+0xf7003670>
    4428:	04000044 	movi	r16,1
    442c:	dc000c15 	stw	r16,48(sp)
    4430:	dc000615 	stw	r16,24(sp)
    4434:	dc002215 	stw	r16,136(sp)
    4438:	e0001115 	stw	zero,68(fp)
    443c:	000b883a 	mov	r5,zero
    4440:	003c6906 	br	35e8 <__alt_mem_onchip_memory2_0+0xf70035e8>
    4444:	3021883a 	mov	r16,r6
    4448:	003ffb06 	br	4438 <__alt_mem_onchip_memory2_0+0xf7004438>
    444c:	1000021e 	bne	r2,zero,4458 <_dtoa_r+0x11e0>
    4450:	4200004c 	andi	r8,r8,1
    4454:	403e7d1e 	bne	r8,zero,3e4c <__alt_mem_onchip_memory2_0+0xf7003e4c>
    4458:	01000c04 	movi	r4,48
    445c:	00000106 	br	4464 <_dtoa_r+0x11ec>
    4460:	102f883a 	mov	r23,r2
    4464:	b8bfffc4 	addi	r2,r23,-1
    4468:	10c00007 	ldb	r3,0(r2)
    446c:	193ffc26 	beq	r3,r4,4460 <__alt_mem_onchip_memory2_0+0xf7004460>
    4470:	003e8706 	br	3e90 <__alt_mem_onchip_memory2_0+0xf7003e90>
    4474:	d8800517 	ldw	r2,20(sp)
    4478:	00a3c83a 	sub	r17,zero,r2
    447c:	8800a426 	beq	r17,zero,4710 <_dtoa_r+0x1498>
    4480:	888003cc 	andi	r2,r17,15
    4484:	100490fa 	slli	r2,r2,3
    4488:	00c00074 	movhi	r3,1
    448c:	18f88b04 	addi	r3,r3,-7636
    4490:	1885883a 	add	r2,r3,r2
    4494:	11800017 	ldw	r6,0(r2)
    4498:	11c00117 	ldw	r7,4(r2)
    449c:	9009883a 	mov	r4,r18
    44a0:	980b883a 	mov	r5,r19
    44a4:	8823d13a 	srai	r17,r17,4
    44a8:	000aa780 	call	aa78 <__muldf3>
    44ac:	d8800f15 	stw	r2,60(sp)
    44b0:	d8c01015 	stw	r3,64(sp)
    44b4:	8800e826 	beq	r17,zero,4858 <_dtoa_r+0x15e0>
    44b8:	05000074 	movhi	r20,1
    44bc:	a5388104 	addi	r20,r20,-7676
    44c0:	04000084 	movi	r16,2
    44c4:	8980004c 	andi	r6,r17,1
    44c8:	1009883a 	mov	r4,r2
    44cc:	8823d07a 	srai	r17,r17,1
    44d0:	180b883a 	mov	r5,r3
    44d4:	30000426 	beq	r6,zero,44e8 <_dtoa_r+0x1270>
    44d8:	a1800017 	ldw	r6,0(r20)
    44dc:	a1c00117 	ldw	r7,4(r20)
    44e0:	84000044 	addi	r16,r16,1
    44e4:	000aa780 	call	aa78 <__muldf3>
    44e8:	a5000204 	addi	r20,r20,8
    44ec:	883ff51e 	bne	r17,zero,44c4 <__alt_mem_onchip_memory2_0+0xf70044c4>
    44f0:	d8800f15 	stw	r2,60(sp)
    44f4:	d8c01015 	stw	r3,64(sp)
    44f8:	003c7606 	br	36d4 <__alt_mem_onchip_memory2_0+0xf70036d4>
    44fc:	00c00c04 	movi	r3,48
    4500:	10c00005 	stb	r3,0(r2)
    4504:	d8c00517 	ldw	r3,20(sp)
    4508:	bd3fffc3 	ldbu	r20,-1(r23)
    450c:	18c00044 	addi	r3,r3,1
    4510:	d8c00515 	stw	r3,20(sp)
    4514:	003db906 	br	3bfc <__alt_mem_onchip_memory2_0+0xf7003bfc>
    4518:	89400117 	ldw	r5,4(r17)
    451c:	e009883a 	mov	r4,fp
    4520:	00054140 	call	5414 <_Balloc>
    4524:	89800417 	ldw	r6,16(r17)
    4528:	89400304 	addi	r5,r17,12
    452c:	11000304 	addi	r4,r2,12
    4530:	31800084 	addi	r6,r6,2
    4534:	318d883a 	add	r6,r6,r6
    4538:	318d883a 	add	r6,r6,r6
    453c:	1027883a 	mov	r19,r2
    4540:	00052cc0 	call	52cc <memcpy>
    4544:	01800044 	movi	r6,1
    4548:	980b883a 	mov	r5,r19
    454c:	e009883a 	mov	r4,fp
    4550:	0005c500 	call	5c50 <__lshift>
    4554:	1029883a 	mov	r20,r2
    4558:	003ecc06 	br	408c <__alt_mem_onchip_memory2_0+0xf700408c>
    455c:	00800e44 	movi	r2,57
    4560:	90809026 	beq	r18,r2,47a4 <_dtoa_r+0x152c>
    4564:	92000044 	addi	r8,r18,1
    4568:	003f1f06 	br	41e8 <__alt_mem_onchip_memory2_0+0xf70041e8>
    456c:	9011883a 	mov	r8,r18
    4570:	8825883a 	mov	r18,r17
    4574:	a023883a 	mov	r17,r20
    4578:	003e2906 	br	3e20 <__alt_mem_onchip_memory2_0+0xf7003e20>
    457c:	002b883a 	mov	r21,zero
    4580:	0023883a 	mov	r17,zero
    4584:	003f5406 	br	42d8 <__alt_mem_onchip_memory2_0+0xf70042d8>
    4588:	61bfffc4 	addi	r6,r12,-1
    458c:	300490fa 	slli	r2,r6,3
    4590:	00c00074 	movhi	r3,1
    4594:	18f88b04 	addi	r3,r3,-7636
    4598:	1885883a 	add	r2,r3,r2
    459c:	11000017 	ldw	r4,0(r2)
    45a0:	11400117 	ldw	r5,4(r2)
    45a4:	d8800717 	ldw	r2,28(sp)
    45a8:	880f883a 	mov	r7,r17
    45ac:	d9801215 	stw	r6,72(sp)
    45b0:	800d883a 	mov	r6,r16
    45b4:	db001615 	stw	r12,88(sp)
    45b8:	15c00044 	addi	r23,r2,1
    45bc:	000aa780 	call	aa78 <__muldf3>
    45c0:	d9401017 	ldw	r5,64(sp)
    45c4:	d9000f17 	ldw	r4,60(sp)
    45c8:	d8c01515 	stw	r3,84(sp)
    45cc:	d8801415 	stw	r2,80(sp)
    45d0:	000bbe00 	call	bbe0 <__fixdfsi>
    45d4:	1009883a 	mov	r4,r2
    45d8:	1021883a 	mov	r16,r2
    45dc:	000bc600 	call	bc60 <__floatsidf>
    45e0:	d9000f17 	ldw	r4,60(sp)
    45e4:	d9401017 	ldw	r5,64(sp)
    45e8:	100d883a 	mov	r6,r2
    45ec:	180f883a 	mov	r7,r3
    45f0:	000b2e40 	call	b2e4 <__subdf3>
    45f4:	1829883a 	mov	r20,r3
    45f8:	d8c00717 	ldw	r3,28(sp)
    45fc:	84000c04 	addi	r16,r16,48
    4600:	1023883a 	mov	r17,r2
    4604:	1c000005 	stb	r16,0(r3)
    4608:	db001617 	ldw	r12,88(sp)
    460c:	00800044 	movi	r2,1
    4610:	60802226 	beq	r12,r2,469c <_dtoa_r+0x1424>
    4614:	d9c00717 	ldw	r7,28(sp)
    4618:	8805883a 	mov	r2,r17
    461c:	b82b883a 	mov	r21,r23
    4620:	3b19883a 	add	r12,r7,r12
    4624:	6023883a 	mov	r17,r12
    4628:	a007883a 	mov	r3,r20
    462c:	dc800f15 	stw	r18,60(sp)
    4630:	000d883a 	mov	r6,zero
    4634:	01d00934 	movhi	r7,16420
    4638:	1009883a 	mov	r4,r2
    463c:	180b883a 	mov	r5,r3
    4640:	000aa780 	call	aa78 <__muldf3>
    4644:	180b883a 	mov	r5,r3
    4648:	1009883a 	mov	r4,r2
    464c:	1829883a 	mov	r20,r3
    4650:	1025883a 	mov	r18,r2
    4654:	000bbe00 	call	bbe0 <__fixdfsi>
    4658:	1009883a 	mov	r4,r2
    465c:	1021883a 	mov	r16,r2
    4660:	000bc600 	call	bc60 <__floatsidf>
    4664:	100d883a 	mov	r6,r2
    4668:	180f883a 	mov	r7,r3
    466c:	9009883a 	mov	r4,r18
    4670:	a00b883a 	mov	r5,r20
    4674:	84000c04 	addi	r16,r16,48
    4678:	000b2e40 	call	b2e4 <__subdf3>
    467c:	ad400044 	addi	r21,r21,1
    4680:	ac3fffc5 	stb	r16,-1(r21)
    4684:	ac7fea1e 	bne	r21,r17,4630 <__alt_mem_onchip_memory2_0+0xf7004630>
    4688:	1023883a 	mov	r17,r2
    468c:	d8801217 	ldw	r2,72(sp)
    4690:	dc800f17 	ldw	r18,60(sp)
    4694:	1829883a 	mov	r20,r3
    4698:	b8af883a 	add	r23,r23,r2
    469c:	d9001417 	ldw	r4,80(sp)
    46a0:	d9401517 	ldw	r5,84(sp)
    46a4:	000d883a 	mov	r6,zero
    46a8:	01cff834 	movhi	r7,16352
    46ac:	00095a40 	call	95a4 <__adddf3>
    46b0:	880d883a 	mov	r6,r17
    46b4:	a00f883a 	mov	r7,r20
    46b8:	1009883a 	mov	r4,r2
    46bc:	180b883a 	mov	r5,r3
    46c0:	000a9840 	call	a984 <__ledf2>
    46c4:	10003e0e 	bge	r2,zero,47c0 <_dtoa_r+0x1548>
    46c8:	d9001317 	ldw	r4,76(sp)
    46cc:	bd3fffc3 	ldbu	r20,-1(r23)
    46d0:	d9000515 	stw	r4,20(sp)
    46d4:	003d3b06 	br	3bc4 <__alt_mem_onchip_memory2_0+0xf7003bc4>
    46d8:	0027883a 	mov	r19,zero
    46dc:	003f1b06 	br	434c <__alt_mem_onchip_memory2_0+0xf700434c>
    46e0:	d8800817 	ldw	r2,32(sp)
    46e4:	11e9c83a 	sub	r20,r2,r7
    46e8:	0005883a 	mov	r2,zero
    46ec:	003d5406 	br	3c40 <__alt_mem_onchip_memory2_0+0xf7003c40>
    46f0:	00800044 	movi	r2,1
    46f4:	003dc706 	br	3e14 <__alt_mem_onchip_memory2_0+0xf7003e14>
    46f8:	d8c00217 	ldw	r3,8(sp)
    46fc:	00800d84 	movi	r2,54
    4700:	dd400a17 	ldw	r21,40(sp)
    4704:	10c5c83a 	sub	r2,r2,r3
    4708:	dd000817 	ldw	r20,32(sp)
    470c:	003d4c06 	br	3c40 <__alt_mem_onchip_memory2_0+0xf7003c40>
    4710:	dc800f15 	stw	r18,60(sp)
    4714:	dcc01015 	stw	r19,64(sp)
    4718:	04000084 	movi	r16,2
    471c:	003bed06 	br	36d4 <__alt_mem_onchip_memory2_0+0xf70036d4>
    4720:	d9000617 	ldw	r4,24(sp)
    4724:	203f0d26 	beq	r4,zero,435c <__alt_mem_onchip_memory2_0+0xf700435c>
    4728:	d9800c17 	ldw	r6,48(sp)
    472c:	01bcab0e 	bge	zero,r6,39dc <__alt_mem_onchip_memory2_0+0xf70039dc>
    4730:	d9401017 	ldw	r5,64(sp)
    4734:	d9000f17 	ldw	r4,60(sp)
    4738:	000d883a 	mov	r6,zero
    473c:	01d00934 	movhi	r7,16420
    4740:	000aa780 	call	aa78 <__muldf3>
    4744:	81000044 	addi	r4,r16,1
    4748:	d8800f15 	stw	r2,60(sp)
    474c:	d8c01015 	stw	r3,64(sp)
    4750:	000bc600 	call	bc60 <__floatsidf>
    4754:	d9800f17 	ldw	r6,60(sp)
    4758:	d9c01017 	ldw	r7,64(sp)
    475c:	1009883a 	mov	r4,r2
    4760:	180b883a 	mov	r5,r3
    4764:	000aa780 	call	aa78 <__muldf3>
    4768:	01d00734 	movhi	r7,16412
    476c:	000d883a 	mov	r6,zero
    4770:	1009883a 	mov	r4,r2
    4774:	180b883a 	mov	r5,r3
    4778:	00095a40 	call	95a4 <__adddf3>
    477c:	d9c00517 	ldw	r7,20(sp)
    4780:	047f3034 	movhi	r17,64704
    4784:	1021883a 	mov	r16,r2
    4788:	39ffffc4 	addi	r7,r7,-1
    478c:	d9c01315 	stw	r7,76(sp)
    4790:	1c63883a 	add	r17,r3,r17
    4794:	db000c17 	ldw	r12,48(sp)
    4798:	003bea06 	br	3744 <__alt_mem_onchip_memory2_0+0xf7003744>
    479c:	dc000915 	stw	r16,36(sp)
    47a0:	003e0e06 	br	3fdc <__alt_mem_onchip_memory2_0+0xf7003fdc>
    47a4:	01000e44 	movi	r4,57
    47a8:	8825883a 	mov	r18,r17
    47ac:	9dc00044 	addi	r23,r19,1
    47b0:	99000005 	stb	r4,0(r19)
    47b4:	a023883a 	mov	r17,r20
    47b8:	dc000915 	stw	r16,36(sp)
    47bc:	003da406 	br	3e50 <__alt_mem_onchip_memory2_0+0xf7003e50>
    47c0:	d9801417 	ldw	r6,80(sp)
    47c4:	d9c01517 	ldw	r7,84(sp)
    47c8:	0009883a 	mov	r4,zero
    47cc:	014ff834 	movhi	r5,16352
    47d0:	000b2e40 	call	b2e4 <__subdf3>
    47d4:	880d883a 	mov	r6,r17
    47d8:	a00f883a 	mov	r7,r20
    47dc:	1009883a 	mov	r4,r2
    47e0:	180b883a 	mov	r5,r3
    47e4:	000a8a80 	call	a8a8 <__gedf2>
    47e8:	00bc7c0e 	bge	zero,r2,39dc <__alt_mem_onchip_memory2_0+0xf70039dc>
    47ec:	01000c04 	movi	r4,48
    47f0:	00000106 	br	47f8 <_dtoa_r+0x1580>
    47f4:	102f883a 	mov	r23,r2
    47f8:	b8bfffc4 	addi	r2,r23,-1
    47fc:	10c00007 	ldb	r3,0(r2)
    4800:	193ffc26 	beq	r3,r4,47f4 <__alt_mem_onchip_memory2_0+0xf70047f4>
    4804:	d9801317 	ldw	r6,76(sp)
    4808:	d9800515 	stw	r6,20(sp)
    480c:	003c4406 	br	3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    4810:	d9801317 	ldw	r6,76(sp)
    4814:	d9800515 	stw	r6,20(sp)
    4818:	003cea06 	br	3bc4 <__alt_mem_onchip_memory2_0+0xf7003bc4>
    481c:	dd800f17 	ldw	r22,60(sp)
    4820:	dcc01017 	ldw	r19,64(sp)
    4824:	dc801217 	ldw	r18,72(sp)
    4828:	003c6c06 	br	39dc <__alt_mem_onchip_memory2_0+0xf70039dc>
    482c:	903e031e 	bne	r18,zero,403c <__alt_mem_onchip_memory2_0+0xf700403c>
    4830:	003ebb06 	br	4320 <__alt_mem_onchip_memory2_0+0xf7004320>
    4834:	103e6c1e 	bne	r2,zero,41e8 <__alt_mem_onchip_memory2_0+0xf70041e8>
    4838:	4080004c 	andi	r2,r8,1
    483c:	103e6a26 	beq	r2,zero,41e8 <__alt_mem_onchip_memory2_0+0xf70041e8>
    4840:	003e6606 	br	41dc <__alt_mem_onchip_memory2_0+0xf70041dc>
    4844:	d8c00317 	ldw	r3,12(sp)
    4848:	00800084 	movi	r2,2
    484c:	10c02916 	blt	r2,r3,48f4 <_dtoa_r+0x167c>
    4850:	d9000c17 	ldw	r4,48(sp)
    4854:	003e8806 	br	4278 <__alt_mem_onchip_memory2_0+0xf7004278>
    4858:	04000084 	movi	r16,2
    485c:	003b9d06 	br	36d4 <__alt_mem_onchip_memory2_0+0xf70036d4>
    4860:	d9001317 	ldw	r4,76(sp)
    4864:	d9000515 	stw	r4,20(sp)
    4868:	003cd606 	br	3bc4 <__alt_mem_onchip_memory2_0+0xf7003bc4>
    486c:	d8801317 	ldw	r2,76(sp)
    4870:	d8800515 	stw	r2,20(sp)
    4874:	003c2a06 	br	3920 <__alt_mem_onchip_memory2_0+0xf7003920>
    4878:	d9800317 	ldw	r6,12(sp)
    487c:	00800084 	movi	r2,2
    4880:	11801516 	blt	r2,r6,48d8 <_dtoa_r+0x1660>
    4884:	d9c00c17 	ldw	r7,48(sp)
    4888:	d9c00615 	stw	r7,24(sp)
    488c:	003df706 	br	406c <__alt_mem_onchip_memory2_0+0xf700406c>
    4890:	193d3926 	beq	r3,r4,3d78 <__alt_mem_onchip_memory2_0+0xf7003d78>
    4894:	00c00f04 	movi	r3,60
    4898:	1885c83a 	sub	r2,r3,r2
    489c:	003ddf06 	br	401c <__alt_mem_onchip_memory2_0+0xf700401c>
    48a0:	e009883a 	mov	r4,fp
    48a4:	e0001115 	stw	zero,68(fp)
    48a8:	000b883a 	mov	r5,zero
    48ac:	00054140 	call	5414 <_Balloc>
    48b0:	d8800715 	stw	r2,28(sp)
    48b4:	d8c00717 	ldw	r3,28(sp)
    48b8:	00bfffc4 	movi	r2,-1
    48bc:	01000044 	movi	r4,1
    48c0:	d8800c15 	stw	r2,48(sp)
    48c4:	e0c01015 	stw	r3,64(fp)
    48c8:	d9000b15 	stw	r4,44(sp)
    48cc:	d8800615 	stw	r2,24(sp)
    48d0:	d8002215 	stw	zero,136(sp)
    48d4:	003c4106 	br	39dc <__alt_mem_onchip_memory2_0+0xf70039dc>
    48d8:	d8c00c17 	ldw	r3,48(sp)
    48dc:	d8c00615 	stw	r3,24(sp)
    48e0:	003e7006 	br	42a4 <__alt_mem_onchip_memory2_0+0xf70042a4>
    48e4:	04400044 	movi	r17,1
    48e8:	003b2006 	br	356c <__alt_mem_onchip_memory2_0+0xf700356c>
    48ec:	000b883a 	mov	r5,zero
    48f0:	003b3d06 	br	35e8 <__alt_mem_onchip_memory2_0+0xf70035e8>
    48f4:	d8800c17 	ldw	r2,48(sp)
    48f8:	d8800615 	stw	r2,24(sp)
    48fc:	003e6906 	br	42a4 <__alt_mem_onchip_memory2_0+0xf70042a4>

00004900 <_setlocale_r>:
    4900:	30001b26 	beq	r6,zero,4970 <_setlocale_r+0x70>
    4904:	01400074 	movhi	r5,1
    4908:	defffe04 	addi	sp,sp,-8
    490c:	29787104 	addi	r5,r5,-7740
    4910:	3009883a 	mov	r4,r6
    4914:	dc000015 	stw	r16,0(sp)
    4918:	dfc00115 	stw	ra,4(sp)
    491c:	3021883a 	mov	r16,r6
    4920:	00065940 	call	6594 <strcmp>
    4924:	1000061e 	bne	r2,zero,4940 <_setlocale_r+0x40>
    4928:	00800074 	movhi	r2,1
    492c:	10b87004 	addi	r2,r2,-7744
    4930:	dfc00117 	ldw	ra,4(sp)
    4934:	dc000017 	ldw	r16,0(sp)
    4938:	dec00204 	addi	sp,sp,8
    493c:	f800283a 	ret
    4940:	01400074 	movhi	r5,1
    4944:	29787004 	addi	r5,r5,-7744
    4948:	8009883a 	mov	r4,r16
    494c:	00065940 	call	6594 <strcmp>
    4950:	103ff526 	beq	r2,zero,4928 <__alt_mem_onchip_memory2_0+0xf7004928>
    4954:	01400074 	movhi	r5,1
    4958:	29785b04 	addi	r5,r5,-7828
    495c:	8009883a 	mov	r4,r16
    4960:	00065940 	call	6594 <strcmp>
    4964:	103ff026 	beq	r2,zero,4928 <__alt_mem_onchip_memory2_0+0xf7004928>
    4968:	0005883a 	mov	r2,zero
    496c:	003ff006 	br	4930 <__alt_mem_onchip_memory2_0+0xf7004930>
    4970:	00800074 	movhi	r2,1
    4974:	10b87004 	addi	r2,r2,-7744
    4978:	f800283a 	ret

0000497c <__locale_charset>:
    497c:	00800074 	movhi	r2,1
    4980:	10bb3704 	addi	r2,r2,-4900
    4984:	f800283a 	ret

00004988 <__locale_mb_cur_max>:
    4988:	00800074 	movhi	r2,1
    498c:	1080d604 	addi	r2,r2,856
    4990:	10800017 	ldw	r2,0(r2)
    4994:	f800283a 	ret

00004998 <__locale_msgcharset>:
    4998:	00800074 	movhi	r2,1
    499c:	10bb2f04 	addi	r2,r2,-4932
    49a0:	f800283a 	ret

000049a4 <__locale_cjk_lang>:
    49a4:	0005883a 	mov	r2,zero
    49a8:	f800283a 	ret

000049ac <_localeconv_r>:
    49ac:	00800074 	movhi	r2,1
    49b0:	10bb3f04 	addi	r2,r2,-4868
    49b4:	f800283a 	ret

000049b8 <setlocale>:
    49b8:	00800074 	movhi	r2,1
    49bc:	1080d504 	addi	r2,r2,852
    49c0:	280d883a 	mov	r6,r5
    49c4:	200b883a 	mov	r5,r4
    49c8:	11000017 	ldw	r4,0(r2)
    49cc:	00049001 	jmpi	4900 <_setlocale_r>

000049d0 <localeconv>:
    49d0:	00800074 	movhi	r2,1
    49d4:	10bb3f04 	addi	r2,r2,-4868
    49d8:	f800283a 	ret

000049dc <_malloc_r>:
    49dc:	defff504 	addi	sp,sp,-44
    49e0:	dc800315 	stw	r18,12(sp)
    49e4:	dfc00a15 	stw	ra,40(sp)
    49e8:	df000915 	stw	fp,36(sp)
    49ec:	ddc00815 	stw	r23,32(sp)
    49f0:	dd800715 	stw	r22,28(sp)
    49f4:	dd400615 	stw	r21,24(sp)
    49f8:	dd000515 	stw	r20,20(sp)
    49fc:	dcc00415 	stw	r19,16(sp)
    4a00:	dc400215 	stw	r17,8(sp)
    4a04:	dc000115 	stw	r16,4(sp)
    4a08:	288002c4 	addi	r2,r5,11
    4a0c:	00c00584 	movi	r3,22
    4a10:	2025883a 	mov	r18,r4
    4a14:	18807f2e 	bgeu	r3,r2,4c14 <_malloc_r+0x238>
    4a18:	047ffe04 	movi	r17,-8
    4a1c:	1462703a 	and	r17,r2,r17
    4a20:	8800a316 	blt	r17,zero,4cb0 <_malloc_r+0x2d4>
    4a24:	8940a236 	bltu	r17,r5,4cb0 <_malloc_r+0x2d4>
    4a28:	000bfb00 	call	bfb0 <__malloc_lock>
    4a2c:	00807dc4 	movi	r2,503
    4a30:	1441e92e 	bgeu	r2,r17,51d8 <_malloc_r+0x7fc>
    4a34:	8804d27a 	srli	r2,r17,9
    4a38:	1000a126 	beq	r2,zero,4cc0 <_malloc_r+0x2e4>
    4a3c:	00c00104 	movi	r3,4
    4a40:	18811e36 	bltu	r3,r2,4ebc <_malloc_r+0x4e0>
    4a44:	8804d1ba 	srli	r2,r17,6
    4a48:	12000e44 	addi	r8,r2,57
    4a4c:	11c00e04 	addi	r7,r2,56
    4a50:	4209883a 	add	r4,r8,r8
    4a54:	04c00074 	movhi	r19,1
    4a58:	2109883a 	add	r4,r4,r4
    4a5c:	9cfb4d04 	addi	r19,r19,-4812
    4a60:	2109883a 	add	r4,r4,r4
    4a64:	9909883a 	add	r4,r19,r4
    4a68:	24000117 	ldw	r16,4(r4)
    4a6c:	213ffe04 	addi	r4,r4,-8
    4a70:	24009726 	beq	r4,r16,4cd0 <_malloc_r+0x2f4>
    4a74:	80800117 	ldw	r2,4(r16)
    4a78:	01bfff04 	movi	r6,-4
    4a7c:	014003c4 	movi	r5,15
    4a80:	1184703a 	and	r2,r2,r6
    4a84:	1447c83a 	sub	r3,r2,r17
    4a88:	28c00716 	blt	r5,r3,4aa8 <_malloc_r+0xcc>
    4a8c:	1800920e 	bge	r3,zero,4cd8 <_malloc_r+0x2fc>
    4a90:	84000317 	ldw	r16,12(r16)
    4a94:	24008e26 	beq	r4,r16,4cd0 <_malloc_r+0x2f4>
    4a98:	80800117 	ldw	r2,4(r16)
    4a9c:	1184703a 	and	r2,r2,r6
    4aa0:	1447c83a 	sub	r3,r2,r17
    4aa4:	28fff90e 	bge	r5,r3,4a8c <__alt_mem_onchip_memory2_0+0xf7004a8c>
    4aa8:	3809883a 	mov	r4,r7
    4aac:	01800074 	movhi	r6,1
    4ab0:	9c000417 	ldw	r16,16(r19)
    4ab4:	31bb4d04 	addi	r6,r6,-4812
    4ab8:	32000204 	addi	r8,r6,8
    4abc:	82013426 	beq	r16,r8,4f90 <_malloc_r+0x5b4>
    4ac0:	80c00117 	ldw	r3,4(r16)
    4ac4:	00bfff04 	movi	r2,-4
    4ac8:	188e703a 	and	r7,r3,r2
    4acc:	3c45c83a 	sub	r2,r7,r17
    4ad0:	00c003c4 	movi	r3,15
    4ad4:	18811f16 	blt	r3,r2,4f54 <_malloc_r+0x578>
    4ad8:	32000515 	stw	r8,20(r6)
    4adc:	32000415 	stw	r8,16(r6)
    4ae0:	10007f0e 	bge	r2,zero,4ce0 <_malloc_r+0x304>
    4ae4:	00807fc4 	movi	r2,511
    4ae8:	11c0fd36 	bltu	r2,r7,4ee0 <_malloc_r+0x504>
    4aec:	3806d0fa 	srli	r3,r7,3
    4af0:	01c00044 	movi	r7,1
    4af4:	30800117 	ldw	r2,4(r6)
    4af8:	19400044 	addi	r5,r3,1
    4afc:	294b883a 	add	r5,r5,r5
    4b00:	1807d0ba 	srai	r3,r3,2
    4b04:	294b883a 	add	r5,r5,r5
    4b08:	294b883a 	add	r5,r5,r5
    4b0c:	298b883a 	add	r5,r5,r6
    4b10:	38c6983a 	sll	r3,r7,r3
    4b14:	29c00017 	ldw	r7,0(r5)
    4b18:	2a7ffe04 	addi	r9,r5,-8
    4b1c:	1886b03a 	or	r3,r3,r2
    4b20:	82400315 	stw	r9,12(r16)
    4b24:	81c00215 	stw	r7,8(r16)
    4b28:	30c00115 	stw	r3,4(r6)
    4b2c:	2c000015 	stw	r16,0(r5)
    4b30:	3c000315 	stw	r16,12(r7)
    4b34:	2005d0ba 	srai	r2,r4,2
    4b38:	01400044 	movi	r5,1
    4b3c:	288a983a 	sll	r5,r5,r2
    4b40:	19406f36 	bltu	r3,r5,4d00 <_malloc_r+0x324>
    4b44:	28c4703a 	and	r2,r5,r3
    4b48:	10000a1e 	bne	r2,zero,4b74 <_malloc_r+0x198>
    4b4c:	00bfff04 	movi	r2,-4
    4b50:	294b883a 	add	r5,r5,r5
    4b54:	2088703a 	and	r4,r4,r2
    4b58:	28c4703a 	and	r2,r5,r3
    4b5c:	21000104 	addi	r4,r4,4
    4b60:	1000041e 	bne	r2,zero,4b74 <_malloc_r+0x198>
    4b64:	294b883a 	add	r5,r5,r5
    4b68:	28c4703a 	and	r2,r5,r3
    4b6c:	21000104 	addi	r4,r4,4
    4b70:	103ffc26 	beq	r2,zero,4b64 <__alt_mem_onchip_memory2_0+0xf7004b64>
    4b74:	02bfff04 	movi	r10,-4
    4b78:	024003c4 	movi	r9,15
    4b7c:	21800044 	addi	r6,r4,1
    4b80:	318d883a 	add	r6,r6,r6
    4b84:	318d883a 	add	r6,r6,r6
    4b88:	318d883a 	add	r6,r6,r6
    4b8c:	998d883a 	add	r6,r19,r6
    4b90:	333ffe04 	addi	r12,r6,-8
    4b94:	2017883a 	mov	r11,r4
    4b98:	31800104 	addi	r6,r6,4
    4b9c:	34000017 	ldw	r16,0(r6)
    4ba0:	31fffd04 	addi	r7,r6,-12
    4ba4:	81c0041e 	bne	r16,r7,4bb8 <_malloc_r+0x1dc>
    4ba8:	0000fb06 	br	4f98 <_malloc_r+0x5bc>
    4bac:	1801030e 	bge	r3,zero,4fbc <_malloc_r+0x5e0>
    4bb0:	84000317 	ldw	r16,12(r16)
    4bb4:	81c0f826 	beq	r16,r7,4f98 <_malloc_r+0x5bc>
    4bb8:	80800117 	ldw	r2,4(r16)
    4bbc:	1284703a 	and	r2,r2,r10
    4bc0:	1447c83a 	sub	r3,r2,r17
    4bc4:	48fff90e 	bge	r9,r3,4bac <__alt_mem_onchip_memory2_0+0xf7004bac>
    4bc8:	80800317 	ldw	r2,12(r16)
    4bcc:	81000217 	ldw	r4,8(r16)
    4bd0:	89400054 	ori	r5,r17,1
    4bd4:	81400115 	stw	r5,4(r16)
    4bd8:	20800315 	stw	r2,12(r4)
    4bdc:	11000215 	stw	r4,8(r2)
    4be0:	8463883a 	add	r17,r16,r17
    4be4:	9c400515 	stw	r17,20(r19)
    4be8:	9c400415 	stw	r17,16(r19)
    4bec:	18800054 	ori	r2,r3,1
    4bf0:	88800115 	stw	r2,4(r17)
    4bf4:	8a000315 	stw	r8,12(r17)
    4bf8:	8a000215 	stw	r8,8(r17)
    4bfc:	88e3883a 	add	r17,r17,r3
    4c00:	88c00015 	stw	r3,0(r17)
    4c04:	9009883a 	mov	r4,r18
    4c08:	000bfd40 	call	bfd4 <__malloc_unlock>
    4c0c:	80800204 	addi	r2,r16,8
    4c10:	00001b06 	br	4c80 <_malloc_r+0x2a4>
    4c14:	04400404 	movi	r17,16
    4c18:	89402536 	bltu	r17,r5,4cb0 <_malloc_r+0x2d4>
    4c1c:	000bfb00 	call	bfb0 <__malloc_lock>
    4c20:	00800184 	movi	r2,6
    4c24:	01000084 	movi	r4,2
    4c28:	04c00074 	movhi	r19,1
    4c2c:	1085883a 	add	r2,r2,r2
    4c30:	9cfb4d04 	addi	r19,r19,-4812
    4c34:	1085883a 	add	r2,r2,r2
    4c38:	9885883a 	add	r2,r19,r2
    4c3c:	14000117 	ldw	r16,4(r2)
    4c40:	10fffe04 	addi	r3,r2,-8
    4c44:	80c0d926 	beq	r16,r3,4fac <_malloc_r+0x5d0>
    4c48:	80c00117 	ldw	r3,4(r16)
    4c4c:	81000317 	ldw	r4,12(r16)
    4c50:	00bfff04 	movi	r2,-4
    4c54:	1884703a 	and	r2,r3,r2
    4c58:	81400217 	ldw	r5,8(r16)
    4c5c:	8085883a 	add	r2,r16,r2
    4c60:	10c00117 	ldw	r3,4(r2)
    4c64:	29000315 	stw	r4,12(r5)
    4c68:	21400215 	stw	r5,8(r4)
    4c6c:	18c00054 	ori	r3,r3,1
    4c70:	10c00115 	stw	r3,4(r2)
    4c74:	9009883a 	mov	r4,r18
    4c78:	000bfd40 	call	bfd4 <__malloc_unlock>
    4c7c:	80800204 	addi	r2,r16,8
    4c80:	dfc00a17 	ldw	ra,40(sp)
    4c84:	df000917 	ldw	fp,36(sp)
    4c88:	ddc00817 	ldw	r23,32(sp)
    4c8c:	dd800717 	ldw	r22,28(sp)
    4c90:	dd400617 	ldw	r21,24(sp)
    4c94:	dd000517 	ldw	r20,20(sp)
    4c98:	dcc00417 	ldw	r19,16(sp)
    4c9c:	dc800317 	ldw	r18,12(sp)
    4ca0:	dc400217 	ldw	r17,8(sp)
    4ca4:	dc000117 	ldw	r16,4(sp)
    4ca8:	dec00b04 	addi	sp,sp,44
    4cac:	f800283a 	ret
    4cb0:	00800304 	movi	r2,12
    4cb4:	90800015 	stw	r2,0(r18)
    4cb8:	0005883a 	mov	r2,zero
    4cbc:	003ff006 	br	4c80 <__alt_mem_onchip_memory2_0+0xf7004c80>
    4cc0:	01002004 	movi	r4,128
    4cc4:	02001004 	movi	r8,64
    4cc8:	01c00fc4 	movi	r7,63
    4ccc:	003f6106 	br	4a54 <__alt_mem_onchip_memory2_0+0xf7004a54>
    4cd0:	4009883a 	mov	r4,r8
    4cd4:	003f7506 	br	4aac <__alt_mem_onchip_memory2_0+0xf7004aac>
    4cd8:	81000317 	ldw	r4,12(r16)
    4cdc:	003fde06 	br	4c58 <__alt_mem_onchip_memory2_0+0xf7004c58>
    4ce0:	81c5883a 	add	r2,r16,r7
    4ce4:	11400117 	ldw	r5,4(r2)
    4ce8:	9009883a 	mov	r4,r18
    4cec:	29400054 	ori	r5,r5,1
    4cf0:	11400115 	stw	r5,4(r2)
    4cf4:	000bfd40 	call	bfd4 <__malloc_unlock>
    4cf8:	80800204 	addi	r2,r16,8
    4cfc:	003fe006 	br	4c80 <__alt_mem_onchip_memory2_0+0xf7004c80>
    4d00:	9c000217 	ldw	r16,8(r19)
    4d04:	00bfff04 	movi	r2,-4
    4d08:	85800117 	ldw	r22,4(r16)
    4d0c:	b0ac703a 	and	r22,r22,r2
    4d10:	b4400336 	bltu	r22,r17,4d20 <_malloc_r+0x344>
    4d14:	b445c83a 	sub	r2,r22,r17
    4d18:	00c003c4 	movi	r3,15
    4d1c:	18805d16 	blt	r3,r2,4e94 <_malloc_r+0x4b8>
    4d20:	05c00074 	movhi	r23,1
    4d24:	00800074 	movhi	r2,1
    4d28:	1088b904 	addi	r2,r2,8932
    4d2c:	bdc0d704 	addi	r23,r23,860
    4d30:	15400017 	ldw	r21,0(r2)
    4d34:	b8c00017 	ldw	r3,0(r23)
    4d38:	00bfffc4 	movi	r2,-1
    4d3c:	858d883a 	add	r6,r16,r22
    4d40:	8d6b883a 	add	r21,r17,r21
    4d44:	1880ea26 	beq	r3,r2,50f0 <_malloc_r+0x714>
    4d48:	ad4403c4 	addi	r21,r21,4111
    4d4c:	00bc0004 	movi	r2,-4096
    4d50:	a8aa703a 	and	r21,r21,r2
    4d54:	a80b883a 	mov	r5,r21
    4d58:	9009883a 	mov	r4,r18
    4d5c:	d9800015 	stw	r6,0(sp)
    4d60:	00065400 	call	6540 <_sbrk_r>
    4d64:	1029883a 	mov	r20,r2
    4d68:	00bfffc4 	movi	r2,-1
    4d6c:	d9800017 	ldw	r6,0(sp)
    4d70:	a080e826 	beq	r20,r2,5114 <_malloc_r+0x738>
    4d74:	a180a636 	bltu	r20,r6,5010 <_malloc_r+0x634>
    4d78:	07000074 	movhi	fp,1
    4d7c:	e708c204 	addi	fp,fp,8968
    4d80:	e0800017 	ldw	r2,0(fp)
    4d84:	a887883a 	add	r3,r21,r2
    4d88:	e0c00015 	stw	r3,0(fp)
    4d8c:	3500e626 	beq	r6,r20,5128 <_malloc_r+0x74c>
    4d90:	b9000017 	ldw	r4,0(r23)
    4d94:	00bfffc4 	movi	r2,-1
    4d98:	2080ee26 	beq	r4,r2,5154 <_malloc_r+0x778>
    4d9c:	a185c83a 	sub	r2,r20,r6
    4da0:	10c5883a 	add	r2,r2,r3
    4da4:	e0800015 	stw	r2,0(fp)
    4da8:	a0c001cc 	andi	r3,r20,7
    4dac:	1800bc26 	beq	r3,zero,50a0 <_malloc_r+0x6c4>
    4db0:	a0e9c83a 	sub	r20,r20,r3
    4db4:	00840204 	movi	r2,4104
    4db8:	a5000204 	addi	r20,r20,8
    4dbc:	10c7c83a 	sub	r3,r2,r3
    4dc0:	a545883a 	add	r2,r20,r21
    4dc4:	1083ffcc 	andi	r2,r2,4095
    4dc8:	18abc83a 	sub	r21,r3,r2
    4dcc:	a80b883a 	mov	r5,r21
    4dd0:	9009883a 	mov	r4,r18
    4dd4:	00065400 	call	6540 <_sbrk_r>
    4dd8:	00ffffc4 	movi	r3,-1
    4ddc:	10c0e126 	beq	r2,r3,5164 <_malloc_r+0x788>
    4de0:	1505c83a 	sub	r2,r2,r20
    4de4:	1545883a 	add	r2,r2,r21
    4de8:	10800054 	ori	r2,r2,1
    4dec:	e0c00017 	ldw	r3,0(fp)
    4df0:	9d000215 	stw	r20,8(r19)
    4df4:	a0800115 	stw	r2,4(r20)
    4df8:	a8c7883a 	add	r3,r21,r3
    4dfc:	e0c00015 	stw	r3,0(fp)
    4e00:	84c00e26 	beq	r16,r19,4e3c <_malloc_r+0x460>
    4e04:	018003c4 	movi	r6,15
    4e08:	3580a72e 	bgeu	r6,r22,50a8 <_malloc_r+0x6cc>
    4e0c:	81400117 	ldw	r5,4(r16)
    4e10:	013ffe04 	movi	r4,-8
    4e14:	b0bffd04 	addi	r2,r22,-12
    4e18:	1104703a 	and	r2,r2,r4
    4e1c:	2900004c 	andi	r4,r5,1
    4e20:	2088b03a 	or	r4,r4,r2
    4e24:	81000115 	stw	r4,4(r16)
    4e28:	01400144 	movi	r5,5
    4e2c:	8089883a 	add	r4,r16,r2
    4e30:	21400115 	stw	r5,4(r4)
    4e34:	21400215 	stw	r5,8(r4)
    4e38:	3080cd36 	bltu	r6,r2,5170 <_malloc_r+0x794>
    4e3c:	00800074 	movhi	r2,1
    4e40:	1088b804 	addi	r2,r2,8928
    4e44:	11000017 	ldw	r4,0(r2)
    4e48:	20c0012e 	bgeu	r4,r3,4e50 <_malloc_r+0x474>
    4e4c:	10c00015 	stw	r3,0(r2)
    4e50:	00800074 	movhi	r2,1
    4e54:	1088b704 	addi	r2,r2,8924
    4e58:	11000017 	ldw	r4,0(r2)
    4e5c:	9c000217 	ldw	r16,8(r19)
    4e60:	20c0012e 	bgeu	r4,r3,4e68 <_malloc_r+0x48c>
    4e64:	10c00015 	stw	r3,0(r2)
    4e68:	80c00117 	ldw	r3,4(r16)
    4e6c:	00bfff04 	movi	r2,-4
    4e70:	1886703a 	and	r3,r3,r2
    4e74:	1c45c83a 	sub	r2,r3,r17
    4e78:	1c400236 	bltu	r3,r17,4e84 <_malloc_r+0x4a8>
    4e7c:	00c003c4 	movi	r3,15
    4e80:	18800416 	blt	r3,r2,4e94 <_malloc_r+0x4b8>
    4e84:	9009883a 	mov	r4,r18
    4e88:	000bfd40 	call	bfd4 <__malloc_unlock>
    4e8c:	0005883a 	mov	r2,zero
    4e90:	003f7b06 	br	4c80 <__alt_mem_onchip_memory2_0+0xf7004c80>
    4e94:	88c00054 	ori	r3,r17,1
    4e98:	80c00115 	stw	r3,4(r16)
    4e9c:	8463883a 	add	r17,r16,r17
    4ea0:	10800054 	ori	r2,r2,1
    4ea4:	9c400215 	stw	r17,8(r19)
    4ea8:	88800115 	stw	r2,4(r17)
    4eac:	9009883a 	mov	r4,r18
    4eb0:	000bfd40 	call	bfd4 <__malloc_unlock>
    4eb4:	80800204 	addi	r2,r16,8
    4eb8:	003f7106 	br	4c80 <__alt_mem_onchip_memory2_0+0xf7004c80>
    4ebc:	00c00504 	movi	r3,20
    4ec0:	18804a2e 	bgeu	r3,r2,4fec <_malloc_r+0x610>
    4ec4:	00c01504 	movi	r3,84
    4ec8:	18806e36 	bltu	r3,r2,5084 <_malloc_r+0x6a8>
    4ecc:	8804d33a 	srli	r2,r17,12
    4ed0:	12001bc4 	addi	r8,r2,111
    4ed4:	11c01b84 	addi	r7,r2,110
    4ed8:	4209883a 	add	r4,r8,r8
    4edc:	003edd06 	br	4a54 <__alt_mem_onchip_memory2_0+0xf7004a54>
    4ee0:	3804d27a 	srli	r2,r7,9
    4ee4:	00c00104 	movi	r3,4
    4ee8:	1880442e 	bgeu	r3,r2,4ffc <_malloc_r+0x620>
    4eec:	00c00504 	movi	r3,20
    4ef0:	18808136 	bltu	r3,r2,50f8 <_malloc_r+0x71c>
    4ef4:	11401704 	addi	r5,r2,92
    4ef8:	10c016c4 	addi	r3,r2,91
    4efc:	294b883a 	add	r5,r5,r5
    4f00:	294b883a 	add	r5,r5,r5
    4f04:	294b883a 	add	r5,r5,r5
    4f08:	994b883a 	add	r5,r19,r5
    4f0c:	28800017 	ldw	r2,0(r5)
    4f10:	01800074 	movhi	r6,1
    4f14:	297ffe04 	addi	r5,r5,-8
    4f18:	31bb4d04 	addi	r6,r6,-4812
    4f1c:	28806526 	beq	r5,r2,50b4 <_malloc_r+0x6d8>
    4f20:	01bfff04 	movi	r6,-4
    4f24:	10c00117 	ldw	r3,4(r2)
    4f28:	1986703a 	and	r3,r3,r6
    4f2c:	38c0022e 	bgeu	r7,r3,4f38 <_malloc_r+0x55c>
    4f30:	10800217 	ldw	r2,8(r2)
    4f34:	28bffb1e 	bne	r5,r2,4f24 <__alt_mem_onchip_memory2_0+0xf7004f24>
    4f38:	11400317 	ldw	r5,12(r2)
    4f3c:	98c00117 	ldw	r3,4(r19)
    4f40:	81400315 	stw	r5,12(r16)
    4f44:	80800215 	stw	r2,8(r16)
    4f48:	2c000215 	stw	r16,8(r5)
    4f4c:	14000315 	stw	r16,12(r2)
    4f50:	003ef806 	br	4b34 <__alt_mem_onchip_memory2_0+0xf7004b34>
    4f54:	88c00054 	ori	r3,r17,1
    4f58:	80c00115 	stw	r3,4(r16)
    4f5c:	8463883a 	add	r17,r16,r17
    4f60:	34400515 	stw	r17,20(r6)
    4f64:	34400415 	stw	r17,16(r6)
    4f68:	10c00054 	ori	r3,r2,1
    4f6c:	8a000315 	stw	r8,12(r17)
    4f70:	8a000215 	stw	r8,8(r17)
    4f74:	88c00115 	stw	r3,4(r17)
    4f78:	88a3883a 	add	r17,r17,r2
    4f7c:	88800015 	stw	r2,0(r17)
    4f80:	9009883a 	mov	r4,r18
    4f84:	000bfd40 	call	bfd4 <__malloc_unlock>
    4f88:	80800204 	addi	r2,r16,8
    4f8c:	003f3c06 	br	4c80 <__alt_mem_onchip_memory2_0+0xf7004c80>
    4f90:	30c00117 	ldw	r3,4(r6)
    4f94:	003ee706 	br	4b34 <__alt_mem_onchip_memory2_0+0xf7004b34>
    4f98:	5ac00044 	addi	r11,r11,1
    4f9c:	588000cc 	andi	r2,r11,3
    4fa0:	31800204 	addi	r6,r6,8
    4fa4:	103efd1e 	bne	r2,zero,4b9c <__alt_mem_onchip_memory2_0+0xf7004b9c>
    4fa8:	00002406 	br	503c <_malloc_r+0x660>
    4fac:	14000317 	ldw	r16,12(r2)
    4fb0:	143f251e 	bne	r2,r16,4c48 <__alt_mem_onchip_memory2_0+0xf7004c48>
    4fb4:	21000084 	addi	r4,r4,2
    4fb8:	003ebc06 	br	4aac <__alt_mem_onchip_memory2_0+0xf7004aac>
    4fbc:	8085883a 	add	r2,r16,r2
    4fc0:	10c00117 	ldw	r3,4(r2)
    4fc4:	81000317 	ldw	r4,12(r16)
    4fc8:	81400217 	ldw	r5,8(r16)
    4fcc:	18c00054 	ori	r3,r3,1
    4fd0:	10c00115 	stw	r3,4(r2)
    4fd4:	29000315 	stw	r4,12(r5)
    4fd8:	21400215 	stw	r5,8(r4)
    4fdc:	9009883a 	mov	r4,r18
    4fe0:	000bfd40 	call	bfd4 <__malloc_unlock>
    4fe4:	80800204 	addi	r2,r16,8
    4fe8:	003f2506 	br	4c80 <__alt_mem_onchip_memory2_0+0xf7004c80>
    4fec:	12001704 	addi	r8,r2,92
    4ff0:	11c016c4 	addi	r7,r2,91
    4ff4:	4209883a 	add	r4,r8,r8
    4ff8:	003e9606 	br	4a54 <__alt_mem_onchip_memory2_0+0xf7004a54>
    4ffc:	3804d1ba 	srli	r2,r7,6
    5000:	11400e44 	addi	r5,r2,57
    5004:	10c00e04 	addi	r3,r2,56
    5008:	294b883a 	add	r5,r5,r5
    500c:	003fbc06 	br	4f00 <__alt_mem_onchip_memory2_0+0xf7004f00>
    5010:	84ff5926 	beq	r16,r19,4d78 <__alt_mem_onchip_memory2_0+0xf7004d78>
    5014:	00800074 	movhi	r2,1
    5018:	10bb4d04 	addi	r2,r2,-4812
    501c:	14000217 	ldw	r16,8(r2)
    5020:	00bfff04 	movi	r2,-4
    5024:	80c00117 	ldw	r3,4(r16)
    5028:	1886703a 	and	r3,r3,r2
    502c:	003f9106 	br	4e74 <__alt_mem_onchip_memory2_0+0xf7004e74>
    5030:	60800217 	ldw	r2,8(r12)
    5034:	213fffc4 	addi	r4,r4,-1
    5038:	1300651e 	bne	r2,r12,51d0 <_malloc_r+0x7f4>
    503c:	208000cc 	andi	r2,r4,3
    5040:	633ffe04 	addi	r12,r12,-8
    5044:	103ffa1e 	bne	r2,zero,5030 <__alt_mem_onchip_memory2_0+0xf7005030>
    5048:	98800117 	ldw	r2,4(r19)
    504c:	0146303a 	nor	r3,zero,r5
    5050:	1884703a 	and	r2,r3,r2
    5054:	98800115 	stw	r2,4(r19)
    5058:	294b883a 	add	r5,r5,r5
    505c:	117f2836 	bltu	r2,r5,4d00 <__alt_mem_onchip_memory2_0+0xf7004d00>
    5060:	283f2726 	beq	r5,zero,4d00 <__alt_mem_onchip_memory2_0+0xf7004d00>
    5064:	2886703a 	and	r3,r5,r2
    5068:	5809883a 	mov	r4,r11
    506c:	183ec31e 	bne	r3,zero,4b7c <__alt_mem_onchip_memory2_0+0xf7004b7c>
    5070:	294b883a 	add	r5,r5,r5
    5074:	2886703a 	and	r3,r5,r2
    5078:	21000104 	addi	r4,r4,4
    507c:	183ffc26 	beq	r3,zero,5070 <__alt_mem_onchip_memory2_0+0xf7005070>
    5080:	003ebe06 	br	4b7c <__alt_mem_onchip_memory2_0+0xf7004b7c>
    5084:	00c05504 	movi	r3,340
    5088:	18801236 	bltu	r3,r2,50d4 <_malloc_r+0x6f8>
    508c:	8804d3fa 	srli	r2,r17,15
    5090:	12001e04 	addi	r8,r2,120
    5094:	11c01dc4 	addi	r7,r2,119
    5098:	4209883a 	add	r4,r8,r8
    509c:	003e6d06 	br	4a54 <__alt_mem_onchip_memory2_0+0xf7004a54>
    50a0:	00c40004 	movi	r3,4096
    50a4:	003f4606 	br	4dc0 <__alt_mem_onchip_memory2_0+0xf7004dc0>
    50a8:	00800044 	movi	r2,1
    50ac:	a0800115 	stw	r2,4(r20)
    50b0:	003f7406 	br	4e84 <__alt_mem_onchip_memory2_0+0xf7004e84>
    50b4:	1805d0ba 	srai	r2,r3,2
    50b8:	01c00044 	movi	r7,1
    50bc:	30c00117 	ldw	r3,4(r6)
    50c0:	388e983a 	sll	r7,r7,r2
    50c4:	2805883a 	mov	r2,r5
    50c8:	38c6b03a 	or	r3,r7,r3
    50cc:	30c00115 	stw	r3,4(r6)
    50d0:	003f9b06 	br	4f40 <__alt_mem_onchip_memory2_0+0xf7004f40>
    50d4:	00c15504 	movi	r3,1364
    50d8:	18801a36 	bltu	r3,r2,5144 <_malloc_r+0x768>
    50dc:	8804d4ba 	srli	r2,r17,18
    50e0:	12001f44 	addi	r8,r2,125
    50e4:	11c01f04 	addi	r7,r2,124
    50e8:	4209883a 	add	r4,r8,r8
    50ec:	003e5906 	br	4a54 <__alt_mem_onchip_memory2_0+0xf7004a54>
    50f0:	ad400404 	addi	r21,r21,16
    50f4:	003f1706 	br	4d54 <__alt_mem_onchip_memory2_0+0xf7004d54>
    50f8:	00c01504 	movi	r3,84
    50fc:	18802336 	bltu	r3,r2,518c <_malloc_r+0x7b0>
    5100:	3804d33a 	srli	r2,r7,12
    5104:	11401bc4 	addi	r5,r2,111
    5108:	10c01b84 	addi	r3,r2,110
    510c:	294b883a 	add	r5,r5,r5
    5110:	003f7b06 	br	4f00 <__alt_mem_onchip_memory2_0+0xf7004f00>
    5114:	9c000217 	ldw	r16,8(r19)
    5118:	00bfff04 	movi	r2,-4
    511c:	80c00117 	ldw	r3,4(r16)
    5120:	1886703a 	and	r3,r3,r2
    5124:	003f5306 	br	4e74 <__alt_mem_onchip_memory2_0+0xf7004e74>
    5128:	3083ffcc 	andi	r2,r6,4095
    512c:	103f181e 	bne	r2,zero,4d90 <__alt_mem_onchip_memory2_0+0xf7004d90>
    5130:	99000217 	ldw	r4,8(r19)
    5134:	b545883a 	add	r2,r22,r21
    5138:	10800054 	ori	r2,r2,1
    513c:	20800115 	stw	r2,4(r4)
    5140:	003f3e06 	br	4e3c <__alt_mem_onchip_memory2_0+0xf7004e3c>
    5144:	01003f84 	movi	r4,254
    5148:	02001fc4 	movi	r8,127
    514c:	01c01f84 	movi	r7,126
    5150:	003e4006 	br	4a54 <__alt_mem_onchip_memory2_0+0xf7004a54>
    5154:	00800074 	movhi	r2,1
    5158:	1080d704 	addi	r2,r2,860
    515c:	15000015 	stw	r20,0(r2)
    5160:	003f1106 	br	4da8 <__alt_mem_onchip_memory2_0+0xf7004da8>
    5164:	00800044 	movi	r2,1
    5168:	002b883a 	mov	r21,zero
    516c:	003f1f06 	br	4dec <__alt_mem_onchip_memory2_0+0xf7004dec>
    5170:	81400204 	addi	r5,r16,8
    5174:	9009883a 	mov	r4,r18
    5178:	0007de00 	call	7de0 <_free_r>
    517c:	00800074 	movhi	r2,1
    5180:	1088c204 	addi	r2,r2,8968
    5184:	10c00017 	ldw	r3,0(r2)
    5188:	003f2c06 	br	4e3c <__alt_mem_onchip_memory2_0+0xf7004e3c>
    518c:	00c05504 	movi	r3,340
    5190:	18800536 	bltu	r3,r2,51a8 <_malloc_r+0x7cc>
    5194:	3804d3fa 	srli	r2,r7,15
    5198:	11401e04 	addi	r5,r2,120
    519c:	10c01dc4 	addi	r3,r2,119
    51a0:	294b883a 	add	r5,r5,r5
    51a4:	003f5606 	br	4f00 <__alt_mem_onchip_memory2_0+0xf7004f00>
    51a8:	00c15504 	movi	r3,1364
    51ac:	18800536 	bltu	r3,r2,51c4 <_malloc_r+0x7e8>
    51b0:	3804d4ba 	srli	r2,r7,18
    51b4:	11401f44 	addi	r5,r2,125
    51b8:	10c01f04 	addi	r3,r2,124
    51bc:	294b883a 	add	r5,r5,r5
    51c0:	003f4f06 	br	4f00 <__alt_mem_onchip_memory2_0+0xf7004f00>
    51c4:	01403f84 	movi	r5,254
    51c8:	00c01f84 	movi	r3,126
    51cc:	003f4c06 	br	4f00 <__alt_mem_onchip_memory2_0+0xf7004f00>
    51d0:	98800117 	ldw	r2,4(r19)
    51d4:	003fa006 	br	5058 <__alt_mem_onchip_memory2_0+0xf7005058>
    51d8:	8808d0fa 	srli	r4,r17,3
    51dc:	20800044 	addi	r2,r4,1
    51e0:	1085883a 	add	r2,r2,r2
    51e4:	003e9006 	br	4c28 <__alt_mem_onchip_memory2_0+0xf7004c28>

000051e8 <memchr>:
    51e8:	208000cc 	andi	r2,r4,3
    51ec:	280f883a 	mov	r7,r5
    51f0:	10003426 	beq	r2,zero,52c4 <memchr+0xdc>
    51f4:	30bfffc4 	addi	r2,r6,-1
    51f8:	30001a26 	beq	r6,zero,5264 <memchr+0x7c>
    51fc:	20c00003 	ldbu	r3,0(r4)
    5200:	29803fcc 	andi	r6,r5,255
    5204:	30c0051e 	bne	r6,r3,521c <memchr+0x34>
    5208:	00001806 	br	526c <memchr+0x84>
    520c:	10001526 	beq	r2,zero,5264 <memchr+0x7c>
    5210:	20c00003 	ldbu	r3,0(r4)
    5214:	10bfffc4 	addi	r2,r2,-1
    5218:	30c01426 	beq	r6,r3,526c <memchr+0x84>
    521c:	21000044 	addi	r4,r4,1
    5220:	20c000cc 	andi	r3,r4,3
    5224:	183ff91e 	bne	r3,zero,520c <__alt_mem_onchip_memory2_0+0xf700520c>
    5228:	020000c4 	movi	r8,3
    522c:	40801136 	bltu	r8,r2,5274 <memchr+0x8c>
    5230:	10000c26 	beq	r2,zero,5264 <memchr+0x7c>
    5234:	20c00003 	ldbu	r3,0(r4)
    5238:	29403fcc 	andi	r5,r5,255
    523c:	28c00b26 	beq	r5,r3,526c <memchr+0x84>
    5240:	20c00044 	addi	r3,r4,1
    5244:	39803fcc 	andi	r6,r7,255
    5248:	2089883a 	add	r4,r4,r2
    524c:	00000306 	br	525c <memchr+0x74>
    5250:	18c00044 	addi	r3,r3,1
    5254:	197fffc3 	ldbu	r5,-1(r3)
    5258:	31400526 	beq	r6,r5,5270 <memchr+0x88>
    525c:	1805883a 	mov	r2,r3
    5260:	20fffb1e 	bne	r4,r3,5250 <__alt_mem_onchip_memory2_0+0xf7005250>
    5264:	0005883a 	mov	r2,zero
    5268:	f800283a 	ret
    526c:	2005883a 	mov	r2,r4
    5270:	f800283a 	ret
    5274:	28c03fcc 	andi	r3,r5,255
    5278:	1812923a 	slli	r9,r3,8
    527c:	02ffbff4 	movhi	r11,65279
    5280:	02a02074 	movhi	r10,32897
    5284:	48d2b03a 	or	r9,r9,r3
    5288:	4806943a 	slli	r3,r9,16
    528c:	5affbfc4 	addi	r11,r11,-257
    5290:	52a02004 	addi	r10,r10,-32640
    5294:	48d2b03a 	or	r9,r9,r3
    5298:	20c00017 	ldw	r3,0(r4)
    529c:	48c6f03a 	xor	r3,r9,r3
    52a0:	1acd883a 	add	r6,r3,r11
    52a4:	00c6303a 	nor	r3,zero,r3
    52a8:	30c6703a 	and	r3,r6,r3
    52ac:	1a86703a 	and	r3,r3,r10
    52b0:	183fe01e 	bne	r3,zero,5234 <__alt_mem_onchip_memory2_0+0xf7005234>
    52b4:	10bfff04 	addi	r2,r2,-4
    52b8:	21000104 	addi	r4,r4,4
    52bc:	40bff636 	bltu	r8,r2,5298 <__alt_mem_onchip_memory2_0+0xf7005298>
    52c0:	003fdb06 	br	5230 <__alt_mem_onchip_memory2_0+0xf7005230>
    52c4:	3005883a 	mov	r2,r6
    52c8:	003fd706 	br	5228 <__alt_mem_onchip_memory2_0+0xf7005228>

000052cc <memcpy>:
    52cc:	defffd04 	addi	sp,sp,-12
    52d0:	dfc00215 	stw	ra,8(sp)
    52d4:	dc400115 	stw	r17,4(sp)
    52d8:	dc000015 	stw	r16,0(sp)
    52dc:	00c003c4 	movi	r3,15
    52e0:	2005883a 	mov	r2,r4
    52e4:	1980452e 	bgeu	r3,r6,53fc <memcpy+0x130>
    52e8:	2906b03a 	or	r3,r5,r4
    52ec:	18c000cc 	andi	r3,r3,3
    52f0:	1800441e 	bne	r3,zero,5404 <memcpy+0x138>
    52f4:	347ffc04 	addi	r17,r6,-16
    52f8:	8822d13a 	srli	r17,r17,4
    52fc:	28c00104 	addi	r3,r5,4
    5300:	23400104 	addi	r13,r4,4
    5304:	8820913a 	slli	r16,r17,4
    5308:	2b000204 	addi	r12,r5,8
    530c:	22c00204 	addi	r11,r4,8
    5310:	84000504 	addi	r16,r16,20
    5314:	2a800304 	addi	r10,r5,12
    5318:	22400304 	addi	r9,r4,12
    531c:	2c21883a 	add	r16,r5,r16
    5320:	2811883a 	mov	r8,r5
    5324:	200f883a 	mov	r7,r4
    5328:	41000017 	ldw	r4,0(r8)
    532c:	1fc00017 	ldw	ra,0(r3)
    5330:	63c00017 	ldw	r15,0(r12)
    5334:	39000015 	stw	r4,0(r7)
    5338:	53800017 	ldw	r14,0(r10)
    533c:	6fc00015 	stw	ra,0(r13)
    5340:	5bc00015 	stw	r15,0(r11)
    5344:	4b800015 	stw	r14,0(r9)
    5348:	18c00404 	addi	r3,r3,16
    534c:	39c00404 	addi	r7,r7,16
    5350:	42000404 	addi	r8,r8,16
    5354:	6b400404 	addi	r13,r13,16
    5358:	63000404 	addi	r12,r12,16
    535c:	5ac00404 	addi	r11,r11,16
    5360:	52800404 	addi	r10,r10,16
    5364:	4a400404 	addi	r9,r9,16
    5368:	1c3fef1e 	bne	r3,r16,5328 <__alt_mem_onchip_memory2_0+0xf7005328>
    536c:	89c00044 	addi	r7,r17,1
    5370:	380e913a 	slli	r7,r7,4
    5374:	310003cc 	andi	r4,r6,15
    5378:	02c000c4 	movi	r11,3
    537c:	11c7883a 	add	r3,r2,r7
    5380:	29cb883a 	add	r5,r5,r7
    5384:	5900212e 	bgeu	r11,r4,540c <memcpy+0x140>
    5388:	1813883a 	mov	r9,r3
    538c:	2811883a 	mov	r8,r5
    5390:	200f883a 	mov	r7,r4
    5394:	42800017 	ldw	r10,0(r8)
    5398:	4a400104 	addi	r9,r9,4
    539c:	39ffff04 	addi	r7,r7,-4
    53a0:	4abfff15 	stw	r10,-4(r9)
    53a4:	42000104 	addi	r8,r8,4
    53a8:	59fffa36 	bltu	r11,r7,5394 <__alt_mem_onchip_memory2_0+0xf7005394>
    53ac:	213fff04 	addi	r4,r4,-4
    53b0:	2008d0ba 	srli	r4,r4,2
    53b4:	318000cc 	andi	r6,r6,3
    53b8:	21000044 	addi	r4,r4,1
    53bc:	2109883a 	add	r4,r4,r4
    53c0:	2109883a 	add	r4,r4,r4
    53c4:	1907883a 	add	r3,r3,r4
    53c8:	290b883a 	add	r5,r5,r4
    53cc:	30000626 	beq	r6,zero,53e8 <memcpy+0x11c>
    53d0:	198d883a 	add	r6,r3,r6
    53d4:	29c00003 	ldbu	r7,0(r5)
    53d8:	18c00044 	addi	r3,r3,1
    53dc:	29400044 	addi	r5,r5,1
    53e0:	19ffffc5 	stb	r7,-1(r3)
    53e4:	19bffb1e 	bne	r3,r6,53d4 <__alt_mem_onchip_memory2_0+0xf70053d4>
    53e8:	dfc00217 	ldw	ra,8(sp)
    53ec:	dc400117 	ldw	r17,4(sp)
    53f0:	dc000017 	ldw	r16,0(sp)
    53f4:	dec00304 	addi	sp,sp,12
    53f8:	f800283a 	ret
    53fc:	2007883a 	mov	r3,r4
    5400:	003ff206 	br	53cc <__alt_mem_onchip_memory2_0+0xf70053cc>
    5404:	2007883a 	mov	r3,r4
    5408:	003ff106 	br	53d0 <__alt_mem_onchip_memory2_0+0xf70053d0>
    540c:	200d883a 	mov	r6,r4
    5410:	003fee06 	br	53cc <__alt_mem_onchip_memory2_0+0xf70053cc>

00005414 <_Balloc>:
    5414:	20801317 	ldw	r2,76(r4)
    5418:	defffc04 	addi	sp,sp,-16
    541c:	dc400115 	stw	r17,4(sp)
    5420:	dc000015 	stw	r16,0(sp)
    5424:	dfc00315 	stw	ra,12(sp)
    5428:	dc800215 	stw	r18,8(sp)
    542c:	2023883a 	mov	r17,r4
    5430:	2821883a 	mov	r16,r5
    5434:	10000f26 	beq	r2,zero,5474 <_Balloc+0x60>
    5438:	8407883a 	add	r3,r16,r16
    543c:	18c7883a 	add	r3,r3,r3
    5440:	10c7883a 	add	r3,r2,r3
    5444:	18800017 	ldw	r2,0(r3)
    5448:	10001126 	beq	r2,zero,5490 <_Balloc+0x7c>
    544c:	11000017 	ldw	r4,0(r2)
    5450:	19000015 	stw	r4,0(r3)
    5454:	10000415 	stw	zero,16(r2)
    5458:	10000315 	stw	zero,12(r2)
    545c:	dfc00317 	ldw	ra,12(sp)
    5460:	dc800217 	ldw	r18,8(sp)
    5464:	dc400117 	ldw	r17,4(sp)
    5468:	dc000017 	ldw	r16,0(sp)
    546c:	dec00404 	addi	sp,sp,16
    5470:	f800283a 	ret
    5474:	01800844 	movi	r6,33
    5478:	01400104 	movi	r5,4
    547c:	0007be00 	call	7be0 <_calloc_r>
    5480:	88801315 	stw	r2,76(r17)
    5484:	103fec1e 	bne	r2,zero,5438 <__alt_mem_onchip_memory2_0+0xf7005438>
    5488:	0005883a 	mov	r2,zero
    548c:	003ff306 	br	545c <__alt_mem_onchip_memory2_0+0xf700545c>
    5490:	01400044 	movi	r5,1
    5494:	2c24983a 	sll	r18,r5,r16
    5498:	8809883a 	mov	r4,r17
    549c:	91800144 	addi	r6,r18,5
    54a0:	318d883a 	add	r6,r6,r6
    54a4:	318d883a 	add	r6,r6,r6
    54a8:	0007be00 	call	7be0 <_calloc_r>
    54ac:	103ff626 	beq	r2,zero,5488 <__alt_mem_onchip_memory2_0+0xf7005488>
    54b0:	14000115 	stw	r16,4(r2)
    54b4:	14800215 	stw	r18,8(r2)
    54b8:	003fe606 	br	5454 <__alt_mem_onchip_memory2_0+0xf7005454>

000054bc <_Bfree>:
    54bc:	28000826 	beq	r5,zero,54e0 <_Bfree+0x24>
    54c0:	28c00117 	ldw	r3,4(r5)
    54c4:	20801317 	ldw	r2,76(r4)
    54c8:	18c7883a 	add	r3,r3,r3
    54cc:	18c7883a 	add	r3,r3,r3
    54d0:	10c5883a 	add	r2,r2,r3
    54d4:	10c00017 	ldw	r3,0(r2)
    54d8:	28c00015 	stw	r3,0(r5)
    54dc:	11400015 	stw	r5,0(r2)
    54e0:	f800283a 	ret

000054e4 <__multadd>:
    54e4:	defff704 	addi	sp,sp,-36
    54e8:	dc800215 	stw	r18,8(sp)
    54ec:	2c800417 	ldw	r18,16(r5)
    54f0:	dd800615 	stw	r22,24(sp)
    54f4:	dd400515 	stw	r21,20(sp)
    54f8:	dd000415 	stw	r20,16(sp)
    54fc:	dcc00315 	stw	r19,12(sp)
    5500:	dc400115 	stw	r17,4(sp)
    5504:	dc000015 	stw	r16,0(sp)
    5508:	dfc00815 	stw	ra,32(sp)
    550c:	ddc00715 	stw	r23,28(sp)
    5510:	2827883a 	mov	r19,r5
    5514:	2029883a 	mov	r20,r4
    5518:	3023883a 	mov	r17,r6
    551c:	3821883a 	mov	r16,r7
    5520:	2d400504 	addi	r21,r5,20
    5524:	002d883a 	mov	r22,zero
    5528:	adc00017 	ldw	r23,0(r21)
    552c:	880b883a 	mov	r5,r17
    5530:	ad400104 	addi	r21,r21,4
    5534:	b93fffcc 	andi	r4,r23,65535
    5538:	0000b940 	call	b94 <__mulsi3>
    553c:	b808d43a 	srli	r4,r23,16
    5540:	880b883a 	mov	r5,r17
    5544:	1421883a 	add	r16,r2,r16
    5548:	0000b940 	call	b94 <__mulsi3>
    554c:	800ed43a 	srli	r7,r16,16
    5550:	80ffffcc 	andi	r3,r16,65535
    5554:	b5800044 	addi	r22,r22,1
    5558:	11c5883a 	add	r2,r2,r7
    555c:	100e943a 	slli	r7,r2,16
    5560:	1020d43a 	srli	r16,r2,16
    5564:	38c7883a 	add	r3,r7,r3
    5568:	a8ffff15 	stw	r3,-4(r21)
    556c:	b4bfee16 	blt	r22,r18,5528 <__alt_mem_onchip_memory2_0+0xf7005528>
    5570:	80000926 	beq	r16,zero,5598 <__multadd+0xb4>
    5574:	98800217 	ldw	r2,8(r19)
    5578:	9080130e 	bge	r18,r2,55c8 <__multadd+0xe4>
    557c:	90800144 	addi	r2,r18,5
    5580:	1085883a 	add	r2,r2,r2
    5584:	1085883a 	add	r2,r2,r2
    5588:	9885883a 	add	r2,r19,r2
    558c:	14000015 	stw	r16,0(r2)
    5590:	94800044 	addi	r18,r18,1
    5594:	9c800415 	stw	r18,16(r19)
    5598:	9805883a 	mov	r2,r19
    559c:	dfc00817 	ldw	ra,32(sp)
    55a0:	ddc00717 	ldw	r23,28(sp)
    55a4:	dd800617 	ldw	r22,24(sp)
    55a8:	dd400517 	ldw	r21,20(sp)
    55ac:	dd000417 	ldw	r20,16(sp)
    55b0:	dcc00317 	ldw	r19,12(sp)
    55b4:	dc800217 	ldw	r18,8(sp)
    55b8:	dc400117 	ldw	r17,4(sp)
    55bc:	dc000017 	ldw	r16,0(sp)
    55c0:	dec00904 	addi	sp,sp,36
    55c4:	f800283a 	ret
    55c8:	99400117 	ldw	r5,4(r19)
    55cc:	a009883a 	mov	r4,r20
    55d0:	29400044 	addi	r5,r5,1
    55d4:	00054140 	call	5414 <_Balloc>
    55d8:	99800417 	ldw	r6,16(r19)
    55dc:	99400304 	addi	r5,r19,12
    55e0:	11000304 	addi	r4,r2,12
    55e4:	31800084 	addi	r6,r6,2
    55e8:	318d883a 	add	r6,r6,r6
    55ec:	318d883a 	add	r6,r6,r6
    55f0:	1023883a 	mov	r17,r2
    55f4:	00052cc0 	call	52cc <memcpy>
    55f8:	98000a26 	beq	r19,zero,5624 <__multadd+0x140>
    55fc:	98c00117 	ldw	r3,4(r19)
    5600:	a0801317 	ldw	r2,76(r20)
    5604:	18c7883a 	add	r3,r3,r3
    5608:	18c7883a 	add	r3,r3,r3
    560c:	10c5883a 	add	r2,r2,r3
    5610:	10c00017 	ldw	r3,0(r2)
    5614:	98c00015 	stw	r3,0(r19)
    5618:	14c00015 	stw	r19,0(r2)
    561c:	8827883a 	mov	r19,r17
    5620:	003fd606 	br	557c <__alt_mem_onchip_memory2_0+0xf700557c>
    5624:	8827883a 	mov	r19,r17
    5628:	003fd406 	br	557c <__alt_mem_onchip_memory2_0+0xf700557c>

0000562c <__s2b>:
    562c:	defff904 	addi	sp,sp,-28
    5630:	dc400115 	stw	r17,4(sp)
    5634:	dc000015 	stw	r16,0(sp)
    5638:	2023883a 	mov	r17,r4
    563c:	2821883a 	mov	r16,r5
    5640:	39000204 	addi	r4,r7,8
    5644:	01400244 	movi	r5,9
    5648:	dcc00315 	stw	r19,12(sp)
    564c:	dc800215 	stw	r18,8(sp)
    5650:	dfc00615 	stw	ra,24(sp)
    5654:	dd400515 	stw	r21,20(sp)
    5658:	dd000415 	stw	r20,16(sp)
    565c:	3825883a 	mov	r18,r7
    5660:	3027883a 	mov	r19,r6
    5664:	00009e00 	call	9e0 <__divsi3>
    5668:	00c00044 	movi	r3,1
    566c:	000b883a 	mov	r5,zero
    5670:	1880030e 	bge	r3,r2,5680 <__s2b+0x54>
    5674:	18c7883a 	add	r3,r3,r3
    5678:	29400044 	addi	r5,r5,1
    567c:	18bffd16 	blt	r3,r2,5674 <__alt_mem_onchip_memory2_0+0xf7005674>
    5680:	8809883a 	mov	r4,r17
    5684:	00054140 	call	5414 <_Balloc>
    5688:	d8c00717 	ldw	r3,28(sp)
    568c:	10c00515 	stw	r3,20(r2)
    5690:	00c00044 	movi	r3,1
    5694:	10c00415 	stw	r3,16(r2)
    5698:	00c00244 	movi	r3,9
    569c:	1cc0210e 	bge	r3,r19,5724 <__s2b+0xf8>
    56a0:	80eb883a 	add	r21,r16,r3
    56a4:	a829883a 	mov	r20,r21
    56a8:	84e1883a 	add	r16,r16,r19
    56ac:	a1c00007 	ldb	r7,0(r20)
    56b0:	01800284 	movi	r6,10
    56b4:	a5000044 	addi	r20,r20,1
    56b8:	100b883a 	mov	r5,r2
    56bc:	39fff404 	addi	r7,r7,-48
    56c0:	8809883a 	mov	r4,r17
    56c4:	00054e40 	call	54e4 <__multadd>
    56c8:	a43ff81e 	bne	r20,r16,56ac <__alt_mem_onchip_memory2_0+0xf70056ac>
    56cc:	ace1883a 	add	r16,r21,r19
    56d0:	843ffe04 	addi	r16,r16,-8
    56d4:	9c800a0e 	bge	r19,r18,5700 <__s2b+0xd4>
    56d8:	94e5c83a 	sub	r18,r18,r19
    56dc:	84a5883a 	add	r18,r16,r18
    56e0:	81c00007 	ldb	r7,0(r16)
    56e4:	01800284 	movi	r6,10
    56e8:	84000044 	addi	r16,r16,1
    56ec:	100b883a 	mov	r5,r2
    56f0:	39fff404 	addi	r7,r7,-48
    56f4:	8809883a 	mov	r4,r17
    56f8:	00054e40 	call	54e4 <__multadd>
    56fc:	84bff81e 	bne	r16,r18,56e0 <__alt_mem_onchip_memory2_0+0xf70056e0>
    5700:	dfc00617 	ldw	ra,24(sp)
    5704:	dd400517 	ldw	r21,20(sp)
    5708:	dd000417 	ldw	r20,16(sp)
    570c:	dcc00317 	ldw	r19,12(sp)
    5710:	dc800217 	ldw	r18,8(sp)
    5714:	dc400117 	ldw	r17,4(sp)
    5718:	dc000017 	ldw	r16,0(sp)
    571c:	dec00704 	addi	sp,sp,28
    5720:	f800283a 	ret
    5724:	84000284 	addi	r16,r16,10
    5728:	1827883a 	mov	r19,r3
    572c:	003fe906 	br	56d4 <__alt_mem_onchip_memory2_0+0xf70056d4>

00005730 <__hi0bits>:
    5730:	20bfffec 	andhi	r2,r4,65535
    5734:	1000141e 	bne	r2,zero,5788 <__hi0bits+0x58>
    5738:	2008943a 	slli	r4,r4,16
    573c:	00800404 	movi	r2,16
    5740:	20ffc02c 	andhi	r3,r4,65280
    5744:	1800021e 	bne	r3,zero,5750 <__hi0bits+0x20>
    5748:	2008923a 	slli	r4,r4,8
    574c:	10800204 	addi	r2,r2,8
    5750:	20fc002c 	andhi	r3,r4,61440
    5754:	1800021e 	bne	r3,zero,5760 <__hi0bits+0x30>
    5758:	2008913a 	slli	r4,r4,4
    575c:	10800104 	addi	r2,r2,4
    5760:	20f0002c 	andhi	r3,r4,49152
    5764:	1800031e 	bne	r3,zero,5774 <__hi0bits+0x44>
    5768:	2109883a 	add	r4,r4,r4
    576c:	10800084 	addi	r2,r2,2
    5770:	2109883a 	add	r4,r4,r4
    5774:	20000316 	blt	r4,zero,5784 <__hi0bits+0x54>
    5778:	2110002c 	andhi	r4,r4,16384
    577c:	2000041e 	bne	r4,zero,5790 <__hi0bits+0x60>
    5780:	00800804 	movi	r2,32
    5784:	f800283a 	ret
    5788:	0005883a 	mov	r2,zero
    578c:	003fec06 	br	5740 <__alt_mem_onchip_memory2_0+0xf7005740>
    5790:	10800044 	addi	r2,r2,1
    5794:	f800283a 	ret

00005798 <__lo0bits>:
    5798:	20c00017 	ldw	r3,0(r4)
    579c:	188001cc 	andi	r2,r3,7
    57a0:	10000826 	beq	r2,zero,57c4 <__lo0bits+0x2c>
    57a4:	1880004c 	andi	r2,r3,1
    57a8:	1000211e 	bne	r2,zero,5830 <__lo0bits+0x98>
    57ac:	1880008c 	andi	r2,r3,2
    57b0:	1000211e 	bne	r2,zero,5838 <__lo0bits+0xa0>
    57b4:	1806d0ba 	srli	r3,r3,2
    57b8:	00800084 	movi	r2,2
    57bc:	20c00015 	stw	r3,0(r4)
    57c0:	f800283a 	ret
    57c4:	18bfffcc 	andi	r2,r3,65535
    57c8:	10001326 	beq	r2,zero,5818 <__lo0bits+0x80>
    57cc:	0005883a 	mov	r2,zero
    57d0:	19403fcc 	andi	r5,r3,255
    57d4:	2800021e 	bne	r5,zero,57e0 <__lo0bits+0x48>
    57d8:	1806d23a 	srli	r3,r3,8
    57dc:	10800204 	addi	r2,r2,8
    57e0:	194003cc 	andi	r5,r3,15
    57e4:	2800021e 	bne	r5,zero,57f0 <__lo0bits+0x58>
    57e8:	1806d13a 	srli	r3,r3,4
    57ec:	10800104 	addi	r2,r2,4
    57f0:	194000cc 	andi	r5,r3,3
    57f4:	2800021e 	bne	r5,zero,5800 <__lo0bits+0x68>
    57f8:	1806d0ba 	srli	r3,r3,2
    57fc:	10800084 	addi	r2,r2,2
    5800:	1940004c 	andi	r5,r3,1
    5804:	2800081e 	bne	r5,zero,5828 <__lo0bits+0x90>
    5808:	1806d07a 	srli	r3,r3,1
    580c:	1800051e 	bne	r3,zero,5824 <__lo0bits+0x8c>
    5810:	00800804 	movi	r2,32
    5814:	f800283a 	ret
    5818:	1806d43a 	srli	r3,r3,16
    581c:	00800404 	movi	r2,16
    5820:	003feb06 	br	57d0 <__alt_mem_onchip_memory2_0+0xf70057d0>
    5824:	10800044 	addi	r2,r2,1
    5828:	20c00015 	stw	r3,0(r4)
    582c:	f800283a 	ret
    5830:	0005883a 	mov	r2,zero
    5834:	f800283a 	ret
    5838:	1806d07a 	srli	r3,r3,1
    583c:	00800044 	movi	r2,1
    5840:	20c00015 	stw	r3,0(r4)
    5844:	f800283a 	ret

00005848 <__i2b>:
    5848:	defffd04 	addi	sp,sp,-12
    584c:	dc000015 	stw	r16,0(sp)
    5850:	04000044 	movi	r16,1
    5854:	dc400115 	stw	r17,4(sp)
    5858:	2823883a 	mov	r17,r5
    585c:	800b883a 	mov	r5,r16
    5860:	dfc00215 	stw	ra,8(sp)
    5864:	00054140 	call	5414 <_Balloc>
    5868:	14400515 	stw	r17,20(r2)
    586c:	14000415 	stw	r16,16(r2)
    5870:	dfc00217 	ldw	ra,8(sp)
    5874:	dc400117 	ldw	r17,4(sp)
    5878:	dc000017 	ldw	r16,0(sp)
    587c:	dec00304 	addi	sp,sp,12
    5880:	f800283a 	ret

00005884 <__multiply>:
    5884:	deffef04 	addi	sp,sp,-68
    5888:	dc400815 	stw	r17,32(sp)
    588c:	dc000715 	stw	r16,28(sp)
    5890:	34400417 	ldw	r17,16(r6)
    5894:	2c000417 	ldw	r16,16(r5)
    5898:	dd800d15 	stw	r22,52(sp)
    589c:	dc800915 	stw	r18,36(sp)
    58a0:	dfc01015 	stw	ra,64(sp)
    58a4:	df000f15 	stw	fp,60(sp)
    58a8:	ddc00e15 	stw	r23,56(sp)
    58ac:	dd400c15 	stw	r21,48(sp)
    58b0:	dd000b15 	stw	r20,44(sp)
    58b4:	dcc00a15 	stw	r19,40(sp)
    58b8:	2825883a 	mov	r18,r5
    58bc:	302d883a 	mov	r22,r6
    58c0:	8440050e 	bge	r16,r17,58d8 <__multiply+0x54>
    58c4:	8007883a 	mov	r3,r16
    58c8:	3025883a 	mov	r18,r6
    58cc:	8821883a 	mov	r16,r17
    58d0:	282d883a 	mov	r22,r5
    58d4:	1823883a 	mov	r17,r3
    58d8:	90800217 	ldw	r2,8(r18)
    58dc:	8447883a 	add	r3,r16,r17
    58e0:	d8c00215 	stw	r3,8(sp)
    58e4:	91400117 	ldw	r5,4(r18)
    58e8:	10c0010e 	bge	r2,r3,58f0 <__multiply+0x6c>
    58ec:	29400044 	addi	r5,r5,1
    58f0:	00054140 	call	5414 <_Balloc>
    58f4:	d8c00217 	ldw	r3,8(sp)
    58f8:	d8800615 	stw	r2,24(sp)
    58fc:	18eb883a 	add	r21,r3,r3
    5900:	ad6b883a 	add	r21,r21,r21
    5904:	10c00504 	addi	r3,r2,20
    5908:	1d6b883a 	add	r21,r3,r21
    590c:	d8c00115 	stw	r3,4(sp)
    5910:	dd400315 	stw	r21,12(sp)
    5914:	1805883a 	mov	r2,r3
    5918:	1d40042e 	bgeu	r3,r21,592c <__multiply+0xa8>
    591c:	d8c00317 	ldw	r3,12(sp)
    5920:	10000015 	stw	zero,0(r2)
    5924:	10800104 	addi	r2,r2,4
    5928:	10fffc36 	bltu	r2,r3,591c <__alt_mem_onchip_memory2_0+0xf700591c>
    592c:	8c63883a 	add	r17,r17,r17
    5930:	b5800504 	addi	r22,r22,20
    5934:	8c63883a 	add	r17,r17,r17
    5938:	94800504 	addi	r18,r18,20
    593c:	8421883a 	add	r16,r16,r16
    5940:	b463883a 	add	r17,r22,r17
    5944:	8421883a 	add	r16,r16,r16
    5948:	dd800015 	stw	r22,0(sp)
    594c:	dc800415 	stw	r18,16(sp)
    5950:	dc400515 	stw	r17,20(sp)
    5954:	9429883a 	add	r20,r18,r16
    5958:	b4404f2e 	bgeu	r22,r17,5a98 <__multiply+0x214>
    595c:	d8c00017 	ldw	r3,0(sp)
    5960:	1c800017 	ldw	r18,0(r3)
    5964:	947fffcc 	andi	r17,r18,65535
    5968:	88001e26 	beq	r17,zero,59e4 <__multiply+0x160>
    596c:	dd800117 	ldw	r22,4(sp)
    5970:	dd400417 	ldw	r21,16(sp)
    5974:	0027883a 	mov	r19,zero
    5978:	ac800017 	ldw	r18,0(r21)
    597c:	b4000017 	ldw	r16,0(r22)
    5980:	880b883a 	mov	r5,r17
    5984:	913fffcc 	andi	r4,r18,65535
    5988:	0000b940 	call	b94 <__mulsi3>
    598c:	9008d43a 	srli	r4,r18,16
    5990:	84bfffcc 	andi	r18,r16,65535
    5994:	1485883a 	add	r2,r2,r18
    5998:	14e5883a 	add	r18,r2,r19
    599c:	8020d43a 	srli	r16,r16,16
    59a0:	9026d43a 	srli	r19,r18,16
    59a4:	880b883a 	mov	r5,r17
    59a8:	0000b940 	call	b94 <__mulsi3>
    59ac:	1405883a 	add	r2,r2,r16
    59b0:	14e1883a 	add	r16,r2,r19
    59b4:	90ffffcc 	andi	r3,r18,65535
    59b8:	8024943a 	slli	r18,r16,16
    59bc:	ad400104 	addi	r21,r21,4
    59c0:	b005883a 	mov	r2,r22
    59c4:	90c6b03a 	or	r3,r18,r3
    59c8:	b0c00015 	stw	r3,0(r22)
    59cc:	8026d43a 	srli	r19,r16,16
    59d0:	b5800104 	addi	r22,r22,4
    59d4:	ad3fe836 	bltu	r21,r20,5978 <__alt_mem_onchip_memory2_0+0xf7005978>
    59d8:	d8c00017 	ldw	r3,0(sp)
    59dc:	14c00115 	stw	r19,4(r2)
    59e0:	1c800017 	ldw	r18,0(r3)
    59e4:	9024d43a 	srli	r18,r18,16
    59e8:	90002226 	beq	r18,zero,5a74 <__multiply+0x1f0>
    59ec:	d8c00117 	ldw	r3,4(sp)
    59f0:	dd800417 	ldw	r22,16(sp)
    59f4:	002f883a 	mov	r23,zero
    59f8:	1f000017 	ldw	fp,0(r3)
    59fc:	1823883a 	mov	r17,r3
    5a00:	182b883a 	mov	r21,r3
    5a04:	e021883a 	mov	r16,fp
    5a08:	00000106 	br	5a10 <__multiply+0x18c>
    5a0c:	982b883a 	mov	r21,r19
    5a10:	b100000b 	ldhu	r4,0(r22)
    5a14:	8020d43a 	srli	r16,r16,16
    5a18:	900b883a 	mov	r5,r18
    5a1c:	0000b940 	call	b94 <__mulsi3>
    5a20:	1405883a 	add	r2,r2,r16
    5a24:	15ef883a 	add	r23,r2,r23
    5a28:	b804943a 	slli	r2,r23,16
    5a2c:	e0ffffcc 	andi	r3,fp,65535
    5a30:	8c400104 	addi	r17,r17,4
    5a34:	10c6b03a 	or	r3,r2,r3
    5a38:	88ffff15 	stw	r3,-4(r17)
    5a3c:	b5800104 	addi	r22,r22,4
    5a40:	b13fff17 	ldw	r4,-4(r22)
    5a44:	acc00104 	addi	r19,r21,4
    5a48:	900b883a 	mov	r5,r18
    5a4c:	2008d43a 	srli	r4,r4,16
    5a50:	9c000017 	ldw	r16,0(r19)
    5a54:	0000b940 	call	b94 <__mulsi3>
    5a58:	b806d43a 	srli	r3,r23,16
    5a5c:	813fffcc 	andi	r4,r16,65535
    5a60:	1105883a 	add	r2,r2,r4
    5a64:	10f9883a 	add	fp,r2,r3
    5a68:	e02ed43a 	srli	r23,fp,16
    5a6c:	b53fe736 	bltu	r22,r20,5a0c <__alt_mem_onchip_memory2_0+0xf7005a0c>
    5a70:	af000115 	stw	fp,4(r21)
    5a74:	d8c00017 	ldw	r3,0(sp)
    5a78:	d9000517 	ldw	r4,20(sp)
    5a7c:	18c00104 	addi	r3,r3,4
    5a80:	d8c00015 	stw	r3,0(sp)
    5a84:	d8c00117 	ldw	r3,4(sp)
    5a88:	18c00104 	addi	r3,r3,4
    5a8c:	d8c00115 	stw	r3,4(sp)
    5a90:	d8c00017 	ldw	r3,0(sp)
    5a94:	193fb136 	bltu	r3,r4,595c <__alt_mem_onchip_memory2_0+0xf700595c>
    5a98:	d8c00217 	ldw	r3,8(sp)
    5a9c:	00c00c0e 	bge	zero,r3,5ad0 <__multiply+0x24c>
    5aa0:	d8c00317 	ldw	r3,12(sp)
    5aa4:	18bfff17 	ldw	r2,-4(r3)
    5aa8:	1d7fff04 	addi	r21,r3,-4
    5aac:	10000326 	beq	r2,zero,5abc <__multiply+0x238>
    5ab0:	00000706 	br	5ad0 <__multiply+0x24c>
    5ab4:	a8800017 	ldw	r2,0(r21)
    5ab8:	1000051e 	bne	r2,zero,5ad0 <__multiply+0x24c>
    5abc:	d8c00217 	ldw	r3,8(sp)
    5ac0:	ad7fff04 	addi	r21,r21,-4
    5ac4:	18ffffc4 	addi	r3,r3,-1
    5ac8:	d8c00215 	stw	r3,8(sp)
    5acc:	183ff91e 	bne	r3,zero,5ab4 <__alt_mem_onchip_memory2_0+0xf7005ab4>
    5ad0:	d8c00617 	ldw	r3,24(sp)
    5ad4:	d9000217 	ldw	r4,8(sp)
    5ad8:	1805883a 	mov	r2,r3
    5adc:	19000415 	stw	r4,16(r3)
    5ae0:	dfc01017 	ldw	ra,64(sp)
    5ae4:	df000f17 	ldw	fp,60(sp)
    5ae8:	ddc00e17 	ldw	r23,56(sp)
    5aec:	dd800d17 	ldw	r22,52(sp)
    5af0:	dd400c17 	ldw	r21,48(sp)
    5af4:	dd000b17 	ldw	r20,44(sp)
    5af8:	dcc00a17 	ldw	r19,40(sp)
    5afc:	dc800917 	ldw	r18,36(sp)
    5b00:	dc400817 	ldw	r17,32(sp)
    5b04:	dc000717 	ldw	r16,28(sp)
    5b08:	dec01104 	addi	sp,sp,68
    5b0c:	f800283a 	ret

00005b10 <__pow5mult>:
    5b10:	defffa04 	addi	sp,sp,-24
    5b14:	dcc00315 	stw	r19,12(sp)
    5b18:	dc000015 	stw	r16,0(sp)
    5b1c:	dfc00515 	stw	ra,20(sp)
    5b20:	dd000415 	stw	r20,16(sp)
    5b24:	dc800215 	stw	r18,8(sp)
    5b28:	dc400115 	stw	r17,4(sp)
    5b2c:	308000cc 	andi	r2,r6,3
    5b30:	3021883a 	mov	r16,r6
    5b34:	2027883a 	mov	r19,r4
    5b38:	10002f1e 	bne	r2,zero,5bf8 <__pow5mult+0xe8>
    5b3c:	2825883a 	mov	r18,r5
    5b40:	8021d0ba 	srai	r16,r16,2
    5b44:	80001a26 	beq	r16,zero,5bb0 <__pow5mult+0xa0>
    5b48:	9c401217 	ldw	r17,72(r19)
    5b4c:	8800061e 	bne	r17,zero,5b68 <__pow5mult+0x58>
    5b50:	00003406 	br	5c24 <__pow5mult+0x114>
    5b54:	8021d07a 	srai	r16,r16,1
    5b58:	80001526 	beq	r16,zero,5bb0 <__pow5mult+0xa0>
    5b5c:	88800017 	ldw	r2,0(r17)
    5b60:	10001c26 	beq	r2,zero,5bd4 <__pow5mult+0xc4>
    5b64:	1023883a 	mov	r17,r2
    5b68:	8080004c 	andi	r2,r16,1
    5b6c:	103ff926 	beq	r2,zero,5b54 <__alt_mem_onchip_memory2_0+0xf7005b54>
    5b70:	880d883a 	mov	r6,r17
    5b74:	900b883a 	mov	r5,r18
    5b78:	9809883a 	mov	r4,r19
    5b7c:	00058840 	call	5884 <__multiply>
    5b80:	90001b26 	beq	r18,zero,5bf0 <__pow5mult+0xe0>
    5b84:	91000117 	ldw	r4,4(r18)
    5b88:	98c01317 	ldw	r3,76(r19)
    5b8c:	8021d07a 	srai	r16,r16,1
    5b90:	2109883a 	add	r4,r4,r4
    5b94:	2109883a 	add	r4,r4,r4
    5b98:	1907883a 	add	r3,r3,r4
    5b9c:	19000017 	ldw	r4,0(r3)
    5ba0:	91000015 	stw	r4,0(r18)
    5ba4:	1c800015 	stw	r18,0(r3)
    5ba8:	1025883a 	mov	r18,r2
    5bac:	803feb1e 	bne	r16,zero,5b5c <__alt_mem_onchip_memory2_0+0xf7005b5c>
    5bb0:	9005883a 	mov	r2,r18
    5bb4:	dfc00517 	ldw	ra,20(sp)
    5bb8:	dd000417 	ldw	r20,16(sp)
    5bbc:	dcc00317 	ldw	r19,12(sp)
    5bc0:	dc800217 	ldw	r18,8(sp)
    5bc4:	dc400117 	ldw	r17,4(sp)
    5bc8:	dc000017 	ldw	r16,0(sp)
    5bcc:	dec00604 	addi	sp,sp,24
    5bd0:	f800283a 	ret
    5bd4:	880d883a 	mov	r6,r17
    5bd8:	880b883a 	mov	r5,r17
    5bdc:	9809883a 	mov	r4,r19
    5be0:	00058840 	call	5884 <__multiply>
    5be4:	88800015 	stw	r2,0(r17)
    5be8:	10000015 	stw	zero,0(r2)
    5bec:	003fdd06 	br	5b64 <__alt_mem_onchip_memory2_0+0xf7005b64>
    5bf0:	1025883a 	mov	r18,r2
    5bf4:	003fd706 	br	5b54 <__alt_mem_onchip_memory2_0+0xf7005b54>
    5bf8:	10bfffc4 	addi	r2,r2,-1
    5bfc:	1085883a 	add	r2,r2,r2
    5c00:	00c00074 	movhi	r3,1
    5c04:	18f87404 	addi	r3,r3,-7728
    5c08:	1085883a 	add	r2,r2,r2
    5c0c:	1885883a 	add	r2,r3,r2
    5c10:	11800017 	ldw	r6,0(r2)
    5c14:	000f883a 	mov	r7,zero
    5c18:	00054e40 	call	54e4 <__multadd>
    5c1c:	1025883a 	mov	r18,r2
    5c20:	003fc706 	br	5b40 <__alt_mem_onchip_memory2_0+0xf7005b40>
    5c24:	05000044 	movi	r20,1
    5c28:	a00b883a 	mov	r5,r20
    5c2c:	9809883a 	mov	r4,r19
    5c30:	00054140 	call	5414 <_Balloc>
    5c34:	1023883a 	mov	r17,r2
    5c38:	00809c44 	movi	r2,625
    5c3c:	88800515 	stw	r2,20(r17)
    5c40:	8d000415 	stw	r20,16(r17)
    5c44:	9c401215 	stw	r17,72(r19)
    5c48:	88000015 	stw	zero,0(r17)
    5c4c:	003fc606 	br	5b68 <__alt_mem_onchip_memory2_0+0xf7005b68>

00005c50 <__lshift>:
    5c50:	defff904 	addi	sp,sp,-28
    5c54:	dd400515 	stw	r21,20(sp)
    5c58:	dcc00315 	stw	r19,12(sp)
    5c5c:	302bd17a 	srai	r21,r6,5
    5c60:	2cc00417 	ldw	r19,16(r5)
    5c64:	28800217 	ldw	r2,8(r5)
    5c68:	dd000415 	stw	r20,16(sp)
    5c6c:	ace7883a 	add	r19,r21,r19
    5c70:	dc800215 	stw	r18,8(sp)
    5c74:	dc400115 	stw	r17,4(sp)
    5c78:	dc000015 	stw	r16,0(sp)
    5c7c:	dfc00615 	stw	ra,24(sp)
    5c80:	9c000044 	addi	r16,r19,1
    5c84:	2823883a 	mov	r17,r5
    5c88:	3029883a 	mov	r20,r6
    5c8c:	2025883a 	mov	r18,r4
    5c90:	29400117 	ldw	r5,4(r5)
    5c94:	1400030e 	bge	r2,r16,5ca4 <__lshift+0x54>
    5c98:	1085883a 	add	r2,r2,r2
    5c9c:	29400044 	addi	r5,r5,1
    5ca0:	143ffd16 	blt	r2,r16,5c98 <__alt_mem_onchip_memory2_0+0xf7005c98>
    5ca4:	9009883a 	mov	r4,r18
    5ca8:	00054140 	call	5414 <_Balloc>
    5cac:	10c00504 	addi	r3,r2,20
    5cb0:	0540070e 	bge	zero,r21,5cd0 <__lshift+0x80>
    5cb4:	ad6b883a 	add	r21,r21,r21
    5cb8:	ad6b883a 	add	r21,r21,r21
    5cbc:	1809883a 	mov	r4,r3
    5cc0:	1d47883a 	add	r3,r3,r21
    5cc4:	20000015 	stw	zero,0(r4)
    5cc8:	21000104 	addi	r4,r4,4
    5ccc:	193ffd1e 	bne	r3,r4,5cc4 <__alt_mem_onchip_memory2_0+0xf7005cc4>
    5cd0:	8a000417 	ldw	r8,16(r17)
    5cd4:	89000504 	addi	r4,r17,20
    5cd8:	a18007cc 	andi	r6,r20,31
    5cdc:	4211883a 	add	r8,r8,r8
    5ce0:	4211883a 	add	r8,r8,r8
    5ce4:	2211883a 	add	r8,r4,r8
    5ce8:	30002326 	beq	r6,zero,5d78 <__lshift+0x128>
    5cec:	02400804 	movi	r9,32
    5cf0:	4993c83a 	sub	r9,r9,r6
    5cf4:	000b883a 	mov	r5,zero
    5cf8:	21c00017 	ldw	r7,0(r4)
    5cfc:	1815883a 	mov	r10,r3
    5d00:	18c00104 	addi	r3,r3,4
    5d04:	398e983a 	sll	r7,r7,r6
    5d08:	21000104 	addi	r4,r4,4
    5d0c:	394ab03a 	or	r5,r7,r5
    5d10:	197fff15 	stw	r5,-4(r3)
    5d14:	217fff17 	ldw	r5,-4(r4)
    5d18:	2a4ad83a 	srl	r5,r5,r9
    5d1c:	223ff636 	bltu	r4,r8,5cf8 <__alt_mem_onchip_memory2_0+0xf7005cf8>
    5d20:	51400115 	stw	r5,4(r10)
    5d24:	28001a1e 	bne	r5,zero,5d90 <__lshift+0x140>
    5d28:	843fffc4 	addi	r16,r16,-1
    5d2c:	14000415 	stw	r16,16(r2)
    5d30:	88000826 	beq	r17,zero,5d54 <__lshift+0x104>
    5d34:	89000117 	ldw	r4,4(r17)
    5d38:	90c01317 	ldw	r3,76(r18)
    5d3c:	2109883a 	add	r4,r4,r4
    5d40:	2109883a 	add	r4,r4,r4
    5d44:	1907883a 	add	r3,r3,r4
    5d48:	19000017 	ldw	r4,0(r3)
    5d4c:	89000015 	stw	r4,0(r17)
    5d50:	1c400015 	stw	r17,0(r3)
    5d54:	dfc00617 	ldw	ra,24(sp)
    5d58:	dd400517 	ldw	r21,20(sp)
    5d5c:	dd000417 	ldw	r20,16(sp)
    5d60:	dcc00317 	ldw	r19,12(sp)
    5d64:	dc800217 	ldw	r18,8(sp)
    5d68:	dc400117 	ldw	r17,4(sp)
    5d6c:	dc000017 	ldw	r16,0(sp)
    5d70:	dec00704 	addi	sp,sp,28
    5d74:	f800283a 	ret
    5d78:	21400017 	ldw	r5,0(r4)
    5d7c:	18c00104 	addi	r3,r3,4
    5d80:	21000104 	addi	r4,r4,4
    5d84:	197fff15 	stw	r5,-4(r3)
    5d88:	223ffb36 	bltu	r4,r8,5d78 <__alt_mem_onchip_memory2_0+0xf7005d78>
    5d8c:	003fe606 	br	5d28 <__alt_mem_onchip_memory2_0+0xf7005d28>
    5d90:	9c000084 	addi	r16,r19,2
    5d94:	003fe406 	br	5d28 <__alt_mem_onchip_memory2_0+0xf7005d28>

00005d98 <__mcmp>:
    5d98:	20800417 	ldw	r2,16(r4)
    5d9c:	28c00417 	ldw	r3,16(r5)
    5da0:	10c5c83a 	sub	r2,r2,r3
    5da4:	1000111e 	bne	r2,zero,5dec <__mcmp+0x54>
    5da8:	18c7883a 	add	r3,r3,r3
    5dac:	18c7883a 	add	r3,r3,r3
    5db0:	21000504 	addi	r4,r4,20
    5db4:	29400504 	addi	r5,r5,20
    5db8:	20c5883a 	add	r2,r4,r3
    5dbc:	28cb883a 	add	r5,r5,r3
    5dc0:	00000106 	br	5dc8 <__mcmp+0x30>
    5dc4:	20800a2e 	bgeu	r4,r2,5df0 <__mcmp+0x58>
    5dc8:	10bfff04 	addi	r2,r2,-4
    5dcc:	297fff04 	addi	r5,r5,-4
    5dd0:	11800017 	ldw	r6,0(r2)
    5dd4:	28c00017 	ldw	r3,0(r5)
    5dd8:	30fffa26 	beq	r6,r3,5dc4 <__alt_mem_onchip_memory2_0+0xf7005dc4>
    5ddc:	30c00236 	bltu	r6,r3,5de8 <__mcmp+0x50>
    5de0:	00800044 	movi	r2,1
    5de4:	f800283a 	ret
    5de8:	00bfffc4 	movi	r2,-1
    5dec:	f800283a 	ret
    5df0:	0005883a 	mov	r2,zero
    5df4:	f800283a 	ret

00005df8 <__mdiff>:
    5df8:	28c00417 	ldw	r3,16(r5)
    5dfc:	30800417 	ldw	r2,16(r6)
    5e00:	defffa04 	addi	sp,sp,-24
    5e04:	dcc00315 	stw	r19,12(sp)
    5e08:	dc800215 	stw	r18,8(sp)
    5e0c:	dfc00515 	stw	ra,20(sp)
    5e10:	dd000415 	stw	r20,16(sp)
    5e14:	dc400115 	stw	r17,4(sp)
    5e18:	dc000015 	stw	r16,0(sp)
    5e1c:	1887c83a 	sub	r3,r3,r2
    5e20:	2825883a 	mov	r18,r5
    5e24:	3027883a 	mov	r19,r6
    5e28:	1800141e 	bne	r3,zero,5e7c <__mdiff+0x84>
    5e2c:	1085883a 	add	r2,r2,r2
    5e30:	1085883a 	add	r2,r2,r2
    5e34:	2a000504 	addi	r8,r5,20
    5e38:	34000504 	addi	r16,r6,20
    5e3c:	4087883a 	add	r3,r8,r2
    5e40:	8085883a 	add	r2,r16,r2
    5e44:	00000106 	br	5e4c <__mdiff+0x54>
    5e48:	40c0592e 	bgeu	r8,r3,5fb0 <__mdiff+0x1b8>
    5e4c:	18ffff04 	addi	r3,r3,-4
    5e50:	10bfff04 	addi	r2,r2,-4
    5e54:	19c00017 	ldw	r7,0(r3)
    5e58:	11400017 	ldw	r5,0(r2)
    5e5c:	397ffa26 	beq	r7,r5,5e48 <__alt_mem_onchip_memory2_0+0xf7005e48>
    5e60:	3940592e 	bgeu	r7,r5,5fc8 <__mdiff+0x1d0>
    5e64:	9005883a 	mov	r2,r18
    5e68:	4023883a 	mov	r17,r8
    5e6c:	9825883a 	mov	r18,r19
    5e70:	05000044 	movi	r20,1
    5e74:	1027883a 	mov	r19,r2
    5e78:	00000406 	br	5e8c <__mdiff+0x94>
    5e7c:	18005616 	blt	r3,zero,5fd8 <__mdiff+0x1e0>
    5e80:	34400504 	addi	r17,r6,20
    5e84:	2c000504 	addi	r16,r5,20
    5e88:	0029883a 	mov	r20,zero
    5e8c:	91400117 	ldw	r5,4(r18)
    5e90:	00054140 	call	5414 <_Balloc>
    5e94:	92400417 	ldw	r9,16(r18)
    5e98:	9b000417 	ldw	r12,16(r19)
    5e9c:	12c00504 	addi	r11,r2,20
    5ea0:	4a51883a 	add	r8,r9,r9
    5ea4:	6319883a 	add	r12,r12,r12
    5ea8:	4211883a 	add	r8,r8,r8
    5eac:	6319883a 	add	r12,r12,r12
    5eb0:	15000315 	stw	r20,12(r2)
    5eb4:	8211883a 	add	r8,r16,r8
    5eb8:	8b19883a 	add	r12,r17,r12
    5ebc:	0007883a 	mov	r3,zero
    5ec0:	81400017 	ldw	r5,0(r16)
    5ec4:	89c00017 	ldw	r7,0(r17)
    5ec8:	59800104 	addi	r6,r11,4
    5ecc:	293fffcc 	andi	r4,r5,65535
    5ed0:	20c7883a 	add	r3,r4,r3
    5ed4:	393fffcc 	andi	r4,r7,65535
    5ed8:	1909c83a 	sub	r4,r3,r4
    5edc:	280ad43a 	srli	r5,r5,16
    5ee0:	380ed43a 	srli	r7,r7,16
    5ee4:	2007d43a 	srai	r3,r4,16
    5ee8:	213fffcc 	andi	r4,r4,65535
    5eec:	29cbc83a 	sub	r5,r5,r7
    5ef0:	28c7883a 	add	r3,r5,r3
    5ef4:	180a943a 	slli	r5,r3,16
    5ef8:	8c400104 	addi	r17,r17,4
    5efc:	84000104 	addi	r16,r16,4
    5f00:	2908b03a 	or	r4,r5,r4
    5f04:	59000015 	stw	r4,0(r11)
    5f08:	1807d43a 	srai	r3,r3,16
    5f0c:	3015883a 	mov	r10,r6
    5f10:	3017883a 	mov	r11,r6
    5f14:	8b3fea36 	bltu	r17,r12,5ec0 <__alt_mem_onchip_memory2_0+0xf7005ec0>
    5f18:	8200162e 	bgeu	r16,r8,5f74 <__mdiff+0x17c>
    5f1c:	8017883a 	mov	r11,r16
    5f20:	59400017 	ldw	r5,0(r11)
    5f24:	31800104 	addi	r6,r6,4
    5f28:	5ac00104 	addi	r11,r11,4
    5f2c:	293fffcc 	andi	r4,r5,65535
    5f30:	20c7883a 	add	r3,r4,r3
    5f34:	280ed43a 	srli	r7,r5,16
    5f38:	180bd43a 	srai	r5,r3,16
    5f3c:	193fffcc 	andi	r4,r3,65535
    5f40:	3947883a 	add	r3,r7,r5
    5f44:	180a943a 	slli	r5,r3,16
    5f48:	1807d43a 	srai	r3,r3,16
    5f4c:	2908b03a 	or	r4,r5,r4
    5f50:	313fff15 	stw	r4,-4(r6)
    5f54:	5a3ff236 	bltu	r11,r8,5f20 <__alt_mem_onchip_memory2_0+0xf7005f20>
    5f58:	0406303a 	nor	r3,zero,r16
    5f5c:	1a07883a 	add	r3,r3,r8
    5f60:	1806d0ba 	srli	r3,r3,2
    5f64:	18c00044 	addi	r3,r3,1
    5f68:	18c7883a 	add	r3,r3,r3
    5f6c:	18c7883a 	add	r3,r3,r3
    5f70:	50d5883a 	add	r10,r10,r3
    5f74:	50ffff04 	addi	r3,r10,-4
    5f78:	2000041e 	bne	r4,zero,5f8c <__mdiff+0x194>
    5f7c:	18ffff04 	addi	r3,r3,-4
    5f80:	19000017 	ldw	r4,0(r3)
    5f84:	4a7fffc4 	addi	r9,r9,-1
    5f88:	203ffc26 	beq	r4,zero,5f7c <__alt_mem_onchip_memory2_0+0xf7005f7c>
    5f8c:	12400415 	stw	r9,16(r2)
    5f90:	dfc00517 	ldw	ra,20(sp)
    5f94:	dd000417 	ldw	r20,16(sp)
    5f98:	dcc00317 	ldw	r19,12(sp)
    5f9c:	dc800217 	ldw	r18,8(sp)
    5fa0:	dc400117 	ldw	r17,4(sp)
    5fa4:	dc000017 	ldw	r16,0(sp)
    5fa8:	dec00604 	addi	sp,sp,24
    5fac:	f800283a 	ret
    5fb0:	000b883a 	mov	r5,zero
    5fb4:	00054140 	call	5414 <_Balloc>
    5fb8:	00c00044 	movi	r3,1
    5fbc:	10c00415 	stw	r3,16(r2)
    5fc0:	10000515 	stw	zero,20(r2)
    5fc4:	003ff206 	br	5f90 <__alt_mem_onchip_memory2_0+0xf7005f90>
    5fc8:	8023883a 	mov	r17,r16
    5fcc:	0029883a 	mov	r20,zero
    5fd0:	4021883a 	mov	r16,r8
    5fd4:	003fad06 	br	5e8c <__alt_mem_onchip_memory2_0+0xf7005e8c>
    5fd8:	9005883a 	mov	r2,r18
    5fdc:	94400504 	addi	r17,r18,20
    5fe0:	9c000504 	addi	r16,r19,20
    5fe4:	9825883a 	mov	r18,r19
    5fe8:	05000044 	movi	r20,1
    5fec:	1027883a 	mov	r19,r2
    5ff0:	003fa606 	br	5e8c <__alt_mem_onchip_memory2_0+0xf7005e8c>

00005ff4 <__ulp>:
    5ff4:	295ffc2c 	andhi	r5,r5,32752
    5ff8:	00bf3034 	movhi	r2,64704
    5ffc:	2887883a 	add	r3,r5,r2
    6000:	00c0020e 	bge	zero,r3,600c <__ulp+0x18>
    6004:	0005883a 	mov	r2,zero
    6008:	f800283a 	ret
    600c:	00c7c83a 	sub	r3,zero,r3
    6010:	1807d53a 	srai	r3,r3,20
    6014:	008004c4 	movi	r2,19
    6018:	10c00b0e 	bge	r2,r3,6048 <__ulp+0x54>
    601c:	18bffb04 	addi	r2,r3,-20
    6020:	01000784 	movi	r4,30
    6024:	0007883a 	mov	r3,zero
    6028:	20800516 	blt	r4,r2,6040 <__ulp+0x4c>
    602c:	010007c4 	movi	r4,31
    6030:	2089c83a 	sub	r4,r4,r2
    6034:	00800044 	movi	r2,1
    6038:	1104983a 	sll	r2,r2,r4
    603c:	f800283a 	ret
    6040:	00800044 	movi	r2,1
    6044:	f800283a 	ret
    6048:	01400234 	movhi	r5,8
    604c:	28c7d83a 	sra	r3,r5,r3
    6050:	0005883a 	mov	r2,zero
    6054:	f800283a 	ret

00006058 <__b2d>:
    6058:	defffa04 	addi	sp,sp,-24
    605c:	dc000015 	stw	r16,0(sp)
    6060:	24000417 	ldw	r16,16(r4)
    6064:	dc400115 	stw	r17,4(sp)
    6068:	24400504 	addi	r17,r4,20
    606c:	8421883a 	add	r16,r16,r16
    6070:	8421883a 	add	r16,r16,r16
    6074:	8c21883a 	add	r16,r17,r16
    6078:	dc800215 	stw	r18,8(sp)
    607c:	84bfff17 	ldw	r18,-4(r16)
    6080:	dd000415 	stw	r20,16(sp)
    6084:	dcc00315 	stw	r19,12(sp)
    6088:	9009883a 	mov	r4,r18
    608c:	2829883a 	mov	r20,r5
    6090:	dfc00515 	stw	ra,20(sp)
    6094:	00057300 	call	5730 <__hi0bits>
    6098:	00c00804 	movi	r3,32
    609c:	1889c83a 	sub	r4,r3,r2
    60a0:	a1000015 	stw	r4,0(r20)
    60a4:	01000284 	movi	r4,10
    60a8:	84ffff04 	addi	r19,r16,-4
    60ac:	20801216 	blt	r4,r2,60f8 <__b2d+0xa0>
    60b0:	018002c4 	movi	r6,11
    60b4:	308dc83a 	sub	r6,r6,r2
    60b8:	9186d83a 	srl	r3,r18,r6
    60bc:	18cffc34 	orhi	r3,r3,16368
    60c0:	8cc0212e 	bgeu	r17,r19,6148 <__b2d+0xf0>
    60c4:	813ffe17 	ldw	r4,-8(r16)
    60c8:	218cd83a 	srl	r6,r4,r6
    60cc:	10800544 	addi	r2,r2,21
    60d0:	9084983a 	sll	r2,r18,r2
    60d4:	1184b03a 	or	r2,r2,r6
    60d8:	dfc00517 	ldw	ra,20(sp)
    60dc:	dd000417 	ldw	r20,16(sp)
    60e0:	dcc00317 	ldw	r19,12(sp)
    60e4:	dc800217 	ldw	r18,8(sp)
    60e8:	dc400117 	ldw	r17,4(sp)
    60ec:	dc000017 	ldw	r16,0(sp)
    60f0:	dec00604 	addi	sp,sp,24
    60f4:	f800283a 	ret
    60f8:	8cc00f2e 	bgeu	r17,r19,6138 <__b2d+0xe0>
    60fc:	117ffd44 	addi	r5,r2,-11
    6100:	80bffe17 	ldw	r2,-8(r16)
    6104:	28000e26 	beq	r5,zero,6140 <__b2d+0xe8>
    6108:	1949c83a 	sub	r4,r3,r5
    610c:	9164983a 	sll	r18,r18,r5
    6110:	1106d83a 	srl	r3,r2,r4
    6114:	81bffe04 	addi	r6,r16,-8
    6118:	948ffc34 	orhi	r18,r18,16368
    611c:	90c6b03a 	or	r3,r18,r3
    6120:	89800e2e 	bgeu	r17,r6,615c <__b2d+0x104>
    6124:	81bffd17 	ldw	r6,-12(r16)
    6128:	1144983a 	sll	r2,r2,r5
    612c:	310ad83a 	srl	r5,r6,r4
    6130:	2884b03a 	or	r2,r5,r2
    6134:	003fe806 	br	60d8 <__alt_mem_onchip_memory2_0+0xf70060d8>
    6138:	10bffd44 	addi	r2,r2,-11
    613c:	1000041e 	bne	r2,zero,6150 <__b2d+0xf8>
    6140:	90cffc34 	orhi	r3,r18,16368
    6144:	003fe406 	br	60d8 <__alt_mem_onchip_memory2_0+0xf70060d8>
    6148:	000d883a 	mov	r6,zero
    614c:	003fdf06 	br	60cc <__alt_mem_onchip_memory2_0+0xf70060cc>
    6150:	90a4983a 	sll	r18,r18,r2
    6154:	0005883a 	mov	r2,zero
    6158:	003ff906 	br	6140 <__alt_mem_onchip_memory2_0+0xf7006140>
    615c:	1144983a 	sll	r2,r2,r5
    6160:	003fdd06 	br	60d8 <__alt_mem_onchip_memory2_0+0xf70060d8>

00006164 <__d2b>:
    6164:	defff804 	addi	sp,sp,-32
    6168:	dc000215 	stw	r16,8(sp)
    616c:	3021883a 	mov	r16,r6
    6170:	dc400315 	stw	r17,12(sp)
    6174:	8022907a 	slli	r17,r16,1
    6178:	dd000615 	stw	r20,24(sp)
    617c:	2829883a 	mov	r20,r5
    6180:	01400044 	movi	r5,1
    6184:	dcc00515 	stw	r19,20(sp)
    6188:	dc800415 	stw	r18,16(sp)
    618c:	dfc00715 	stw	ra,28(sp)
    6190:	3825883a 	mov	r18,r7
    6194:	8822d57a 	srli	r17,r17,21
    6198:	00054140 	call	5414 <_Balloc>
    619c:	1027883a 	mov	r19,r2
    61a0:	00800434 	movhi	r2,16
    61a4:	10bfffc4 	addi	r2,r2,-1
    61a8:	808c703a 	and	r6,r16,r2
    61ac:	88000126 	beq	r17,zero,61b4 <__d2b+0x50>
    61b0:	31800434 	orhi	r6,r6,16
    61b4:	d9800015 	stw	r6,0(sp)
    61b8:	a0002426 	beq	r20,zero,624c <__d2b+0xe8>
    61bc:	d9000104 	addi	r4,sp,4
    61c0:	dd000115 	stw	r20,4(sp)
    61c4:	00057980 	call	5798 <__lo0bits>
    61c8:	d8c00017 	ldw	r3,0(sp)
    61cc:	10002f1e 	bne	r2,zero,628c <__d2b+0x128>
    61d0:	d9000117 	ldw	r4,4(sp)
    61d4:	99000515 	stw	r4,20(r19)
    61d8:	1821003a 	cmpeq	r16,r3,zero
    61dc:	01000084 	movi	r4,2
    61e0:	2421c83a 	sub	r16,r4,r16
    61e4:	98c00615 	stw	r3,24(r19)
    61e8:	9c000415 	stw	r16,16(r19)
    61ec:	88001f1e 	bne	r17,zero,626c <__d2b+0x108>
    61f0:	10bef384 	addi	r2,r2,-1074
    61f4:	90800015 	stw	r2,0(r18)
    61f8:	00900034 	movhi	r2,16384
    61fc:	10bfffc4 	addi	r2,r2,-1
    6200:	8085883a 	add	r2,r16,r2
    6204:	1085883a 	add	r2,r2,r2
    6208:	1085883a 	add	r2,r2,r2
    620c:	9885883a 	add	r2,r19,r2
    6210:	11000517 	ldw	r4,20(r2)
    6214:	8020917a 	slli	r16,r16,5
    6218:	00057300 	call	5730 <__hi0bits>
    621c:	d8c00817 	ldw	r3,32(sp)
    6220:	8085c83a 	sub	r2,r16,r2
    6224:	18800015 	stw	r2,0(r3)
    6228:	9805883a 	mov	r2,r19
    622c:	dfc00717 	ldw	ra,28(sp)
    6230:	dd000617 	ldw	r20,24(sp)
    6234:	dcc00517 	ldw	r19,20(sp)
    6238:	dc800417 	ldw	r18,16(sp)
    623c:	dc400317 	ldw	r17,12(sp)
    6240:	dc000217 	ldw	r16,8(sp)
    6244:	dec00804 	addi	sp,sp,32
    6248:	f800283a 	ret
    624c:	d809883a 	mov	r4,sp
    6250:	00057980 	call	5798 <__lo0bits>
    6254:	d8c00017 	ldw	r3,0(sp)
    6258:	04000044 	movi	r16,1
    625c:	9c000415 	stw	r16,16(r19)
    6260:	98c00515 	stw	r3,20(r19)
    6264:	10800804 	addi	r2,r2,32
    6268:	883fe126 	beq	r17,zero,61f0 <__alt_mem_onchip_memory2_0+0xf70061f0>
    626c:	00c00d44 	movi	r3,53
    6270:	8c7ef344 	addi	r17,r17,-1075
    6274:	88a3883a 	add	r17,r17,r2
    6278:	1885c83a 	sub	r2,r3,r2
    627c:	d8c00817 	ldw	r3,32(sp)
    6280:	94400015 	stw	r17,0(r18)
    6284:	18800015 	stw	r2,0(r3)
    6288:	003fe706 	br	6228 <__alt_mem_onchip_memory2_0+0xf7006228>
    628c:	01000804 	movi	r4,32
    6290:	2089c83a 	sub	r4,r4,r2
    6294:	1908983a 	sll	r4,r3,r4
    6298:	d9400117 	ldw	r5,4(sp)
    629c:	1886d83a 	srl	r3,r3,r2
    62a0:	2148b03a 	or	r4,r4,r5
    62a4:	99000515 	stw	r4,20(r19)
    62a8:	d8c00015 	stw	r3,0(sp)
    62ac:	003fca06 	br	61d8 <__alt_mem_onchip_memory2_0+0xf70061d8>

000062b0 <__ratio>:
    62b0:	defff904 	addi	sp,sp,-28
    62b4:	dc400315 	stw	r17,12(sp)
    62b8:	2823883a 	mov	r17,r5
    62bc:	d9400104 	addi	r5,sp,4
    62c0:	dfc00615 	stw	ra,24(sp)
    62c4:	dcc00515 	stw	r19,20(sp)
    62c8:	dc800415 	stw	r18,16(sp)
    62cc:	2027883a 	mov	r19,r4
    62d0:	dc000215 	stw	r16,8(sp)
    62d4:	00060580 	call	6058 <__b2d>
    62d8:	d80b883a 	mov	r5,sp
    62dc:	8809883a 	mov	r4,r17
    62e0:	1025883a 	mov	r18,r2
    62e4:	1821883a 	mov	r16,r3
    62e8:	00060580 	call	6058 <__b2d>
    62ec:	8a000417 	ldw	r8,16(r17)
    62f0:	99000417 	ldw	r4,16(r19)
    62f4:	d9400117 	ldw	r5,4(sp)
    62f8:	2209c83a 	sub	r4,r4,r8
    62fc:	2010917a 	slli	r8,r4,5
    6300:	d9000017 	ldw	r4,0(sp)
    6304:	2909c83a 	sub	r4,r5,r4
    6308:	4109883a 	add	r4,r8,r4
    630c:	01000e0e 	bge	zero,r4,6348 <__ratio+0x98>
    6310:	2008953a 	slli	r4,r4,20
    6314:	2421883a 	add	r16,r4,r16
    6318:	100d883a 	mov	r6,r2
    631c:	180f883a 	mov	r7,r3
    6320:	9009883a 	mov	r4,r18
    6324:	800b883a 	mov	r5,r16
    6328:	0009e500 	call	9e50 <__divdf3>
    632c:	dfc00617 	ldw	ra,24(sp)
    6330:	dcc00517 	ldw	r19,20(sp)
    6334:	dc800417 	ldw	r18,16(sp)
    6338:	dc400317 	ldw	r17,12(sp)
    633c:	dc000217 	ldw	r16,8(sp)
    6340:	dec00704 	addi	sp,sp,28
    6344:	f800283a 	ret
    6348:	2008953a 	slli	r4,r4,20
    634c:	1907c83a 	sub	r3,r3,r4
    6350:	003ff106 	br	6318 <__alt_mem_onchip_memory2_0+0xf7006318>

00006354 <_mprec_log10>:
    6354:	defffe04 	addi	sp,sp,-8
    6358:	dc000015 	stw	r16,0(sp)
    635c:	dfc00115 	stw	ra,4(sp)
    6360:	008005c4 	movi	r2,23
    6364:	2021883a 	mov	r16,r4
    6368:	11000d0e 	bge	r2,r4,63a0 <_mprec_log10+0x4c>
    636c:	0005883a 	mov	r2,zero
    6370:	00cffc34 	movhi	r3,16368
    6374:	843fffc4 	addi	r16,r16,-1
    6378:	000d883a 	mov	r6,zero
    637c:	01d00934 	movhi	r7,16420
    6380:	1009883a 	mov	r4,r2
    6384:	180b883a 	mov	r5,r3
    6388:	000aa780 	call	aa78 <__muldf3>
    638c:	803ff91e 	bne	r16,zero,6374 <__alt_mem_onchip_memory2_0+0xf7006374>
    6390:	dfc00117 	ldw	ra,4(sp)
    6394:	dc000017 	ldw	r16,0(sp)
    6398:	dec00204 	addi	sp,sp,8
    639c:	f800283a 	ret
    63a0:	202090fa 	slli	r16,r4,3
    63a4:	00800074 	movhi	r2,1
    63a8:	10b88b04 	addi	r2,r2,-7636
    63ac:	1421883a 	add	r16,r2,r16
    63b0:	80800017 	ldw	r2,0(r16)
    63b4:	80c00117 	ldw	r3,4(r16)
    63b8:	dfc00117 	ldw	ra,4(sp)
    63bc:	dc000017 	ldw	r16,0(sp)
    63c0:	dec00204 	addi	sp,sp,8
    63c4:	f800283a 	ret

000063c8 <__copybits>:
    63c8:	297fffc4 	addi	r5,r5,-1
    63cc:	280fd17a 	srai	r7,r5,5
    63d0:	30c00417 	ldw	r3,16(r6)
    63d4:	30800504 	addi	r2,r6,20
    63d8:	39c00044 	addi	r7,r7,1
    63dc:	18c7883a 	add	r3,r3,r3
    63e0:	39cf883a 	add	r7,r7,r7
    63e4:	18c7883a 	add	r3,r3,r3
    63e8:	39cf883a 	add	r7,r7,r7
    63ec:	10c7883a 	add	r3,r2,r3
    63f0:	21cf883a 	add	r7,r4,r7
    63f4:	10c00d2e 	bgeu	r2,r3,642c <__copybits+0x64>
    63f8:	200b883a 	mov	r5,r4
    63fc:	12000017 	ldw	r8,0(r2)
    6400:	29400104 	addi	r5,r5,4
    6404:	10800104 	addi	r2,r2,4
    6408:	2a3fff15 	stw	r8,-4(r5)
    640c:	10fffb36 	bltu	r2,r3,63fc <__alt_mem_onchip_memory2_0+0xf70063fc>
    6410:	1985c83a 	sub	r2,r3,r6
    6414:	10bffac4 	addi	r2,r2,-21
    6418:	1004d0ba 	srli	r2,r2,2
    641c:	10800044 	addi	r2,r2,1
    6420:	1085883a 	add	r2,r2,r2
    6424:	1085883a 	add	r2,r2,r2
    6428:	2089883a 	add	r4,r4,r2
    642c:	21c0032e 	bgeu	r4,r7,643c <__copybits+0x74>
    6430:	20000015 	stw	zero,0(r4)
    6434:	21000104 	addi	r4,r4,4
    6438:	21fffd36 	bltu	r4,r7,6430 <__alt_mem_onchip_memory2_0+0xf7006430>
    643c:	f800283a 	ret

00006440 <__any_on>:
    6440:	20c00417 	ldw	r3,16(r4)
    6444:	2805d17a 	srai	r2,r5,5
    6448:	21000504 	addi	r4,r4,20
    644c:	18800d0e 	bge	r3,r2,6484 <__any_on+0x44>
    6450:	18c7883a 	add	r3,r3,r3
    6454:	18c7883a 	add	r3,r3,r3
    6458:	20c7883a 	add	r3,r4,r3
    645c:	20c0192e 	bgeu	r4,r3,64c4 <__any_on+0x84>
    6460:	18bfff17 	ldw	r2,-4(r3)
    6464:	18ffff04 	addi	r3,r3,-4
    6468:	1000041e 	bne	r2,zero,647c <__any_on+0x3c>
    646c:	20c0142e 	bgeu	r4,r3,64c0 <__any_on+0x80>
    6470:	18ffff04 	addi	r3,r3,-4
    6474:	19400017 	ldw	r5,0(r3)
    6478:	283ffc26 	beq	r5,zero,646c <__alt_mem_onchip_memory2_0+0xf700646c>
    647c:	00800044 	movi	r2,1
    6480:	f800283a 	ret
    6484:	10c00a0e 	bge	r2,r3,64b0 <__any_on+0x70>
    6488:	1085883a 	add	r2,r2,r2
    648c:	1085883a 	add	r2,r2,r2
    6490:	294007cc 	andi	r5,r5,31
    6494:	2087883a 	add	r3,r4,r2
    6498:	283ff026 	beq	r5,zero,645c <__alt_mem_onchip_memory2_0+0xf700645c>
    649c:	19800017 	ldw	r6,0(r3)
    64a0:	3144d83a 	srl	r2,r6,r5
    64a4:	114a983a 	sll	r5,r2,r5
    64a8:	317ff41e 	bne	r6,r5,647c <__alt_mem_onchip_memory2_0+0xf700647c>
    64ac:	003feb06 	br	645c <__alt_mem_onchip_memory2_0+0xf700645c>
    64b0:	1085883a 	add	r2,r2,r2
    64b4:	1085883a 	add	r2,r2,r2
    64b8:	2087883a 	add	r3,r4,r2
    64bc:	003fe706 	br	645c <__alt_mem_onchip_memory2_0+0xf700645c>
    64c0:	f800283a 	ret
    64c4:	0005883a 	mov	r2,zero
    64c8:	f800283a 	ret

000064cc <__fpclassifyd>:
    64cc:	00a00034 	movhi	r2,32768
    64d0:	10bfffc4 	addi	r2,r2,-1
    64d4:	2884703a 	and	r2,r5,r2
    64d8:	10000726 	beq	r2,zero,64f8 <__fpclassifyd+0x2c>
    64dc:	00fffc34 	movhi	r3,65520
    64e0:	019ff834 	movhi	r6,32736
    64e4:	28c7883a 	add	r3,r5,r3
    64e8:	31bfffc4 	addi	r6,r6,-1
    64ec:	30c00536 	bltu	r6,r3,6504 <__fpclassifyd+0x38>
    64f0:	00800104 	movi	r2,4
    64f4:	f800283a 	ret
    64f8:	2000021e 	bne	r4,zero,6504 <__fpclassifyd+0x38>
    64fc:	00800084 	movi	r2,2
    6500:	f800283a 	ret
    6504:	00dffc34 	movhi	r3,32752
    6508:	019ff834 	movhi	r6,32736
    650c:	28cb883a 	add	r5,r5,r3
    6510:	31bfffc4 	addi	r6,r6,-1
    6514:	317ff62e 	bgeu	r6,r5,64f0 <__alt_mem_onchip_memory2_0+0xf70064f0>
    6518:	01400434 	movhi	r5,16
    651c:	297fffc4 	addi	r5,r5,-1
    6520:	28800236 	bltu	r5,r2,652c <__fpclassifyd+0x60>
    6524:	008000c4 	movi	r2,3
    6528:	f800283a 	ret
    652c:	10c00226 	beq	r2,r3,6538 <__fpclassifyd+0x6c>
    6530:	0005883a 	mov	r2,zero
    6534:	f800283a 	ret
    6538:	2005003a 	cmpeq	r2,r4,zero
    653c:	f800283a 	ret

00006540 <_sbrk_r>:
    6540:	defffd04 	addi	sp,sp,-12
    6544:	dc000015 	stw	r16,0(sp)
    6548:	04000074 	movhi	r16,1
    654c:	dc400115 	stw	r17,4(sp)
    6550:	8408ba04 	addi	r16,r16,8936
    6554:	2023883a 	mov	r17,r4
    6558:	2809883a 	mov	r4,r5
    655c:	dfc00215 	stw	ra,8(sp)
    6560:	80000015 	stw	zero,0(r16)
    6564:	000bff80 	call	bff8 <sbrk>
    6568:	00ffffc4 	movi	r3,-1
    656c:	10c00526 	beq	r2,r3,6584 <_sbrk_r+0x44>
    6570:	dfc00217 	ldw	ra,8(sp)
    6574:	dc400117 	ldw	r17,4(sp)
    6578:	dc000017 	ldw	r16,0(sp)
    657c:	dec00304 	addi	sp,sp,12
    6580:	f800283a 	ret
    6584:	80c00017 	ldw	r3,0(r16)
    6588:	183ff926 	beq	r3,zero,6570 <__alt_mem_onchip_memory2_0+0xf7006570>
    658c:	88c00015 	stw	r3,0(r17)
    6590:	003ff706 	br	6570 <__alt_mem_onchip_memory2_0+0xf7006570>

00006594 <strcmp>:
    6594:	2144b03a 	or	r2,r4,r5
    6598:	108000cc 	andi	r2,r2,3
    659c:	1000171e 	bne	r2,zero,65fc <strcmp+0x68>
    65a0:	20800017 	ldw	r2,0(r4)
    65a4:	28c00017 	ldw	r3,0(r5)
    65a8:	10c0141e 	bne	r2,r3,65fc <strcmp+0x68>
    65ac:	027fbff4 	movhi	r9,65279
    65b0:	4a7fbfc4 	addi	r9,r9,-257
    65b4:	0086303a 	nor	r3,zero,r2
    65b8:	02202074 	movhi	r8,32897
    65bc:	1245883a 	add	r2,r2,r9
    65c0:	42202004 	addi	r8,r8,-32640
    65c4:	10c4703a 	and	r2,r2,r3
    65c8:	1204703a 	and	r2,r2,r8
    65cc:	10000226 	beq	r2,zero,65d8 <strcmp+0x44>
    65d0:	00002306 	br	6660 <strcmp+0xcc>
    65d4:	1000221e 	bne	r2,zero,6660 <strcmp+0xcc>
    65d8:	21000104 	addi	r4,r4,4
    65dc:	20c00017 	ldw	r3,0(r4)
    65e0:	29400104 	addi	r5,r5,4
    65e4:	29800017 	ldw	r6,0(r5)
    65e8:	1a4f883a 	add	r7,r3,r9
    65ec:	00c4303a 	nor	r2,zero,r3
    65f0:	3884703a 	and	r2,r7,r2
    65f4:	1204703a 	and	r2,r2,r8
    65f8:	19bff626 	beq	r3,r6,65d4 <__alt_mem_onchip_memory2_0+0xf70065d4>
    65fc:	20800003 	ldbu	r2,0(r4)
    6600:	10c03fcc 	andi	r3,r2,255
    6604:	18c0201c 	xori	r3,r3,128
    6608:	18ffe004 	addi	r3,r3,-128
    660c:	18000c26 	beq	r3,zero,6640 <strcmp+0xac>
    6610:	29800007 	ldb	r6,0(r5)
    6614:	19800326 	beq	r3,r6,6624 <strcmp+0x90>
    6618:	00001306 	br	6668 <strcmp+0xd4>
    661c:	29800007 	ldb	r6,0(r5)
    6620:	11800b1e 	bne	r2,r6,6650 <strcmp+0xbc>
    6624:	21000044 	addi	r4,r4,1
    6628:	20c00003 	ldbu	r3,0(r4)
    662c:	29400044 	addi	r5,r5,1
    6630:	18803fcc 	andi	r2,r3,255
    6634:	1080201c 	xori	r2,r2,128
    6638:	10bfe004 	addi	r2,r2,-128
    663c:	103ff71e 	bne	r2,zero,661c <__alt_mem_onchip_memory2_0+0xf700661c>
    6640:	0007883a 	mov	r3,zero
    6644:	28800003 	ldbu	r2,0(r5)
    6648:	1885c83a 	sub	r2,r3,r2
    664c:	f800283a 	ret
    6650:	28800003 	ldbu	r2,0(r5)
    6654:	18c03fcc 	andi	r3,r3,255
    6658:	1885c83a 	sub	r2,r3,r2
    665c:	f800283a 	ret
    6660:	0005883a 	mov	r2,zero
    6664:	f800283a 	ret
    6668:	10c03fcc 	andi	r3,r2,255
    666c:	003ff506 	br	6644 <__alt_mem_onchip_memory2_0+0xf7006644>

00006670 <__ssprint_r>:
    6670:	30800217 	ldw	r2,8(r6)
    6674:	defff604 	addi	sp,sp,-40
    6678:	dc800215 	stw	r18,8(sp)
    667c:	dfc00915 	stw	ra,36(sp)
    6680:	df000815 	stw	fp,32(sp)
    6684:	ddc00715 	stw	r23,28(sp)
    6688:	dd800615 	stw	r22,24(sp)
    668c:	dd400515 	stw	r21,20(sp)
    6690:	dd000415 	stw	r20,16(sp)
    6694:	dcc00315 	stw	r19,12(sp)
    6698:	dc400115 	stw	r17,4(sp)
    669c:	dc000015 	stw	r16,0(sp)
    66a0:	3025883a 	mov	r18,r6
    66a4:	10005826 	beq	r2,zero,6808 <__ssprint_r+0x198>
    66a8:	2027883a 	mov	r19,r4
    66ac:	35c00017 	ldw	r23,0(r6)
    66b0:	29000017 	ldw	r4,0(r5)
    66b4:	28800217 	ldw	r2,8(r5)
    66b8:	2823883a 	mov	r17,r5
    66bc:	0039883a 	mov	fp,zero
    66c0:	0021883a 	mov	r16,zero
    66c4:	80003926 	beq	r16,zero,67ac <__ssprint_r+0x13c>
    66c8:	102b883a 	mov	r21,r2
    66cc:	102d883a 	mov	r22,r2
    66d0:	80803a36 	bltu	r16,r2,67bc <__ssprint_r+0x14c>
    66d4:	88c0030b 	ldhu	r3,12(r17)
    66d8:	1881200c 	andi	r2,r3,1152
    66dc:	10002626 	beq	r2,zero,6778 <__ssprint_r+0x108>
    66e0:	88800517 	ldw	r2,20(r17)
    66e4:	89400417 	ldw	r5,16(r17)
    66e8:	81800044 	addi	r6,r16,1
    66ec:	108f883a 	add	r7,r2,r2
    66f0:	3885883a 	add	r2,r7,r2
    66f4:	100ed7fa 	srli	r7,r2,31
    66f8:	216dc83a 	sub	r22,r4,r5
    66fc:	3589883a 	add	r4,r6,r22
    6700:	3885883a 	add	r2,r7,r2
    6704:	102bd07a 	srai	r21,r2,1
    6708:	a80d883a 	mov	r6,r21
    670c:	a900022e 	bgeu	r21,r4,6718 <__ssprint_r+0xa8>
    6710:	202b883a 	mov	r21,r4
    6714:	200d883a 	mov	r6,r4
    6718:	18c1000c 	andi	r3,r3,1024
    671c:	18002a26 	beq	r3,zero,67c8 <__ssprint_r+0x158>
    6720:	300b883a 	mov	r5,r6
    6724:	9809883a 	mov	r4,r19
    6728:	00049dc0 	call	49dc <_malloc_r>
    672c:	1029883a 	mov	r20,r2
    6730:	10002c26 	beq	r2,zero,67e4 <__ssprint_r+0x174>
    6734:	89400417 	ldw	r5,16(r17)
    6738:	b00d883a 	mov	r6,r22
    673c:	1009883a 	mov	r4,r2
    6740:	00052cc0 	call	52cc <memcpy>
    6744:	8880030b 	ldhu	r2,12(r17)
    6748:	00fedfc4 	movi	r3,-1153
    674c:	10c4703a 	and	r2,r2,r3
    6750:	10802014 	ori	r2,r2,128
    6754:	8880030d 	sth	r2,12(r17)
    6758:	a589883a 	add	r4,r20,r22
    675c:	adadc83a 	sub	r22,r21,r22
    6760:	8d400515 	stw	r21,20(r17)
    6764:	8d800215 	stw	r22,8(r17)
    6768:	8d000415 	stw	r20,16(r17)
    676c:	89000015 	stw	r4,0(r17)
    6770:	802b883a 	mov	r21,r16
    6774:	802d883a 	mov	r22,r16
    6778:	b00d883a 	mov	r6,r22
    677c:	e00b883a 	mov	r5,fp
    6780:	00080f00 	call	80f0 <memmove>
    6784:	88800217 	ldw	r2,8(r17)
    6788:	89000017 	ldw	r4,0(r17)
    678c:	90c00217 	ldw	r3,8(r18)
    6790:	1545c83a 	sub	r2,r2,r21
    6794:	2589883a 	add	r4,r4,r22
    6798:	88800215 	stw	r2,8(r17)
    679c:	89000015 	stw	r4,0(r17)
    67a0:	1c21c83a 	sub	r16,r3,r16
    67a4:	94000215 	stw	r16,8(r18)
    67a8:	80001726 	beq	r16,zero,6808 <__ssprint_r+0x198>
    67ac:	bf000017 	ldw	fp,0(r23)
    67b0:	bc000117 	ldw	r16,4(r23)
    67b4:	bdc00204 	addi	r23,r23,8
    67b8:	003fc206 	br	66c4 <__alt_mem_onchip_memory2_0+0xf70066c4>
    67bc:	802b883a 	mov	r21,r16
    67c0:	802d883a 	mov	r22,r16
    67c4:	003fec06 	br	6778 <__alt_mem_onchip_memory2_0+0xf7006778>
    67c8:	9809883a 	mov	r4,r19
    67cc:	00083740 	call	8374 <_realloc_r>
    67d0:	1029883a 	mov	r20,r2
    67d4:	103fe01e 	bne	r2,zero,6758 <__alt_mem_onchip_memory2_0+0xf7006758>
    67d8:	89400417 	ldw	r5,16(r17)
    67dc:	9809883a 	mov	r4,r19
    67e0:	0007de00 	call	7de0 <_free_r>
    67e4:	88c0030b 	ldhu	r3,12(r17)
    67e8:	00800304 	movi	r2,12
    67ec:	98800015 	stw	r2,0(r19)
    67f0:	18c01014 	ori	r3,r3,64
    67f4:	88c0030d 	sth	r3,12(r17)
    67f8:	00bfffc4 	movi	r2,-1
    67fc:	90000215 	stw	zero,8(r18)
    6800:	90000115 	stw	zero,4(r18)
    6804:	00000206 	br	6810 <__ssprint_r+0x1a0>
    6808:	90000115 	stw	zero,4(r18)
    680c:	0005883a 	mov	r2,zero
    6810:	dfc00917 	ldw	ra,36(sp)
    6814:	df000817 	ldw	fp,32(sp)
    6818:	ddc00717 	ldw	r23,28(sp)
    681c:	dd800617 	ldw	r22,24(sp)
    6820:	dd400517 	ldw	r21,20(sp)
    6824:	dd000417 	ldw	r20,16(sp)
    6828:	dcc00317 	ldw	r19,12(sp)
    682c:	dc800217 	ldw	r18,8(sp)
    6830:	dc400117 	ldw	r17,4(sp)
    6834:	dc000017 	ldw	r16,0(sp)
    6838:	dec00a04 	addi	sp,sp,40
    683c:	f800283a 	ret

00006840 <___svfiprintf_internal_r>:
    6840:	2880030b 	ldhu	r2,12(r5)
    6844:	deffc804 	addi	sp,sp,-224
    6848:	dcc03115 	stw	r19,196(sp)
    684c:	dfc03715 	stw	ra,220(sp)
    6850:	df003615 	stw	fp,216(sp)
    6854:	ddc03515 	stw	r23,212(sp)
    6858:	dd803415 	stw	r22,208(sp)
    685c:	dd403315 	stw	r21,204(sp)
    6860:	dd003215 	stw	r20,200(sp)
    6864:	dc803015 	stw	r18,192(sp)
    6868:	dc402f15 	stw	r17,188(sp)
    686c:	dc002e15 	stw	r16,184(sp)
    6870:	d9402315 	stw	r5,140(sp)
    6874:	d9002715 	stw	r4,156(sp)
    6878:	1080200c 	andi	r2,r2,128
    687c:	d9c02415 	stw	r7,144(sp)
    6880:	3027883a 	mov	r19,r6
    6884:	10000226 	beq	r2,zero,6890 <___svfiprintf_internal_r+0x50>
    6888:	28800417 	ldw	r2,16(r5)
    688c:	10046d26 	beq	r2,zero,7a44 <___svfiprintf_internal_r+0x1204>
    6890:	d8801a04 	addi	r2,sp,104
    6894:	d8c019c4 	addi	r3,sp,103
    6898:	05800074 	movhi	r22,1
    689c:	10c9c83a 	sub	r4,r2,r3
    68a0:	b5b8bd04 	addi	r22,r22,-7436
    68a4:	d8801e15 	stw	r2,120(sp)
    68a8:	d8c01f15 	stw	r3,124(sp)
    68ac:	dec01a15 	stw	sp,104(sp)
    68b0:	d8001c15 	stw	zero,112(sp)
    68b4:	d8001b15 	stw	zero,108(sp)
    68b8:	d811883a 	mov	r8,sp
    68bc:	d8002915 	stw	zero,164(sp)
    68c0:	d8002615 	stw	zero,152(sp)
    68c4:	d9002c15 	stw	r4,176(sp)
    68c8:	98800007 	ldb	r2,0(r19)
    68cc:	10031426 	beq	r2,zero,7520 <___svfiprintf_internal_r+0xce0>
    68d0:	00c00944 	movi	r3,37
    68d4:	9825883a 	mov	r18,r19
    68d8:	10c0021e 	bne	r2,r3,68e4 <___svfiprintf_internal_r+0xa4>
    68dc:	00001406 	br	6930 <___svfiprintf_internal_r+0xf0>
    68e0:	10c00326 	beq	r2,r3,68f0 <___svfiprintf_internal_r+0xb0>
    68e4:	94800044 	addi	r18,r18,1
    68e8:	90800007 	ldb	r2,0(r18)
    68ec:	103ffc1e 	bne	r2,zero,68e0 <__alt_mem_onchip_memory2_0+0xf70068e0>
    68f0:	94e1c83a 	sub	r16,r18,r19
    68f4:	80000e26 	beq	r16,zero,6930 <___svfiprintf_internal_r+0xf0>
    68f8:	d8c01c17 	ldw	r3,112(sp)
    68fc:	d8801b17 	ldw	r2,108(sp)
    6900:	44c00015 	stw	r19,0(r8)
    6904:	1c07883a 	add	r3,r3,r16
    6908:	10800044 	addi	r2,r2,1
    690c:	d8c01c15 	stw	r3,112(sp)
    6910:	44000115 	stw	r16,4(r8)
    6914:	d8801b15 	stw	r2,108(sp)
    6918:	00c001c4 	movi	r3,7
    691c:	18835c16 	blt	r3,r2,7690 <___svfiprintf_internal_r+0xe50>
    6920:	42000204 	addi	r8,r8,8
    6924:	d9402617 	ldw	r5,152(sp)
    6928:	2c0b883a 	add	r5,r5,r16
    692c:	d9402615 	stw	r5,152(sp)
    6930:	90800007 	ldb	r2,0(r18)
    6934:	1002fc26 	beq	r2,zero,7528 <___svfiprintf_internal_r+0xce8>
    6938:	0023883a 	mov	r17,zero
    693c:	00bfffc4 	movi	r2,-1
    6940:	0021883a 	mov	r16,zero
    6944:	94c00044 	addi	r19,r18,1
    6948:	90c00047 	ldb	r3,1(r18)
    694c:	dc402105 	stb	r17,132(sp)
    6950:	d8001d85 	stb	zero,118(sp)
    6954:	002b883a 	mov	r21,zero
    6958:	d8802015 	stw	r2,128(sp)
    695c:	d8002515 	stw	zero,148(sp)
    6960:	04801604 	movi	r18,88
    6964:	05000244 	movi	r20,9
    6968:	402f883a 	mov	r23,r8
    696c:	8023883a 	mov	r17,r16
    6970:	9cc00044 	addi	r19,r19,1
    6974:	18bff804 	addi	r2,r3,-32
    6978:	9081fb36 	bltu	r18,r2,7168 <___svfiprintf_internal_r+0x928>
    697c:	100490ba 	slli	r2,r2,2
    6980:	01000034 	movhi	r4,0
    6984:	211a6504 	addi	r4,r4,27028
    6988:	1105883a 	add	r2,r2,r4
    698c:	10800017 	ldw	r2,0(r2)
    6990:	1000683a 	jmp	r2
    6994:	00006b94 	movui	zero,430
    6998:	00007168 	cmpgeui	zero,zero,453
    699c:	00007168 	cmpgeui	zero,zero,453
    69a0:	00006b88 	cmpgei	zero,zero,430
    69a4:	00007168 	cmpgeui	zero,zero,453
    69a8:	00007168 	cmpgeui	zero,zero,453
    69ac:	00007168 	cmpgeui	zero,zero,453
    69b0:	00007168 	cmpgeui	zero,zero,453
    69b4:	00007168 	cmpgeui	zero,zero,453
    69b8:	00007168 	cmpgeui	zero,zero,453
    69bc:	00006af8 	rdprs	zero,zero,427
    69c0:	00006cf4 	movhi	zero,435
    69c4:	00007168 	cmpgeui	zero,zero,453
    69c8:	00006b20 	cmpeqi	zero,zero,428
    69cc:	000071a4 	muli	zero,zero,454
    69d0:	00007168 	cmpgeui	zero,zero,453
    69d4:	00007198 	cmpnei	zero,zero,454
    69d8:	0000712c 	andhi	zero,zero,452
    69dc:	0000712c 	andhi	zero,zero,452
    69e0:	0000712c 	andhi	zero,zero,452
    69e4:	0000712c 	andhi	zero,zero,452
    69e8:	0000712c 	andhi	zero,zero,452
    69ec:	0000712c 	andhi	zero,zero,452
    69f0:	0000712c 	andhi	zero,zero,452
    69f4:	0000712c 	andhi	zero,zero,452
    69f8:	0000712c 	andhi	zero,zero,452
    69fc:	00007168 	cmpgeui	zero,zero,453
    6a00:	00007168 	cmpgeui	zero,zero,453
    6a04:	00007168 	cmpgeui	zero,zero,453
    6a08:	00007168 	cmpgeui	zero,zero,453
    6a0c:	00007168 	cmpgeui	zero,zero,453
    6a10:	00007168 	cmpgeui	zero,zero,453
    6a14:	00007168 	cmpgeui	zero,zero,453
    6a18:	00007168 	cmpgeui	zero,zero,453
    6a1c:	00007168 	cmpgeui	zero,zero,453
    6a20:	00007168 	cmpgeui	zero,zero,453
    6a24:	000070b0 	cmpltui	zero,zero,450
    6a28:	00007168 	cmpgeui	zero,zero,453
    6a2c:	00007168 	cmpgeui	zero,zero,453
    6a30:	00007168 	cmpgeui	zero,zero,453
    6a34:	00007168 	cmpgeui	zero,zero,453
    6a38:	00007168 	cmpgeui	zero,zero,453
    6a3c:	00007168 	cmpgeui	zero,zero,453
    6a40:	00007168 	cmpgeui	zero,zero,453
    6a44:	00007168 	cmpgeui	zero,zero,453
    6a48:	00007168 	cmpgeui	zero,zero,453
    6a4c:	00007168 	cmpgeui	zero,zero,453
    6a50:	00007260 	cmpeqi	zero,zero,457
    6a54:	00007168 	cmpgeui	zero,zero,453
    6a58:	00007168 	cmpgeui	zero,zero,453
    6a5c:	00007168 	cmpgeui	zero,zero,453
    6a60:	00007168 	cmpgeui	zero,zero,453
    6a64:	00007168 	cmpgeui	zero,zero,453
    6a68:	000071ec 	andhi	zero,zero,455
    6a6c:	00007168 	cmpgeui	zero,zero,453
    6a70:	00007168 	cmpgeui	zero,zero,453
    6a74:	00006eec 	andhi	zero,zero,443
    6a78:	00007168 	cmpgeui	zero,zero,453
    6a7c:	00007168 	cmpgeui	zero,zero,453
    6a80:	00007168 	cmpgeui	zero,zero,453
    6a84:	00007168 	cmpgeui	zero,zero,453
    6a88:	00007168 	cmpgeui	zero,zero,453
    6a8c:	00007168 	cmpgeui	zero,zero,453
    6a90:	00007168 	cmpgeui	zero,zero,453
    6a94:	00007168 	cmpgeui	zero,zero,453
    6a98:	00007168 	cmpgeui	zero,zero,453
    6a9c:	00007168 	cmpgeui	zero,zero,453
    6aa0:	00006db8 	rdprs	zero,zero,438
    6aa4:	00006f9c 	xori	zero,zero,446
    6aa8:	00007168 	cmpgeui	zero,zero,453
    6aac:	00007168 	cmpgeui	zero,zero,453
    6ab0:	00007168 	cmpgeui	zero,zero,453
    6ab4:	00006f90 	cmplti	zero,zero,446
    6ab8:	00006f9c 	xori	zero,zero,446
    6abc:	00007168 	cmpgeui	zero,zero,453
    6ac0:	00007168 	cmpgeui	zero,zero,453
    6ac4:	00006f7c 	xorhi	zero,zero,445
    6ac8:	00007168 	cmpgeui	zero,zero,453
    6acc:	00006f3c 	xorhi	zero,zero,444
    6ad0:	00006d08 	cmpgei	zero,zero,436
    6ad4:	00006b2c 	andhi	zero,zero,428
    6ad8:	000070a4 	muli	zero,zero,450
    6adc:	00007168 	cmpgeui	zero,zero,453
    6ae0:	00007050 	cmplti	zero,zero,449
    6ae4:	00007168 	cmpgeui	zero,zero,453
    6ae8:	00006c6c 	andhi	zero,zero,433
    6aec:	00007168 	cmpgeui	zero,zero,453
    6af0:	00007168 	cmpgeui	zero,zero,453
    6af4:	00006bb8 	rdprs	zero,zero,430
    6af8:	d9002417 	ldw	r4,144(sp)
    6afc:	d9402417 	ldw	r5,144(sp)
    6b00:	21000017 	ldw	r4,0(r4)
    6b04:	28800104 	addi	r2,r5,4
    6b08:	d9002515 	stw	r4,148(sp)
    6b0c:	20032b0e 	bge	r4,zero,77bc <___svfiprintf_internal_r+0xf7c>
    6b10:	d8c02517 	ldw	r3,148(sp)
    6b14:	d8802415 	stw	r2,144(sp)
    6b18:	00c7c83a 	sub	r3,zero,r3
    6b1c:	d8c02515 	stw	r3,148(sp)
    6b20:	8c400114 	ori	r17,r17,4
    6b24:	98c00007 	ldb	r3,0(r19)
    6b28:	003f9106 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    6b2c:	00800c04 	movi	r2,48
    6b30:	d9402417 	ldw	r5,144(sp)
    6b34:	d9002017 	ldw	r4,128(sp)
    6b38:	d8801d05 	stb	r2,116(sp)
    6b3c:	00801e04 	movi	r2,120
    6b40:	d8801d45 	stb	r2,117(sp)
    6b44:	d8001d85 	stb	zero,118(sp)
    6b48:	b811883a 	mov	r8,r23
    6b4c:	28c00104 	addi	r3,r5,4
    6b50:	2c800017 	ldw	r18,0(r5)
    6b54:	0029883a 	mov	r20,zero
    6b58:	88800094 	ori	r2,r17,2
    6b5c:	20036316 	blt	r4,zero,78ec <___svfiprintf_internal_r+0x10ac>
    6b60:	00bfdfc4 	movi	r2,-129
    6b64:	88a0703a 	and	r16,r17,r2
    6b68:	d8c02415 	stw	r3,144(sp)
    6b6c:	84000094 	ori	r16,r16,2
    6b70:	90031c26 	beq	r18,zero,77e4 <___svfiprintf_internal_r+0xfa4>
    6b74:	01400074 	movhi	r5,1
    6b78:	29785c04 	addi	r5,r5,-7824
    6b7c:	002b883a 	mov	r21,zero
    6b80:	d9402915 	stw	r5,164(sp)
    6b84:	00002906 	br	6c2c <___svfiprintf_internal_r+0x3ec>
    6b88:	8c400054 	ori	r17,r17,1
    6b8c:	98c00007 	ldb	r3,0(r19)
    6b90:	003f7706 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    6b94:	a8803fcc 	andi	r2,r21,255
    6b98:	1080201c 	xori	r2,r2,128
    6b9c:	10bfe004 	addi	r2,r2,-128
    6ba0:	10032a1e 	bne	r2,zero,784c <___svfiprintf_internal_r+0x100c>
    6ba4:	00c00044 	movi	r3,1
    6ba8:	d8c02105 	stb	r3,132(sp)
    6bac:	05400804 	movi	r21,32
    6bb0:	98c00007 	ldb	r3,0(r19)
    6bb4:	003f6e06 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    6bb8:	8821883a 	mov	r16,r17
    6bbc:	dc402103 	ldbu	r17,132(sp)
    6bc0:	b811883a 	mov	r8,r23
    6bc4:	8c403fcc 	andi	r17,r17,255
    6bc8:	8803f01e 	bne	r17,zero,7b8c <___svfiprintf_internal_r+0x134c>
    6bcc:	00800074 	movhi	r2,1
    6bd0:	10b85c04 	addi	r2,r2,-7824
    6bd4:	d8802915 	stw	r2,164(sp)
    6bd8:	8080080c 	andi	r2,r16,32
    6bdc:	1000cd26 	beq	r2,zero,6f14 <___svfiprintf_internal_r+0x6d4>
    6be0:	d9002417 	ldw	r4,144(sp)
    6be4:	24800017 	ldw	r18,0(r4)
    6be8:	25000117 	ldw	r20,4(r4)
    6bec:	21000204 	addi	r4,r4,8
    6bf0:	d9002415 	stw	r4,144(sp)
    6bf4:	8080004c 	andi	r2,r16,1
    6bf8:	1002c726 	beq	r2,zero,7718 <___svfiprintf_internal_r+0xed8>
    6bfc:	9504b03a 	or	r2,r18,r20
    6c00:	1003061e 	bne	r2,zero,781c <___svfiprintf_internal_r+0xfdc>
    6c04:	d9002017 	ldw	r4,128(sp)
    6c08:	d8001d85 	stb	zero,118(sp)
    6c0c:	20033e16 	blt	r4,zero,7908 <___svfiprintf_internal_r+0x10c8>
    6c10:	00bfdfc4 	movi	r2,-129
    6c14:	80a0703a 	and	r16,r16,r2
    6c18:	d9402017 	ldw	r5,128(sp)
    6c1c:	002b883a 	mov	r21,zero
    6c20:	28002826 	beq	r5,zero,6cc4 <___svfiprintf_internal_r+0x484>
    6c24:	0025883a 	mov	r18,zero
    6c28:	0029883a 	mov	r20,zero
    6c2c:	d9002917 	ldw	r4,164(sp)
    6c30:	dc401a04 	addi	r17,sp,104
    6c34:	908003cc 	andi	r2,r18,15
    6c38:	a006973a 	slli	r3,r20,28
    6c3c:	2085883a 	add	r2,r4,r2
    6c40:	9024d13a 	srli	r18,r18,4
    6c44:	10800003 	ldbu	r2,0(r2)
    6c48:	a028d13a 	srli	r20,r20,4
    6c4c:	8c7fffc4 	addi	r17,r17,-1
    6c50:	1ca4b03a 	or	r18,r3,r18
    6c54:	88800005 	stb	r2,0(r17)
    6c58:	9504b03a 	or	r2,r18,r20
    6c5c:	103ff51e 	bne	r2,zero,6c34 <__alt_mem_onchip_memory2_0+0xf7006c34>
    6c60:	d8801e17 	ldw	r2,120(sp)
    6c64:	1469c83a 	sub	r20,r2,r17
    6c68:	00001906 	br	6cd0 <___svfiprintf_internal_r+0x490>
    6c6c:	8821883a 	mov	r16,r17
    6c70:	dc402103 	ldbu	r17,132(sp)
    6c74:	b811883a 	mov	r8,r23
    6c78:	8c403fcc 	andi	r17,r17,255
    6c7c:	8803d01e 	bne	r17,zero,7bc0 <___svfiprintf_internal_r+0x1380>
    6c80:	8080080c 	andi	r2,r16,32
    6c84:	10016126 	beq	r2,zero,720c <___svfiprintf_internal_r+0x9cc>
    6c88:	d9002417 	ldw	r4,144(sp)
    6c8c:	d9402017 	ldw	r5,128(sp)
    6c90:	d8001d85 	stb	zero,118(sp)
    6c94:	20c00204 	addi	r3,r4,8
    6c98:	24800017 	ldw	r18,0(r4)
    6c9c:	25000117 	ldw	r20,4(r4)
    6ca0:	28030f16 	blt	r5,zero,78e0 <___svfiprintf_internal_r+0x10a0>
    6ca4:	013fdfc4 	movi	r4,-129
    6ca8:	9504b03a 	or	r2,r18,r20
    6cac:	d8c02415 	stw	r3,144(sp)
    6cb0:	8120703a 	and	r16,r16,r4
    6cb4:	002b883a 	mov	r21,zero
    6cb8:	1000cd1e 	bne	r2,zero,6ff0 <___svfiprintf_internal_r+0x7b0>
    6cbc:	d8c02017 	ldw	r3,128(sp)
    6cc0:	1803141e 	bne	r3,zero,7914 <___svfiprintf_internal_r+0x10d4>
    6cc4:	d8002015 	stw	zero,128(sp)
    6cc8:	0029883a 	mov	r20,zero
    6ccc:	dc401a04 	addi	r17,sp,104
    6cd0:	dc802017 	ldw	r18,128(sp)
    6cd4:	9500010e 	bge	r18,r20,6cdc <___svfiprintf_internal_r+0x49c>
    6cd8:	a025883a 	mov	r18,r20
    6cdc:	ad403fcc 	andi	r21,r21,255
    6ce0:	ad40201c 	xori	r21,r21,128
    6ce4:	ad7fe004 	addi	r21,r21,-128
    6ce8:	a8003f26 	beq	r21,zero,6de8 <___svfiprintf_internal_r+0x5a8>
    6cec:	94800044 	addi	r18,r18,1
    6cf0:	00003d06 	br	6de8 <___svfiprintf_internal_r+0x5a8>
    6cf4:	00c00044 	movi	r3,1
    6cf8:	d8c02105 	stb	r3,132(sp)
    6cfc:	05400ac4 	movi	r21,43
    6d00:	98c00007 	ldb	r3,0(r19)
    6d04:	003f1a06 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    6d08:	8821883a 	mov	r16,r17
    6d0c:	dc402103 	ldbu	r17,132(sp)
    6d10:	b811883a 	mov	r8,r23
    6d14:	8c403fcc 	andi	r17,r17,255
    6d18:	8803a71e 	bne	r17,zero,7bb8 <___svfiprintf_internal_r+0x1378>
    6d1c:	8080080c 	andi	r2,r16,32
    6d20:	10015726 	beq	r2,zero,7280 <___svfiprintf_internal_r+0xa40>
    6d24:	d8c02417 	ldw	r3,144(sp)
    6d28:	d9002017 	ldw	r4,128(sp)
    6d2c:	d8001d85 	stb	zero,118(sp)
    6d30:	18800204 	addi	r2,r3,8
    6d34:	1c800017 	ldw	r18,0(r3)
    6d38:	1d000117 	ldw	r20,4(r3)
    6d3c:	2002db16 	blt	r4,zero,78ac <___svfiprintf_internal_r+0x106c>
    6d40:	013fdfc4 	movi	r4,-129
    6d44:	9506b03a 	or	r3,r18,r20
    6d48:	d8802415 	stw	r2,144(sp)
    6d4c:	8120703a 	and	r16,r16,r4
    6d50:	18015826 	beq	r3,zero,72b4 <___svfiprintf_internal_r+0xa74>
    6d54:	002b883a 	mov	r21,zero
    6d58:	dc401a04 	addi	r17,sp,104
    6d5c:	9006d0fa 	srli	r3,r18,3
    6d60:	a008977a 	slli	r4,r20,29
    6d64:	a028d0fa 	srli	r20,r20,3
    6d68:	948001cc 	andi	r18,r18,7
    6d6c:	90800c04 	addi	r2,r18,48
    6d70:	8c7fffc4 	addi	r17,r17,-1
    6d74:	20e4b03a 	or	r18,r4,r3
    6d78:	88800005 	stb	r2,0(r17)
    6d7c:	9506b03a 	or	r3,r18,r20
    6d80:	183ff61e 	bne	r3,zero,6d5c <__alt_mem_onchip_memory2_0+0xf7006d5c>
    6d84:	80c0004c 	andi	r3,r16,1
    6d88:	18028926 	beq	r3,zero,77b0 <___svfiprintf_internal_r+0xf70>
    6d8c:	10803fcc 	andi	r2,r2,255
    6d90:	1080201c 	xori	r2,r2,128
    6d94:	10bfe004 	addi	r2,r2,-128
    6d98:	00c00c04 	movi	r3,48
    6d9c:	10ffb026 	beq	r2,r3,6c60 <__alt_mem_onchip_memory2_0+0xf7006c60>
    6da0:	88ffffc5 	stb	r3,-1(r17)
    6da4:	d8c01e17 	ldw	r3,120(sp)
    6da8:	88bfffc4 	addi	r2,r17,-1
    6dac:	1023883a 	mov	r17,r2
    6db0:	18a9c83a 	sub	r20,r3,r2
    6db4:	003fc606 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    6db8:	d8c02417 	ldw	r3,144(sp)
    6dbc:	04800044 	movi	r18,1
    6dc0:	8821883a 	mov	r16,r17
    6dc4:	18800017 	ldw	r2,0(r3)
    6dc8:	18c00104 	addi	r3,r3,4
    6dcc:	b811883a 	mov	r8,r23
    6dd0:	d8001d85 	stb	zero,118(sp)
    6dd4:	d8801005 	stb	r2,64(sp)
    6dd8:	d8c02415 	stw	r3,144(sp)
    6ddc:	9029883a 	mov	r20,r18
    6de0:	dc401004 	addi	r17,sp,64
    6de4:	d8002015 	stw	zero,128(sp)
    6de8:	80c0008c 	andi	r3,r16,2
    6dec:	d8c02115 	stw	r3,132(sp)
    6df0:	18000126 	beq	r3,zero,6df8 <___svfiprintf_internal_r+0x5b8>
    6df4:	94800084 	addi	r18,r18,2
    6df8:	80c0210c 	andi	r3,r16,132
    6dfc:	d8c02215 	stw	r3,136(sp)
    6e00:	1801321e 	bne	r3,zero,72cc <___svfiprintf_internal_r+0xa8c>
    6e04:	d9002517 	ldw	r4,148(sp)
    6e08:	24b9c83a 	sub	fp,r4,r18
    6e0c:	07012f0e 	bge	zero,fp,72cc <___svfiprintf_internal_r+0xa8c>
    6e10:	02400404 	movi	r9,16
    6e14:	d8c01c17 	ldw	r3,112(sp)
    6e18:	d8801b17 	ldw	r2,108(sp)
    6e1c:	4f03250e 	bge	r9,fp,7ab4 <___svfiprintf_internal_r+0x1274>
    6e20:	01000074 	movhi	r4,1
    6e24:	2138c104 	addi	r4,r4,-7420
    6e28:	dc002a15 	stw	r16,168(sp)
    6e2c:	dc402b15 	stw	r17,172(sp)
    6e30:	d9002815 	stw	r4,160(sp)
    6e34:	e023883a 	mov	r17,fp
    6e38:	482f883a 	mov	r23,r9
    6e3c:	9839883a 	mov	fp,r19
    6e40:	054001c4 	movi	r21,7
    6e44:	9027883a 	mov	r19,r18
    6e48:	dc002717 	ldw	r16,156(sp)
    6e4c:	dc802317 	ldw	r18,140(sp)
    6e50:	00000306 	br	6e60 <___svfiprintf_internal_r+0x620>
    6e54:	8c7ffc04 	addi	r17,r17,-16
    6e58:	42000204 	addi	r8,r8,8
    6e5c:	bc40130e 	bge	r23,r17,6eac <___svfiprintf_internal_r+0x66c>
    6e60:	01400074 	movhi	r5,1
    6e64:	18c00404 	addi	r3,r3,16
    6e68:	10800044 	addi	r2,r2,1
    6e6c:	2978c104 	addi	r5,r5,-7420
    6e70:	41400015 	stw	r5,0(r8)
    6e74:	45c00115 	stw	r23,4(r8)
    6e78:	d8c01c15 	stw	r3,112(sp)
    6e7c:	d8801b15 	stw	r2,108(sp)
    6e80:	a8bff40e 	bge	r21,r2,6e54 <__alt_mem_onchip_memory2_0+0xf7006e54>
    6e84:	d9801a04 	addi	r6,sp,104
    6e88:	900b883a 	mov	r5,r18
    6e8c:	8009883a 	mov	r4,r16
    6e90:	00066700 	call	6670 <__ssprint_r>
    6e94:	1001aa1e 	bne	r2,zero,7540 <___svfiprintf_internal_r+0xd00>
    6e98:	8c7ffc04 	addi	r17,r17,-16
    6e9c:	d8c01c17 	ldw	r3,112(sp)
    6ea0:	d8801b17 	ldw	r2,108(sp)
    6ea4:	d811883a 	mov	r8,sp
    6ea8:	bc7fed16 	blt	r23,r17,6e60 <__alt_mem_onchip_memory2_0+0xf7006e60>
    6eac:	9825883a 	mov	r18,r19
    6eb0:	dc002a17 	ldw	r16,168(sp)
    6eb4:	e027883a 	mov	r19,fp
    6eb8:	8839883a 	mov	fp,r17
    6ebc:	dc402b17 	ldw	r17,172(sp)
    6ec0:	d9002817 	ldw	r4,160(sp)
    6ec4:	e0c7883a 	add	r3,fp,r3
    6ec8:	10800044 	addi	r2,r2,1
    6ecc:	41000015 	stw	r4,0(r8)
    6ed0:	47000115 	stw	fp,4(r8)
    6ed4:	d8c01c15 	stw	r3,112(sp)
    6ed8:	d8801b15 	stw	r2,108(sp)
    6edc:	010001c4 	movi	r4,7
    6ee0:	20821616 	blt	r4,r2,773c <___svfiprintf_internal_r+0xefc>
    6ee4:	42000204 	addi	r8,r8,8
    6ee8:	0000fa06 	br	72d4 <___svfiprintf_internal_r+0xa94>
    6eec:	8821883a 	mov	r16,r17
    6ef0:	dc402103 	ldbu	r17,132(sp)
    6ef4:	b811883a 	mov	r8,r23
    6ef8:	8c403fcc 	andi	r17,r17,255
    6efc:	8803361e 	bne	r17,zero,7bd8 <___svfiprintf_internal_r+0x1398>
    6f00:	01400074 	movhi	r5,1
    6f04:	29785704 	addi	r5,r5,-7844
    6f08:	d9402915 	stw	r5,164(sp)
    6f0c:	8080080c 	andi	r2,r16,32
    6f10:	103f331e 	bne	r2,zero,6be0 <__alt_mem_onchip_memory2_0+0xf7006be0>
    6f14:	8080040c 	andi	r2,r16,16
    6f18:	1002551e 	bne	r2,zero,7870 <___svfiprintf_internal_r+0x1030>
    6f1c:	8080100c 	andi	r2,r16,64
    6f20:	1002a626 	beq	r2,zero,79bc <___svfiprintf_internal_r+0x117c>
    6f24:	d8802417 	ldw	r2,144(sp)
    6f28:	0029883a 	mov	r20,zero
    6f2c:	1480000b 	ldhu	r18,0(r2)
    6f30:	10800104 	addi	r2,r2,4
    6f34:	d8802415 	stw	r2,144(sp)
    6f38:	003f2e06 	br	6bf4 <__alt_mem_onchip_memory2_0+0xf7006bf4>
    6f3c:	8821883a 	mov	r16,r17
    6f40:	dc402103 	ldbu	r17,132(sp)
    6f44:	b811883a 	mov	r8,r23
    6f48:	8c403fcc 	andi	r17,r17,255
    6f4c:	88030b1e 	bne	r17,zero,7b7c <___svfiprintf_internal_r+0x133c>
    6f50:	8080080c 	andi	r2,r16,32
    6f54:	1002271e 	bne	r2,zero,77f4 <___svfiprintf_internal_r+0xfb4>
    6f58:	8080040c 	andi	r2,r16,16
    6f5c:	10028e26 	beq	r2,zero,7998 <___svfiprintf_internal_r+0x1158>
    6f60:	d8c02417 	ldw	r3,144(sp)
    6f64:	d9002617 	ldw	r4,152(sp)
    6f68:	18800017 	ldw	r2,0(r3)
    6f6c:	18c00104 	addi	r3,r3,4
    6f70:	d8c02415 	stw	r3,144(sp)
    6f74:	11000015 	stw	r4,0(r2)
    6f78:	003e5306 	br	68c8 <__alt_mem_onchip_memory2_0+0xf70068c8>
    6f7c:	98c00007 	ldb	r3,0(r19)
    6f80:	01401b04 	movi	r5,108
    6f84:	19424f26 	beq	r3,r5,78c4 <___svfiprintf_internal_r+0x1084>
    6f88:	8c400414 	ori	r17,r17,16
    6f8c:	003e7806 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    6f90:	8c401014 	ori	r17,r17,64
    6f94:	98c00007 	ldb	r3,0(r19)
    6f98:	003e7506 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    6f9c:	8821883a 	mov	r16,r17
    6fa0:	dc402103 	ldbu	r17,132(sp)
    6fa4:	b811883a 	mov	r8,r23
    6fa8:	8c403fcc 	andi	r17,r17,255
    6fac:	8802fe1e 	bne	r17,zero,7ba8 <___svfiprintf_internal_r+0x1368>
    6fb0:	8080080c 	andi	r2,r16,32
    6fb4:	10004626 	beq	r2,zero,70d0 <___svfiprintf_internal_r+0x890>
    6fb8:	d9002417 	ldw	r4,144(sp)
    6fbc:	20800117 	ldw	r2,4(r4)
    6fc0:	24800017 	ldw	r18,0(r4)
    6fc4:	21000204 	addi	r4,r4,8
    6fc8:	d9002415 	stw	r4,144(sp)
    6fcc:	1029883a 	mov	r20,r2
    6fd0:	10004a16 	blt	r2,zero,70fc <___svfiprintf_internal_r+0x8bc>
    6fd4:	d9002017 	ldw	r4,128(sp)
    6fd8:	dd401d83 	ldbu	r21,118(sp)
    6fdc:	2001eb16 	blt	r4,zero,778c <___svfiprintf_internal_r+0xf4c>
    6fe0:	00ffdfc4 	movi	r3,-129
    6fe4:	9504b03a 	or	r2,r18,r20
    6fe8:	80e0703a 	and	r16,r16,r3
    6fec:	103f3326 	beq	r2,zero,6cbc <__alt_mem_onchip_memory2_0+0xf7006cbc>
    6ff0:	a0009426 	beq	r20,zero,7244 <___svfiprintf_internal_r+0xa04>
    6ff4:	dc401a04 	addi	r17,sp,104
    6ff8:	402f883a 	mov	r23,r8
    6ffc:	9009883a 	mov	r4,r18
    7000:	a00b883a 	mov	r5,r20
    7004:	01800284 	movi	r6,10
    7008:	000f883a 	mov	r7,zero
    700c:	0008fe00 	call	8fe0 <__umoddi3>
    7010:	10800c04 	addi	r2,r2,48
    7014:	8c7fffc4 	addi	r17,r17,-1
    7018:	9009883a 	mov	r4,r18
    701c:	a00b883a 	mov	r5,r20
    7020:	88800005 	stb	r2,0(r17)
    7024:	01800284 	movi	r6,10
    7028:	000f883a 	mov	r7,zero
    702c:	00089e40 	call	89e4 <__udivdi3>
    7030:	1025883a 	mov	r18,r2
    7034:	10c4b03a 	or	r2,r2,r3
    7038:	1829883a 	mov	r20,r3
    703c:	103fef1e 	bne	r2,zero,6ffc <__alt_mem_onchip_memory2_0+0xf7006ffc>
    7040:	d9001e17 	ldw	r4,120(sp)
    7044:	b811883a 	mov	r8,r23
    7048:	2469c83a 	sub	r20,r4,r17
    704c:	003f2006 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    7050:	d8802417 	ldw	r2,144(sp)
    7054:	8821883a 	mov	r16,r17
    7058:	d8001d85 	stb	zero,118(sp)
    705c:	14400017 	ldw	r17,0(r2)
    7060:	b811883a 	mov	r8,r23
    7064:	15c00104 	addi	r23,r2,4
    7068:	88026c26 	beq	r17,zero,7a1c <___svfiprintf_internal_r+0x11dc>
    706c:	d8c02017 	ldw	r3,128(sp)
    7070:	18025f16 	blt	r3,zero,79f0 <___svfiprintf_internal_r+0x11b0>
    7074:	180d883a 	mov	r6,r3
    7078:	000b883a 	mov	r5,zero
    707c:	8809883a 	mov	r4,r17
    7080:	da002d15 	stw	r8,180(sp)
    7084:	00051e80 	call	51e8 <memchr>
    7088:	da002d17 	ldw	r8,180(sp)
    708c:	1002a526 	beq	r2,zero,7b24 <___svfiprintf_internal_r+0x12e4>
    7090:	1469c83a 	sub	r20,r2,r17
    7094:	dd401d83 	ldbu	r21,118(sp)
    7098:	ddc02415 	stw	r23,144(sp)
    709c:	d8002015 	stw	zero,128(sp)
    70a0:	003f0b06 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    70a4:	8c400814 	ori	r17,r17,32
    70a8:	98c00007 	ldb	r3,0(r19)
    70ac:	003e3006 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    70b0:	8821883a 	mov	r16,r17
    70b4:	dc402103 	ldbu	r17,132(sp)
    70b8:	b811883a 	mov	r8,r23
    70bc:	8c403fcc 	andi	r17,r17,255
    70c0:	8802b01e 	bne	r17,zero,7b84 <___svfiprintf_internal_r+0x1344>
    70c4:	84000414 	ori	r16,r16,16
    70c8:	8080080c 	andi	r2,r16,32
    70cc:	103fba1e 	bne	r2,zero,6fb8 <__alt_mem_onchip_memory2_0+0xf7006fb8>
    70d0:	8080040c 	andi	r2,r16,16
    70d4:	1001df1e 	bne	r2,zero,7854 <___svfiprintf_internal_r+0x1014>
    70d8:	8080100c 	andi	r2,r16,64
    70dc:	10023d26 	beq	r2,zero,79d4 <___svfiprintf_internal_r+0x1194>
    70e0:	d8802417 	ldw	r2,144(sp)
    70e4:	1480000f 	ldh	r18,0(r2)
    70e8:	10800104 	addi	r2,r2,4
    70ec:	d8802415 	stw	r2,144(sp)
    70f0:	9029d7fa 	srai	r20,r18,31
    70f4:	a005883a 	mov	r2,r20
    70f8:	103fb60e 	bge	r2,zero,6fd4 <__alt_mem_onchip_memory2_0+0xf7006fd4>
    70fc:	d9402017 	ldw	r5,128(sp)
    7100:	04a5c83a 	sub	r18,zero,r18
    7104:	05400b44 	movi	r21,45
    7108:	9004c03a 	cmpne	r2,r18,zero
    710c:	0529c83a 	sub	r20,zero,r20
    7110:	dd401d85 	stb	r21,118(sp)
    7114:	a0a9c83a 	sub	r20,r20,r2
    7118:	28026c16 	blt	r5,zero,7acc <___svfiprintf_internal_r+0x128c>
    711c:	00bfdfc4 	movi	r2,-129
    7120:	80a0703a 	and	r16,r16,r2
    7124:	a03fb31e 	bne	r20,zero,6ff4 <__alt_mem_onchip_memory2_0+0xf7006ff4>
    7128:	00004606 	br	7244 <___svfiprintf_internal_r+0xa04>
    712c:	9839883a 	mov	fp,r19
    7130:	d8002515 	stw	zero,148(sp)
    7134:	1c3ff404 	addi	r16,r3,-48
    7138:	0009883a 	mov	r4,zero
    713c:	01400284 	movi	r5,10
    7140:	0000b940 	call	b94 <__mulsi3>
    7144:	e0c00007 	ldb	r3,0(fp)
    7148:	8089883a 	add	r4,r16,r2
    714c:	9cc00044 	addi	r19,r19,1
    7150:	1c3ff404 	addi	r16,r3,-48
    7154:	9839883a 	mov	fp,r19
    7158:	a43ff82e 	bgeu	r20,r16,713c <__alt_mem_onchip_memory2_0+0xf700713c>
    715c:	d9002515 	stw	r4,148(sp)
    7160:	18bff804 	addi	r2,r3,-32
    7164:	90be052e 	bgeu	r18,r2,697c <__alt_mem_onchip_memory2_0+0xf700697c>
    7168:	8821883a 	mov	r16,r17
    716c:	dc402103 	ldbu	r17,132(sp)
    7170:	b811883a 	mov	r8,r23
    7174:	8c403fcc 	andi	r17,r17,255
    7178:	88028d1e 	bne	r17,zero,7bb0 <___svfiprintf_internal_r+0x1370>
    717c:	1800ea26 	beq	r3,zero,7528 <___svfiprintf_internal_r+0xce8>
    7180:	04800044 	movi	r18,1
    7184:	d8c01005 	stb	r3,64(sp)
    7188:	d8001d85 	stb	zero,118(sp)
    718c:	9029883a 	mov	r20,r18
    7190:	dc401004 	addi	r17,sp,64
    7194:	003f1306 	br	6de4 <__alt_mem_onchip_memory2_0+0xf7006de4>
    7198:	8c402014 	ori	r17,r17,128
    719c:	98c00007 	ldb	r3,0(r19)
    71a0:	003df306 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    71a4:	98c00007 	ldb	r3,0(r19)
    71a8:	01000a84 	movi	r4,42
    71ac:	9f000044 	addi	fp,r19,1
    71b0:	19026326 	beq	r3,r4,7b40 <___svfiprintf_internal_r+0x1300>
    71b4:	1c3ff404 	addi	r16,r3,-48
    71b8:	0009883a 	mov	r4,zero
    71bc:	a4025636 	bltu	r20,r16,7b18 <___svfiprintf_internal_r+0x12d8>
    71c0:	01400284 	movi	r5,10
    71c4:	0000b940 	call	b94 <__mulsi3>
    71c8:	e0c00007 	ldb	r3,0(fp)
    71cc:	1409883a 	add	r4,r2,r16
    71d0:	e4c00044 	addi	r19,fp,1
    71d4:	1c3ff404 	addi	r16,r3,-48
    71d8:	9839883a 	mov	fp,r19
    71dc:	a43ff82e 	bgeu	r20,r16,71c0 <__alt_mem_onchip_memory2_0+0xf70071c0>
    71e0:	20020c16 	blt	r4,zero,7a14 <___svfiprintf_internal_r+0x11d4>
    71e4:	d9002015 	stw	r4,128(sp)
    71e8:	003de206 	br	6974 <__alt_mem_onchip_memory2_0+0xf7006974>
    71ec:	8821883a 	mov	r16,r17
    71f0:	dc402103 	ldbu	r17,132(sp)
    71f4:	b811883a 	mov	r8,r23
    71f8:	8c403fcc 	andi	r17,r17,255
    71fc:	8802721e 	bne	r17,zero,7bc8 <___svfiprintf_internal_r+0x1388>
    7200:	84000414 	ori	r16,r16,16
    7204:	8080080c 	andi	r2,r16,32
    7208:	103e9f1e 	bne	r2,zero,6c88 <__alt_mem_onchip_memory2_0+0xf7006c88>
    720c:	8080040c 	andi	r2,r16,16
    7210:	10015326 	beq	r2,zero,7760 <___svfiprintf_internal_r+0xf20>
    7214:	d8c02417 	ldw	r3,144(sp)
    7218:	d9002017 	ldw	r4,128(sp)
    721c:	d8001d85 	stb	zero,118(sp)
    7220:	18800104 	addi	r2,r3,4
    7224:	1c800017 	ldw	r18,0(r3)
    7228:	0029883a 	mov	r20,zero
    722c:	20015516 	blt	r4,zero,7784 <___svfiprintf_internal_r+0xf44>
    7230:	00ffdfc4 	movi	r3,-129
    7234:	d8802415 	stw	r2,144(sp)
    7238:	80e0703a 	and	r16,r16,r3
    723c:	002b883a 	mov	r21,zero
    7240:	903e9e26 	beq	r18,zero,6cbc <__alt_mem_onchip_memory2_0+0xf7006cbc>
    7244:	00800244 	movi	r2,9
    7248:	14bf6a36 	bltu	r2,r18,6ff4 <__alt_mem_onchip_memory2_0+0xf7006ff4>
    724c:	94800c04 	addi	r18,r18,48
    7250:	dc8019c5 	stb	r18,103(sp)
    7254:	dd002c17 	ldw	r20,176(sp)
    7258:	dc4019c4 	addi	r17,sp,103
    725c:	003e9c06 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    7260:	8821883a 	mov	r16,r17
    7264:	dc402103 	ldbu	r17,132(sp)
    7268:	b811883a 	mov	r8,r23
    726c:	8c403fcc 	andi	r17,r17,255
    7270:	8802571e 	bne	r17,zero,7bd0 <___svfiprintf_internal_r+0x1390>
    7274:	84000414 	ori	r16,r16,16
    7278:	8080080c 	andi	r2,r16,32
    727c:	103ea91e 	bne	r2,zero,6d24 <__alt_mem_onchip_memory2_0+0xf7006d24>
    7280:	8080040c 	andi	r2,r16,16
    7284:	10018026 	beq	r2,zero,7888 <___svfiprintf_internal_r+0x1048>
    7288:	d9402417 	ldw	r5,144(sp)
    728c:	d8c02017 	ldw	r3,128(sp)
    7290:	d8001d85 	stb	zero,118(sp)
    7294:	28800104 	addi	r2,r5,4
    7298:	2c800017 	ldw	r18,0(r5)
    729c:	0029883a 	mov	r20,zero
    72a0:	18018216 	blt	r3,zero,78ac <___svfiprintf_internal_r+0x106c>
    72a4:	00ffdfc4 	movi	r3,-129
    72a8:	d8802415 	stw	r2,144(sp)
    72ac:	80e0703a 	and	r16,r16,r3
    72b0:	903ea81e 	bne	r18,zero,6d54 <__alt_mem_onchip_memory2_0+0xf7006d54>
    72b4:	d8802017 	ldw	r2,128(sp)
    72b8:	002b883a 	mov	r21,zero
    72bc:	1001f226 	beq	r2,zero,7a88 <___svfiprintf_internal_r+0x1248>
    72c0:	0025883a 	mov	r18,zero
    72c4:	0029883a 	mov	r20,zero
    72c8:	003ea306 	br	6d58 <__alt_mem_onchip_memory2_0+0xf7006d58>
    72cc:	d8c01c17 	ldw	r3,112(sp)
    72d0:	d8801b17 	ldw	r2,108(sp)
    72d4:	d9001d87 	ldb	r4,118(sp)
    72d8:	20000b26 	beq	r4,zero,7308 <___svfiprintf_internal_r+0xac8>
    72dc:	d9001d84 	addi	r4,sp,118
    72e0:	18c00044 	addi	r3,r3,1
    72e4:	10800044 	addi	r2,r2,1
    72e8:	41000015 	stw	r4,0(r8)
    72ec:	01000044 	movi	r4,1
    72f0:	41000115 	stw	r4,4(r8)
    72f4:	d8c01c15 	stw	r3,112(sp)
    72f8:	d8801b15 	stw	r2,108(sp)
    72fc:	010001c4 	movi	r4,7
    7300:	2080f316 	blt	r4,r2,76d0 <___svfiprintf_internal_r+0xe90>
    7304:	42000204 	addi	r8,r8,8
    7308:	d9402117 	ldw	r5,132(sp)
    730c:	28000b26 	beq	r5,zero,733c <___svfiprintf_internal_r+0xafc>
    7310:	d9001d04 	addi	r4,sp,116
    7314:	18c00084 	addi	r3,r3,2
    7318:	10800044 	addi	r2,r2,1
    731c:	41000015 	stw	r4,0(r8)
    7320:	01000084 	movi	r4,2
    7324:	41000115 	stw	r4,4(r8)
    7328:	d8c01c15 	stw	r3,112(sp)
    732c:	d8801b15 	stw	r2,108(sp)
    7330:	010001c4 	movi	r4,7
    7334:	2080ef16 	blt	r4,r2,76f4 <___svfiprintf_internal_r+0xeb4>
    7338:	42000204 	addi	r8,r8,8
    733c:	d9402217 	ldw	r5,136(sp)
    7340:	01002004 	movi	r4,128
    7344:	29008f26 	beq	r5,r4,7584 <___svfiprintf_internal_r+0xd44>
    7348:	d9002017 	ldw	r4,128(sp)
    734c:	252fc83a 	sub	r23,r4,r20
    7350:	05c0310e 	bge	zero,r23,7418 <___svfiprintf_internal_r+0xbd8>
    7354:	07000404 	movi	fp,16
    7358:	e5c17d0e 	bge	fp,r23,7950 <___svfiprintf_internal_r+0x1110>
    735c:	01000074 	movhi	r4,1
    7360:	2138bd04 	addi	r4,r4,-7436
    7364:	dc002015 	stw	r16,128(sp)
    7368:	dc402215 	stw	r17,136(sp)
    736c:	d9002115 	stw	r4,132(sp)
    7370:	b823883a 	mov	r17,r23
    7374:	054001c4 	movi	r21,7
    7378:	982f883a 	mov	r23,r19
    737c:	dc002717 	ldw	r16,156(sp)
    7380:	9027883a 	mov	r19,r18
    7384:	dc802317 	ldw	r18,140(sp)
    7388:	00000306 	br	7398 <___svfiprintf_internal_r+0xb58>
    738c:	8c7ffc04 	addi	r17,r17,-16
    7390:	42000204 	addi	r8,r8,8
    7394:	e440110e 	bge	fp,r17,73dc <___svfiprintf_internal_r+0xb9c>
    7398:	18c00404 	addi	r3,r3,16
    739c:	10800044 	addi	r2,r2,1
    73a0:	45800015 	stw	r22,0(r8)
    73a4:	47000115 	stw	fp,4(r8)
    73a8:	d8c01c15 	stw	r3,112(sp)
    73ac:	d8801b15 	stw	r2,108(sp)
    73b0:	a8bff60e 	bge	r21,r2,738c <__alt_mem_onchip_memory2_0+0xf700738c>
    73b4:	d9801a04 	addi	r6,sp,104
    73b8:	900b883a 	mov	r5,r18
    73bc:	8009883a 	mov	r4,r16
    73c0:	00066700 	call	6670 <__ssprint_r>
    73c4:	10005e1e 	bne	r2,zero,7540 <___svfiprintf_internal_r+0xd00>
    73c8:	8c7ffc04 	addi	r17,r17,-16
    73cc:	d8c01c17 	ldw	r3,112(sp)
    73d0:	d8801b17 	ldw	r2,108(sp)
    73d4:	d811883a 	mov	r8,sp
    73d8:	e47fef16 	blt	fp,r17,7398 <__alt_mem_onchip_memory2_0+0xf7007398>
    73dc:	9825883a 	mov	r18,r19
    73e0:	dc002017 	ldw	r16,128(sp)
    73e4:	b827883a 	mov	r19,r23
    73e8:	882f883a 	mov	r23,r17
    73ec:	dc402217 	ldw	r17,136(sp)
    73f0:	d9402117 	ldw	r5,132(sp)
    73f4:	1dc7883a 	add	r3,r3,r23
    73f8:	10800044 	addi	r2,r2,1
    73fc:	41400015 	stw	r5,0(r8)
    7400:	45c00115 	stw	r23,4(r8)
    7404:	d8c01c15 	stw	r3,112(sp)
    7408:	d8801b15 	stw	r2,108(sp)
    740c:	010001c4 	movi	r4,7
    7410:	2080a616 	blt	r4,r2,76ac <___svfiprintf_internal_r+0xe6c>
    7414:	42000204 	addi	r8,r8,8
    7418:	a0c7883a 	add	r3,r20,r3
    741c:	10800044 	addi	r2,r2,1
    7420:	44400015 	stw	r17,0(r8)
    7424:	45000115 	stw	r20,4(r8)
    7428:	d8c01c15 	stw	r3,112(sp)
    742c:	d8801b15 	stw	r2,108(sp)
    7430:	010001c4 	movi	r4,7
    7434:	20808816 	blt	r4,r2,7658 <___svfiprintf_internal_r+0xe18>
    7438:	42000204 	addi	r8,r8,8
    743c:	8400010c 	andi	r16,r16,4
    7440:	80002c26 	beq	r16,zero,74f4 <___svfiprintf_internal_r+0xcb4>
    7444:	d8802517 	ldw	r2,148(sp)
    7448:	14a1c83a 	sub	r16,r2,r18
    744c:	0400290e 	bge	zero,r16,74f4 <___svfiprintf_internal_r+0xcb4>
    7450:	04400404 	movi	r17,16
    7454:	d8801b17 	ldw	r2,108(sp)
    7458:	8c01a70e 	bge	r17,r16,7af8 <___svfiprintf_internal_r+0x12b8>
    745c:	01400074 	movhi	r5,1
    7460:	2978c104 	addi	r5,r5,-7420
    7464:	d9402815 	stw	r5,160(sp)
    7468:	050001c4 	movi	r20,7
    746c:	dd402717 	ldw	r21,156(sp)
    7470:	ddc02317 	ldw	r23,140(sp)
    7474:	00000306 	br	7484 <___svfiprintf_internal_r+0xc44>
    7478:	843ffc04 	addi	r16,r16,-16
    747c:	42000204 	addi	r8,r8,8
    7480:	8c00130e 	bge	r17,r16,74d0 <___svfiprintf_internal_r+0xc90>
    7484:	01000074 	movhi	r4,1
    7488:	18c00404 	addi	r3,r3,16
    748c:	10800044 	addi	r2,r2,1
    7490:	2138c104 	addi	r4,r4,-7420
    7494:	41000015 	stw	r4,0(r8)
    7498:	44400115 	stw	r17,4(r8)
    749c:	d8c01c15 	stw	r3,112(sp)
    74a0:	d8801b15 	stw	r2,108(sp)
    74a4:	a0bff40e 	bge	r20,r2,7478 <__alt_mem_onchip_memory2_0+0xf7007478>
    74a8:	d9801a04 	addi	r6,sp,104
    74ac:	b80b883a 	mov	r5,r23
    74b0:	a809883a 	mov	r4,r21
    74b4:	00066700 	call	6670 <__ssprint_r>
    74b8:	1000211e 	bne	r2,zero,7540 <___svfiprintf_internal_r+0xd00>
    74bc:	843ffc04 	addi	r16,r16,-16
    74c0:	d8c01c17 	ldw	r3,112(sp)
    74c4:	d8801b17 	ldw	r2,108(sp)
    74c8:	d811883a 	mov	r8,sp
    74cc:	8c3fed16 	blt	r17,r16,7484 <__alt_mem_onchip_memory2_0+0xf7007484>
    74d0:	d9402817 	ldw	r5,160(sp)
    74d4:	1c07883a 	add	r3,r3,r16
    74d8:	10800044 	addi	r2,r2,1
    74dc:	41400015 	stw	r5,0(r8)
    74e0:	44000115 	stw	r16,4(r8)
    74e4:	d8c01c15 	stw	r3,112(sp)
    74e8:	d8801b15 	stw	r2,108(sp)
    74ec:	010001c4 	movi	r4,7
    74f0:	2080b516 	blt	r4,r2,77c8 <___svfiprintf_internal_r+0xf88>
    74f4:	d8802517 	ldw	r2,148(sp)
    74f8:	1480010e 	bge	r2,r18,7500 <___svfiprintf_internal_r+0xcc0>
    74fc:	9005883a 	mov	r2,r18
    7500:	d9002617 	ldw	r4,152(sp)
    7504:	2089883a 	add	r4,r4,r2
    7508:	d9002615 	stw	r4,152(sp)
    750c:	18005a1e 	bne	r3,zero,7678 <___svfiprintf_internal_r+0xe38>
    7510:	98800007 	ldb	r2,0(r19)
    7514:	d8001b15 	stw	zero,108(sp)
    7518:	d811883a 	mov	r8,sp
    751c:	103cec1e 	bne	r2,zero,68d0 <__alt_mem_onchip_memory2_0+0xf70068d0>
    7520:	9825883a 	mov	r18,r19
    7524:	003d0206 	br	6930 <__alt_mem_onchip_memory2_0+0xf7006930>
    7528:	d8801c17 	ldw	r2,112(sp)
    752c:	10000426 	beq	r2,zero,7540 <___svfiprintf_internal_r+0xd00>
    7530:	d9402317 	ldw	r5,140(sp)
    7534:	d9002717 	ldw	r4,156(sp)
    7538:	d9801a04 	addi	r6,sp,104
    753c:	00066700 	call	6670 <__ssprint_r>
    7540:	d9402317 	ldw	r5,140(sp)
    7544:	d8802617 	ldw	r2,152(sp)
    7548:	28c0030b 	ldhu	r3,12(r5)
    754c:	18c0100c 	andi	r3,r3,64
    7550:	18015c1e 	bne	r3,zero,7ac4 <___svfiprintf_internal_r+0x1284>
    7554:	dfc03717 	ldw	ra,220(sp)
    7558:	df003617 	ldw	fp,216(sp)
    755c:	ddc03517 	ldw	r23,212(sp)
    7560:	dd803417 	ldw	r22,208(sp)
    7564:	dd403317 	ldw	r21,204(sp)
    7568:	dd003217 	ldw	r20,200(sp)
    756c:	dcc03117 	ldw	r19,196(sp)
    7570:	dc803017 	ldw	r18,192(sp)
    7574:	dc402f17 	ldw	r17,188(sp)
    7578:	dc002e17 	ldw	r16,184(sp)
    757c:	dec03804 	addi	sp,sp,224
    7580:	f800283a 	ret
    7584:	d9002517 	ldw	r4,148(sp)
    7588:	24afc83a 	sub	r23,r4,r18
    758c:	05ff6e0e 	bge	zero,r23,7348 <__alt_mem_onchip_memory2_0+0xf7007348>
    7590:	07000404 	movi	fp,16
    7594:	e5c15c0e 	bge	fp,r23,7b08 <___svfiprintf_internal_r+0x12c8>
    7598:	01000074 	movhi	r4,1
    759c:	2138bd04 	addi	r4,r4,-7436
    75a0:	dc002215 	stw	r16,136(sp)
    75a4:	dc402815 	stw	r17,160(sp)
    75a8:	d9002115 	stw	r4,132(sp)
    75ac:	b823883a 	mov	r17,r23
    75b0:	054001c4 	movi	r21,7
    75b4:	982f883a 	mov	r23,r19
    75b8:	dc002717 	ldw	r16,156(sp)
    75bc:	9027883a 	mov	r19,r18
    75c0:	dc802317 	ldw	r18,140(sp)
    75c4:	00000306 	br	75d4 <___svfiprintf_internal_r+0xd94>
    75c8:	8c7ffc04 	addi	r17,r17,-16
    75cc:	42000204 	addi	r8,r8,8
    75d0:	e440110e 	bge	fp,r17,7618 <___svfiprintf_internal_r+0xdd8>
    75d4:	18c00404 	addi	r3,r3,16
    75d8:	10800044 	addi	r2,r2,1
    75dc:	45800015 	stw	r22,0(r8)
    75e0:	47000115 	stw	fp,4(r8)
    75e4:	d8c01c15 	stw	r3,112(sp)
    75e8:	d8801b15 	stw	r2,108(sp)
    75ec:	a8bff60e 	bge	r21,r2,75c8 <__alt_mem_onchip_memory2_0+0xf70075c8>
    75f0:	d9801a04 	addi	r6,sp,104
    75f4:	900b883a 	mov	r5,r18
    75f8:	8009883a 	mov	r4,r16
    75fc:	00066700 	call	6670 <__ssprint_r>
    7600:	103fcf1e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    7604:	8c7ffc04 	addi	r17,r17,-16
    7608:	d8c01c17 	ldw	r3,112(sp)
    760c:	d8801b17 	ldw	r2,108(sp)
    7610:	d811883a 	mov	r8,sp
    7614:	e47fef16 	blt	fp,r17,75d4 <__alt_mem_onchip_memory2_0+0xf70075d4>
    7618:	9825883a 	mov	r18,r19
    761c:	dc002217 	ldw	r16,136(sp)
    7620:	b827883a 	mov	r19,r23
    7624:	882f883a 	mov	r23,r17
    7628:	dc402817 	ldw	r17,160(sp)
    762c:	d9402117 	ldw	r5,132(sp)
    7630:	1dc7883a 	add	r3,r3,r23
    7634:	10800044 	addi	r2,r2,1
    7638:	41400015 	stw	r5,0(r8)
    763c:	45c00115 	stw	r23,4(r8)
    7640:	d8c01c15 	stw	r3,112(sp)
    7644:	d8801b15 	stw	r2,108(sp)
    7648:	010001c4 	movi	r4,7
    764c:	2080b716 	blt	r4,r2,792c <___svfiprintf_internal_r+0x10ec>
    7650:	42000204 	addi	r8,r8,8
    7654:	003f3c06 	br	7348 <__alt_mem_onchip_memory2_0+0xf7007348>
    7658:	d9402317 	ldw	r5,140(sp)
    765c:	d9002717 	ldw	r4,156(sp)
    7660:	d9801a04 	addi	r6,sp,104
    7664:	00066700 	call	6670 <__ssprint_r>
    7668:	103fb51e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    766c:	d8c01c17 	ldw	r3,112(sp)
    7670:	d811883a 	mov	r8,sp
    7674:	003f7106 	br	743c <__alt_mem_onchip_memory2_0+0xf700743c>
    7678:	d9402317 	ldw	r5,140(sp)
    767c:	d9002717 	ldw	r4,156(sp)
    7680:	d9801a04 	addi	r6,sp,104
    7684:	00066700 	call	6670 <__ssprint_r>
    7688:	103fa126 	beq	r2,zero,7510 <__alt_mem_onchip_memory2_0+0xf7007510>
    768c:	003fac06 	br	7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    7690:	d9402317 	ldw	r5,140(sp)
    7694:	d9002717 	ldw	r4,156(sp)
    7698:	d9801a04 	addi	r6,sp,104
    769c:	00066700 	call	6670 <__ssprint_r>
    76a0:	103fa71e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    76a4:	d811883a 	mov	r8,sp
    76a8:	003c9e06 	br	6924 <__alt_mem_onchip_memory2_0+0xf7006924>
    76ac:	d9402317 	ldw	r5,140(sp)
    76b0:	d9002717 	ldw	r4,156(sp)
    76b4:	d9801a04 	addi	r6,sp,104
    76b8:	00066700 	call	6670 <__ssprint_r>
    76bc:	103fa01e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    76c0:	d8c01c17 	ldw	r3,112(sp)
    76c4:	d8801b17 	ldw	r2,108(sp)
    76c8:	d811883a 	mov	r8,sp
    76cc:	003f5206 	br	7418 <__alt_mem_onchip_memory2_0+0xf7007418>
    76d0:	d9402317 	ldw	r5,140(sp)
    76d4:	d9002717 	ldw	r4,156(sp)
    76d8:	d9801a04 	addi	r6,sp,104
    76dc:	00066700 	call	6670 <__ssprint_r>
    76e0:	103f971e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    76e4:	d8c01c17 	ldw	r3,112(sp)
    76e8:	d8801b17 	ldw	r2,108(sp)
    76ec:	d811883a 	mov	r8,sp
    76f0:	003f0506 	br	7308 <__alt_mem_onchip_memory2_0+0xf7007308>
    76f4:	d9402317 	ldw	r5,140(sp)
    76f8:	d9002717 	ldw	r4,156(sp)
    76fc:	d9801a04 	addi	r6,sp,104
    7700:	00066700 	call	6670 <__ssprint_r>
    7704:	103f8e1e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    7708:	d8c01c17 	ldw	r3,112(sp)
    770c:	d8801b17 	ldw	r2,108(sp)
    7710:	d811883a 	mov	r8,sp
    7714:	003f0906 	br	733c <__alt_mem_onchip_memory2_0+0xf700733c>
    7718:	d9402017 	ldw	r5,128(sp)
    771c:	d8001d85 	stb	zero,118(sp)
    7720:	28007716 	blt	r5,zero,7900 <___svfiprintf_internal_r+0x10c0>
    7724:	00ffdfc4 	movi	r3,-129
    7728:	9504b03a 	or	r2,r18,r20
    772c:	80e0703a 	and	r16,r16,r3
    7730:	103d3926 	beq	r2,zero,6c18 <__alt_mem_onchip_memory2_0+0xf7006c18>
    7734:	002b883a 	mov	r21,zero
    7738:	003d3c06 	br	6c2c <__alt_mem_onchip_memory2_0+0xf7006c2c>
    773c:	d9402317 	ldw	r5,140(sp)
    7740:	d9002717 	ldw	r4,156(sp)
    7744:	d9801a04 	addi	r6,sp,104
    7748:	00066700 	call	6670 <__ssprint_r>
    774c:	103f7c1e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    7750:	d8c01c17 	ldw	r3,112(sp)
    7754:	d8801b17 	ldw	r2,108(sp)
    7758:	d811883a 	mov	r8,sp
    775c:	003edd06 	br	72d4 <__alt_mem_onchip_memory2_0+0xf70072d4>
    7760:	8080100c 	andi	r2,r16,64
    7764:	d8001d85 	stb	zero,118(sp)
    7768:	10008426 	beq	r2,zero,797c <___svfiprintf_internal_r+0x113c>
    776c:	d9402417 	ldw	r5,144(sp)
    7770:	d8c02017 	ldw	r3,128(sp)
    7774:	0029883a 	mov	r20,zero
    7778:	28800104 	addi	r2,r5,4
    777c:	2c80000b 	ldhu	r18,0(r5)
    7780:	183eab0e 	bge	r3,zero,7230 <__alt_mem_onchip_memory2_0+0xf7007230>
    7784:	d8802415 	stw	r2,144(sp)
    7788:	002b883a 	mov	r21,zero
    778c:	9504b03a 	or	r2,r18,r20
    7790:	103e171e 	bne	r2,zero,6ff0 <__alt_mem_onchip_memory2_0+0xf7006ff0>
    7794:	00800044 	movi	r2,1
    7798:	10803fcc 	andi	r2,r2,255
    779c:	00c00044 	movi	r3,1
    77a0:	10c05c26 	beq	r2,r3,7914 <___svfiprintf_internal_r+0x10d4>
    77a4:	00c00084 	movi	r3,2
    77a8:	10fd1e26 	beq	r2,r3,6c24 <__alt_mem_onchip_memory2_0+0xf7006c24>
    77ac:	003ec406 	br	72c0 <__alt_mem_onchip_memory2_0+0xf70072c0>
    77b0:	d9401e17 	ldw	r5,120(sp)
    77b4:	2c69c83a 	sub	r20,r5,r17
    77b8:	003d4506 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    77bc:	d8802415 	stw	r2,144(sp)
    77c0:	98c00007 	ldb	r3,0(r19)
    77c4:	003c6a06 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    77c8:	d9402317 	ldw	r5,140(sp)
    77cc:	d9002717 	ldw	r4,156(sp)
    77d0:	d9801a04 	addi	r6,sp,104
    77d4:	00066700 	call	6670 <__ssprint_r>
    77d8:	103f591e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    77dc:	d8c01c17 	ldw	r3,112(sp)
    77e0:	003f4406 	br	74f4 <__alt_mem_onchip_memory2_0+0xf70074f4>
    77e4:	01400074 	movhi	r5,1
    77e8:	29785c04 	addi	r5,r5,-7824
    77ec:	d9402915 	stw	r5,164(sp)
    77f0:	003d0906 	br	6c18 <__alt_mem_onchip_memory2_0+0xf7006c18>
    77f4:	d8c02417 	ldw	r3,144(sp)
    77f8:	d9002617 	ldw	r4,152(sp)
    77fc:	d9402417 	ldw	r5,144(sp)
    7800:	18800017 	ldw	r2,0(r3)
    7804:	2007d7fa 	srai	r3,r4,31
    7808:	29400104 	addi	r5,r5,4
    780c:	d9402415 	stw	r5,144(sp)
    7810:	11000015 	stw	r4,0(r2)
    7814:	10c00115 	stw	r3,4(r2)
    7818:	003c2b06 	br	68c8 <__alt_mem_onchip_memory2_0+0xf70068c8>
    781c:	d8c01d45 	stb	r3,117(sp)
    7820:	d8c02017 	ldw	r3,128(sp)
    7824:	00800c04 	movi	r2,48
    7828:	d8801d05 	stb	r2,116(sp)
    782c:	d8001d85 	stb	zero,118(sp)
    7830:	80800094 	ori	r2,r16,2
    7834:	1800ac16 	blt	r3,zero,7ae8 <___svfiprintf_internal_r+0x12a8>
    7838:	00bfdfc4 	movi	r2,-129
    783c:	80a0703a 	and	r16,r16,r2
    7840:	84000094 	ori	r16,r16,2
    7844:	002b883a 	mov	r21,zero
    7848:	003cf806 	br	6c2c <__alt_mem_onchip_memory2_0+0xf7006c2c>
    784c:	98c00007 	ldb	r3,0(r19)
    7850:	003c4706 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    7854:	d9402417 	ldw	r5,144(sp)
    7858:	2c800017 	ldw	r18,0(r5)
    785c:	29400104 	addi	r5,r5,4
    7860:	d9402415 	stw	r5,144(sp)
    7864:	9029d7fa 	srai	r20,r18,31
    7868:	a005883a 	mov	r2,r20
    786c:	003dd806 	br	6fd0 <__alt_mem_onchip_memory2_0+0xf7006fd0>
    7870:	d9402417 	ldw	r5,144(sp)
    7874:	0029883a 	mov	r20,zero
    7878:	2c800017 	ldw	r18,0(r5)
    787c:	29400104 	addi	r5,r5,4
    7880:	d9402415 	stw	r5,144(sp)
    7884:	003cdb06 	br	6bf4 <__alt_mem_onchip_memory2_0+0xf7006bf4>
    7888:	8080100c 	andi	r2,r16,64
    788c:	d8001d85 	stb	zero,118(sp)
    7890:	10003326 	beq	r2,zero,7960 <___svfiprintf_internal_r+0x1120>
    7894:	d9002417 	ldw	r4,144(sp)
    7898:	d9402017 	ldw	r5,128(sp)
    789c:	0029883a 	mov	r20,zero
    78a0:	20800104 	addi	r2,r4,4
    78a4:	2480000b 	ldhu	r18,0(r4)
    78a8:	283e7e0e 	bge	r5,zero,72a4 <__alt_mem_onchip_memory2_0+0xf70072a4>
    78ac:	9506b03a 	or	r3,r18,r20
    78b0:	d8802415 	stw	r2,144(sp)
    78b4:	183d271e 	bne	r3,zero,6d54 <__alt_mem_onchip_memory2_0+0xf7006d54>
    78b8:	002b883a 	mov	r21,zero
    78bc:	0005883a 	mov	r2,zero
    78c0:	003fb506 	br	7798 <__alt_mem_onchip_memory2_0+0xf7007798>
    78c4:	98c00043 	ldbu	r3,1(r19)
    78c8:	8c400814 	ori	r17,r17,32
    78cc:	9cc00044 	addi	r19,r19,1
    78d0:	18c03fcc 	andi	r3,r3,255
    78d4:	18c0201c 	xori	r3,r3,128
    78d8:	18ffe004 	addi	r3,r3,-128
    78dc:	003c2406 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    78e0:	d8c02415 	stw	r3,144(sp)
    78e4:	002b883a 	mov	r21,zero
    78e8:	003fa806 	br	778c <__alt_mem_onchip_memory2_0+0xf700778c>
    78ec:	01000074 	movhi	r4,1
    78f0:	21385c04 	addi	r4,r4,-7824
    78f4:	d9002915 	stw	r4,164(sp)
    78f8:	d8c02415 	stw	r3,144(sp)
    78fc:	1021883a 	mov	r16,r2
    7900:	9504b03a 	or	r2,r18,r20
    7904:	103f8b1e 	bne	r2,zero,7734 <__alt_mem_onchip_memory2_0+0xf7007734>
    7908:	002b883a 	mov	r21,zero
    790c:	00800084 	movi	r2,2
    7910:	003fa106 	br	7798 <__alt_mem_onchip_memory2_0+0xf7007798>
    7914:	0025883a 	mov	r18,zero
    7918:	94800c04 	addi	r18,r18,48
    791c:	dc8019c5 	stb	r18,103(sp)
    7920:	dd002c17 	ldw	r20,176(sp)
    7924:	dc4019c4 	addi	r17,sp,103
    7928:	003ce906 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    792c:	d9402317 	ldw	r5,140(sp)
    7930:	d9002717 	ldw	r4,156(sp)
    7934:	d9801a04 	addi	r6,sp,104
    7938:	00066700 	call	6670 <__ssprint_r>
    793c:	103f001e 	bne	r2,zero,7540 <__alt_mem_onchip_memory2_0+0xf7007540>
    7940:	d8c01c17 	ldw	r3,112(sp)
    7944:	d8801b17 	ldw	r2,108(sp)
    7948:	d811883a 	mov	r8,sp
    794c:	003e7e06 	br	7348 <__alt_mem_onchip_memory2_0+0xf7007348>
    7950:	01400074 	movhi	r5,1
    7954:	2978bd04 	addi	r5,r5,-7436
    7958:	d9402115 	stw	r5,132(sp)
    795c:	003ea406 	br	73f0 <__alt_mem_onchip_memory2_0+0xf70073f0>
    7960:	d8c02417 	ldw	r3,144(sp)
    7964:	d9002017 	ldw	r4,128(sp)
    7968:	0029883a 	mov	r20,zero
    796c:	18800104 	addi	r2,r3,4
    7970:	1c800017 	ldw	r18,0(r3)
    7974:	203e4b0e 	bge	r4,zero,72a4 <__alt_mem_onchip_memory2_0+0xf70072a4>
    7978:	003fcc06 	br	78ac <__alt_mem_onchip_memory2_0+0xf70078ac>
    797c:	d9002417 	ldw	r4,144(sp)
    7980:	d9402017 	ldw	r5,128(sp)
    7984:	0029883a 	mov	r20,zero
    7988:	20800104 	addi	r2,r4,4
    798c:	24800017 	ldw	r18,0(r4)
    7990:	283e270e 	bge	r5,zero,7230 <__alt_mem_onchip_memory2_0+0xf7007230>
    7994:	003f7b06 	br	7784 <__alt_mem_onchip_memory2_0+0xf7007784>
    7998:	8400100c 	andi	r16,r16,64
    799c:	80003326 	beq	r16,zero,7a6c <___svfiprintf_internal_r+0x122c>
    79a0:	d9402417 	ldw	r5,144(sp)
    79a4:	d8c02617 	ldw	r3,152(sp)
    79a8:	28800017 	ldw	r2,0(r5)
    79ac:	29400104 	addi	r5,r5,4
    79b0:	d9402415 	stw	r5,144(sp)
    79b4:	10c0000d 	sth	r3,0(r2)
    79b8:	003bc306 	br	68c8 <__alt_mem_onchip_memory2_0+0xf70068c8>
    79bc:	d9002417 	ldw	r4,144(sp)
    79c0:	0029883a 	mov	r20,zero
    79c4:	24800017 	ldw	r18,0(r4)
    79c8:	21000104 	addi	r4,r4,4
    79cc:	d9002415 	stw	r4,144(sp)
    79d0:	003c8806 	br	6bf4 <__alt_mem_onchip_memory2_0+0xf7006bf4>
    79d4:	d8c02417 	ldw	r3,144(sp)
    79d8:	1c800017 	ldw	r18,0(r3)
    79dc:	18c00104 	addi	r3,r3,4
    79e0:	d8c02415 	stw	r3,144(sp)
    79e4:	9029d7fa 	srai	r20,r18,31
    79e8:	a005883a 	mov	r2,r20
    79ec:	003d7806 	br	6fd0 <__alt_mem_onchip_memory2_0+0xf7006fd0>
    79f0:	8809883a 	mov	r4,r17
    79f4:	da002d15 	stw	r8,180(sp)
    79f8:	0000cfc0 	call	cfc <strlen>
    79fc:	1029883a 	mov	r20,r2
    7a00:	dd401d83 	ldbu	r21,118(sp)
    7a04:	ddc02415 	stw	r23,144(sp)
    7a08:	d8002015 	stw	zero,128(sp)
    7a0c:	da002d17 	ldw	r8,180(sp)
    7a10:	003caf06 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    7a14:	013fffc4 	movi	r4,-1
    7a18:	003df206 	br	71e4 <__alt_mem_onchip_memory2_0+0xf70071e4>
    7a1c:	dd002017 	ldw	r20,128(sp)
    7a20:	00800184 	movi	r2,6
    7a24:	1500012e 	bgeu	r2,r20,7a2c <___svfiprintf_internal_r+0x11ec>
    7a28:	1029883a 	mov	r20,r2
    7a2c:	a025883a 	mov	r18,r20
    7a30:	a0004116 	blt	r20,zero,7b38 <___svfiprintf_internal_r+0x12f8>
    7a34:	04400074 	movhi	r17,1
    7a38:	ddc02415 	stw	r23,144(sp)
    7a3c:	8c786104 	addi	r17,r17,-7804
    7a40:	003ce806 	br	6de4 <__alt_mem_onchip_memory2_0+0xf7006de4>
    7a44:	04001004 	movi	r16,64
    7a48:	800b883a 	mov	r5,r16
    7a4c:	00049dc0 	call	49dc <_malloc_r>
    7a50:	d8c02317 	ldw	r3,140(sp)
    7a54:	18800015 	stw	r2,0(r3)
    7a58:	18800415 	stw	r2,16(r3)
    7a5c:	10004d26 	beq	r2,zero,7b94 <___svfiprintf_internal_r+0x1354>
    7a60:	d9402317 	ldw	r5,140(sp)
    7a64:	2c000515 	stw	r16,20(r5)
    7a68:	003b8906 	br	6890 <__alt_mem_onchip_memory2_0+0xf7006890>
    7a6c:	d9002417 	ldw	r4,144(sp)
    7a70:	d9402617 	ldw	r5,152(sp)
    7a74:	20800017 	ldw	r2,0(r4)
    7a78:	21000104 	addi	r4,r4,4
    7a7c:	d9002415 	stw	r4,144(sp)
    7a80:	11400015 	stw	r5,0(r2)
    7a84:	003b9006 	br	68c8 <__alt_mem_onchip_memory2_0+0xf70068c8>
    7a88:	8080004c 	andi	r2,r16,1
    7a8c:	002b883a 	mov	r21,zero
    7a90:	10000526 	beq	r2,zero,7aa8 <___svfiprintf_internal_r+0x1268>
    7a94:	00800c04 	movi	r2,48
    7a98:	d88019c5 	stb	r2,103(sp)
    7a9c:	dd002c17 	ldw	r20,176(sp)
    7aa0:	dc4019c4 	addi	r17,sp,103
    7aa4:	003c8a06 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    7aa8:	0029883a 	mov	r20,zero
    7aac:	dc401a04 	addi	r17,sp,104
    7ab0:	003c8706 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    7ab4:	01400074 	movhi	r5,1
    7ab8:	2978c104 	addi	r5,r5,-7420
    7abc:	d9402815 	stw	r5,160(sp)
    7ac0:	003cff06 	br	6ec0 <__alt_mem_onchip_memory2_0+0xf7006ec0>
    7ac4:	00bfffc4 	movi	r2,-1
    7ac8:	003ea206 	br	7554 <__alt_mem_onchip_memory2_0+0xf7007554>
    7acc:	00800044 	movi	r2,1
    7ad0:	10803fcc 	andi	r2,r2,255
    7ad4:	00c00044 	movi	r3,1
    7ad8:	10fd4526 	beq	r2,r3,6ff0 <__alt_mem_onchip_memory2_0+0xf7006ff0>
    7adc:	00c00084 	movi	r3,2
    7ae0:	10fc5226 	beq	r2,r3,6c2c <__alt_mem_onchip_memory2_0+0xf7006c2c>
    7ae4:	003c9c06 	br	6d58 <__alt_mem_onchip_memory2_0+0xf7006d58>
    7ae8:	1021883a 	mov	r16,r2
    7aec:	002b883a 	mov	r21,zero
    7af0:	00800084 	movi	r2,2
    7af4:	003ff606 	br	7ad0 <__alt_mem_onchip_memory2_0+0xf7007ad0>
    7af8:	01000074 	movhi	r4,1
    7afc:	2138c104 	addi	r4,r4,-7420
    7b00:	d9002815 	stw	r4,160(sp)
    7b04:	003e7206 	br	74d0 <__alt_mem_onchip_memory2_0+0xf70074d0>
    7b08:	01400074 	movhi	r5,1
    7b0c:	2978bd04 	addi	r5,r5,-7436
    7b10:	d9402115 	stw	r5,132(sp)
    7b14:	003ec506 	br	762c <__alt_mem_onchip_memory2_0+0xf700762c>
    7b18:	e027883a 	mov	r19,fp
    7b1c:	d8002015 	stw	zero,128(sp)
    7b20:	003b9406 	br	6974 <__alt_mem_onchip_memory2_0+0xf7006974>
    7b24:	dd002017 	ldw	r20,128(sp)
    7b28:	dd401d83 	ldbu	r21,118(sp)
    7b2c:	ddc02415 	stw	r23,144(sp)
    7b30:	d8002015 	stw	zero,128(sp)
    7b34:	003c6606 	br	6cd0 <__alt_mem_onchip_memory2_0+0xf7006cd0>
    7b38:	0025883a 	mov	r18,zero
    7b3c:	003fbd06 	br	7a34 <__alt_mem_onchip_memory2_0+0xf7007a34>
    7b40:	d9402417 	ldw	r5,144(sp)
    7b44:	d8c02417 	ldw	r3,144(sp)
    7b48:	29400017 	ldw	r5,0(r5)
    7b4c:	19000104 	addi	r4,r3,4
    7b50:	d9002415 	stw	r4,144(sp)
    7b54:	d9402015 	stw	r5,128(sp)
    7b58:	98c00043 	ldbu	r3,1(r19)
    7b5c:	e027883a 	mov	r19,fp
    7b60:	283f5b0e 	bge	r5,zero,78d0 <__alt_mem_onchip_memory2_0+0xf70078d0>
    7b64:	18c03fcc 	andi	r3,r3,255
    7b68:	013fffc4 	movi	r4,-1
    7b6c:	18c0201c 	xori	r3,r3,128
    7b70:	d9002015 	stw	r4,128(sp)
    7b74:	18ffe004 	addi	r3,r3,-128
    7b78:	003b7d06 	br	6970 <__alt_mem_onchip_memory2_0+0xf7006970>
    7b7c:	dd401d85 	stb	r21,118(sp)
    7b80:	003cf306 	br	6f50 <__alt_mem_onchip_memory2_0+0xf7006f50>
    7b84:	dd401d85 	stb	r21,118(sp)
    7b88:	003d4e06 	br	70c4 <__alt_mem_onchip_memory2_0+0xf70070c4>
    7b8c:	dd401d85 	stb	r21,118(sp)
    7b90:	003c0e06 	br	6bcc <__alt_mem_onchip_memory2_0+0xf7006bcc>
    7b94:	d9002717 	ldw	r4,156(sp)
    7b98:	00800304 	movi	r2,12
    7b9c:	20800015 	stw	r2,0(r4)
    7ba0:	00bfffc4 	movi	r2,-1
    7ba4:	003e6b06 	br	7554 <__alt_mem_onchip_memory2_0+0xf7007554>
    7ba8:	dd401d85 	stb	r21,118(sp)
    7bac:	003d0006 	br	6fb0 <__alt_mem_onchip_memory2_0+0xf7006fb0>
    7bb0:	dd401d85 	stb	r21,118(sp)
    7bb4:	003d7106 	br	717c <__alt_mem_onchip_memory2_0+0xf700717c>
    7bb8:	dd401d85 	stb	r21,118(sp)
    7bbc:	003c5706 	br	6d1c <__alt_mem_onchip_memory2_0+0xf7006d1c>
    7bc0:	dd401d85 	stb	r21,118(sp)
    7bc4:	003c2e06 	br	6c80 <__alt_mem_onchip_memory2_0+0xf7006c80>
    7bc8:	dd401d85 	stb	r21,118(sp)
    7bcc:	003d8c06 	br	7200 <__alt_mem_onchip_memory2_0+0xf7007200>
    7bd0:	dd401d85 	stb	r21,118(sp)
    7bd4:	003da706 	br	7274 <__alt_mem_onchip_memory2_0+0xf7007274>
    7bd8:	dd401d85 	stb	r21,118(sp)
    7bdc:	003cc806 	br	6f00 <__alt_mem_onchip_memory2_0+0xf7006f00>

00007be0 <_calloc_r>:
    7be0:	defffe04 	addi	sp,sp,-8
    7be4:	2805883a 	mov	r2,r5
    7be8:	dc000015 	stw	r16,0(sp)
    7bec:	300b883a 	mov	r5,r6
    7bf0:	2021883a 	mov	r16,r4
    7bf4:	1009883a 	mov	r4,r2
    7bf8:	dfc00115 	stw	ra,4(sp)
    7bfc:	0000b940 	call	b94 <__mulsi3>
    7c00:	100b883a 	mov	r5,r2
    7c04:	8009883a 	mov	r4,r16
    7c08:	00049dc0 	call	49dc <_malloc_r>
    7c0c:	10002926 	beq	r2,zero,7cb4 <_calloc_r+0xd4>
    7c10:	11bfff17 	ldw	r6,-4(r2)
    7c14:	1021883a 	mov	r16,r2
    7c18:	00bfff04 	movi	r2,-4
    7c1c:	308c703a 	and	r6,r6,r2
    7c20:	00c00904 	movi	r3,36
    7c24:	308d883a 	add	r6,r6,r2
    7c28:	19801636 	bltu	r3,r6,7c84 <_calloc_r+0xa4>
    7c2c:	008004c4 	movi	r2,19
    7c30:	11800b2e 	bgeu	r2,r6,7c60 <_calloc_r+0x80>
    7c34:	80000015 	stw	zero,0(r16)
    7c38:	80000115 	stw	zero,4(r16)
    7c3c:	008006c4 	movi	r2,27
    7c40:	11801a2e 	bgeu	r2,r6,7cac <_calloc_r+0xcc>
    7c44:	80000215 	stw	zero,8(r16)
    7c48:	80000315 	stw	zero,12(r16)
    7c4c:	30c0151e 	bne	r6,r3,7ca4 <_calloc_r+0xc4>
    7c50:	80000415 	stw	zero,16(r16)
    7c54:	80800604 	addi	r2,r16,24
    7c58:	80000515 	stw	zero,20(r16)
    7c5c:	00000106 	br	7c64 <_calloc_r+0x84>
    7c60:	8005883a 	mov	r2,r16
    7c64:	10000015 	stw	zero,0(r2)
    7c68:	10000115 	stw	zero,4(r2)
    7c6c:	10000215 	stw	zero,8(r2)
    7c70:	8005883a 	mov	r2,r16
    7c74:	dfc00117 	ldw	ra,4(sp)
    7c78:	dc000017 	ldw	r16,0(sp)
    7c7c:	dec00204 	addi	sp,sp,8
    7c80:	f800283a 	ret
    7c84:	000b883a 	mov	r5,zero
    7c88:	8009883a 	mov	r4,r16
    7c8c:	000824c0 	call	824c <memset>
    7c90:	8005883a 	mov	r2,r16
    7c94:	dfc00117 	ldw	ra,4(sp)
    7c98:	dc000017 	ldw	r16,0(sp)
    7c9c:	dec00204 	addi	sp,sp,8
    7ca0:	f800283a 	ret
    7ca4:	80800404 	addi	r2,r16,16
    7ca8:	003fee06 	br	7c64 <__alt_mem_onchip_memory2_0+0xf7007c64>
    7cac:	80800204 	addi	r2,r16,8
    7cb0:	003fec06 	br	7c64 <__alt_mem_onchip_memory2_0+0xf7007c64>
    7cb4:	0005883a 	mov	r2,zero
    7cb8:	003fee06 	br	7c74 <__alt_mem_onchip_memory2_0+0xf7007c74>

00007cbc <_malloc_trim_r>:
    7cbc:	defffb04 	addi	sp,sp,-20
    7cc0:	dcc00315 	stw	r19,12(sp)
    7cc4:	04c00074 	movhi	r19,1
    7cc8:	dc800215 	stw	r18,8(sp)
    7ccc:	dc400115 	stw	r17,4(sp)
    7cd0:	dc000015 	stw	r16,0(sp)
    7cd4:	dfc00415 	stw	ra,16(sp)
    7cd8:	2821883a 	mov	r16,r5
    7cdc:	9cfb4d04 	addi	r19,r19,-4812
    7ce0:	2025883a 	mov	r18,r4
    7ce4:	000bfb00 	call	bfb0 <__malloc_lock>
    7ce8:	98800217 	ldw	r2,8(r19)
    7cec:	14400117 	ldw	r17,4(r2)
    7cf0:	00bfff04 	movi	r2,-4
    7cf4:	88a2703a 	and	r17,r17,r2
    7cf8:	8c21c83a 	sub	r16,r17,r16
    7cfc:	8403fbc4 	addi	r16,r16,4079
    7d00:	8020d33a 	srli	r16,r16,12
    7d04:	0083ffc4 	movi	r2,4095
    7d08:	843fffc4 	addi	r16,r16,-1
    7d0c:	8020933a 	slli	r16,r16,12
    7d10:	1400060e 	bge	r2,r16,7d2c <_malloc_trim_r+0x70>
    7d14:	000b883a 	mov	r5,zero
    7d18:	9009883a 	mov	r4,r18
    7d1c:	00065400 	call	6540 <_sbrk_r>
    7d20:	98c00217 	ldw	r3,8(r19)
    7d24:	1c47883a 	add	r3,r3,r17
    7d28:	10c00a26 	beq	r2,r3,7d54 <_malloc_trim_r+0x98>
    7d2c:	9009883a 	mov	r4,r18
    7d30:	000bfd40 	call	bfd4 <__malloc_unlock>
    7d34:	0005883a 	mov	r2,zero
    7d38:	dfc00417 	ldw	ra,16(sp)
    7d3c:	dcc00317 	ldw	r19,12(sp)
    7d40:	dc800217 	ldw	r18,8(sp)
    7d44:	dc400117 	ldw	r17,4(sp)
    7d48:	dc000017 	ldw	r16,0(sp)
    7d4c:	dec00504 	addi	sp,sp,20
    7d50:	f800283a 	ret
    7d54:	040bc83a 	sub	r5,zero,r16
    7d58:	9009883a 	mov	r4,r18
    7d5c:	00065400 	call	6540 <_sbrk_r>
    7d60:	00ffffc4 	movi	r3,-1
    7d64:	10c00d26 	beq	r2,r3,7d9c <_malloc_trim_r+0xe0>
    7d68:	00c00074 	movhi	r3,1
    7d6c:	18c8c204 	addi	r3,r3,8968
    7d70:	18800017 	ldw	r2,0(r3)
    7d74:	99000217 	ldw	r4,8(r19)
    7d78:	8c23c83a 	sub	r17,r17,r16
    7d7c:	8c400054 	ori	r17,r17,1
    7d80:	1421c83a 	sub	r16,r2,r16
    7d84:	24400115 	stw	r17,4(r4)
    7d88:	9009883a 	mov	r4,r18
    7d8c:	1c000015 	stw	r16,0(r3)
    7d90:	000bfd40 	call	bfd4 <__malloc_unlock>
    7d94:	00800044 	movi	r2,1
    7d98:	003fe706 	br	7d38 <__alt_mem_onchip_memory2_0+0xf7007d38>
    7d9c:	000b883a 	mov	r5,zero
    7da0:	9009883a 	mov	r4,r18
    7da4:	00065400 	call	6540 <_sbrk_r>
    7da8:	99000217 	ldw	r4,8(r19)
    7dac:	014003c4 	movi	r5,15
    7db0:	1107c83a 	sub	r3,r2,r4
    7db4:	28ffdd0e 	bge	r5,r3,7d2c <__alt_mem_onchip_memory2_0+0xf7007d2c>
    7db8:	01400074 	movhi	r5,1
    7dbc:	2940d704 	addi	r5,r5,860
    7dc0:	29400017 	ldw	r5,0(r5)
    7dc4:	18c00054 	ori	r3,r3,1
    7dc8:	20c00115 	stw	r3,4(r4)
    7dcc:	00c00074 	movhi	r3,1
    7dd0:	1145c83a 	sub	r2,r2,r5
    7dd4:	18c8c204 	addi	r3,r3,8968
    7dd8:	18800015 	stw	r2,0(r3)
    7ddc:	003fd306 	br	7d2c <__alt_mem_onchip_memory2_0+0xf7007d2c>

00007de0 <_free_r>:
    7de0:	28004126 	beq	r5,zero,7ee8 <_free_r+0x108>
    7de4:	defffd04 	addi	sp,sp,-12
    7de8:	dc400115 	stw	r17,4(sp)
    7dec:	dc000015 	stw	r16,0(sp)
    7df0:	2023883a 	mov	r17,r4
    7df4:	2821883a 	mov	r16,r5
    7df8:	dfc00215 	stw	ra,8(sp)
    7dfc:	000bfb00 	call	bfb0 <__malloc_lock>
    7e00:	81ffff17 	ldw	r7,-4(r16)
    7e04:	00bfff84 	movi	r2,-2
    7e08:	01000074 	movhi	r4,1
    7e0c:	81bffe04 	addi	r6,r16,-8
    7e10:	3884703a 	and	r2,r7,r2
    7e14:	213b4d04 	addi	r4,r4,-4812
    7e18:	308b883a 	add	r5,r6,r2
    7e1c:	2a400117 	ldw	r9,4(r5)
    7e20:	22000217 	ldw	r8,8(r4)
    7e24:	00ffff04 	movi	r3,-4
    7e28:	48c6703a 	and	r3,r9,r3
    7e2c:	2a005726 	beq	r5,r8,7f8c <_free_r+0x1ac>
    7e30:	28c00115 	stw	r3,4(r5)
    7e34:	39c0004c 	andi	r7,r7,1
    7e38:	3800091e 	bne	r7,zero,7e60 <_free_r+0x80>
    7e3c:	823ffe17 	ldw	r8,-8(r16)
    7e40:	22400204 	addi	r9,r4,8
    7e44:	320dc83a 	sub	r6,r6,r8
    7e48:	31c00217 	ldw	r7,8(r6)
    7e4c:	1205883a 	add	r2,r2,r8
    7e50:	3a406526 	beq	r7,r9,7fe8 <_free_r+0x208>
    7e54:	32000317 	ldw	r8,12(r6)
    7e58:	3a000315 	stw	r8,12(r7)
    7e5c:	41c00215 	stw	r7,8(r8)
    7e60:	28cf883a 	add	r7,r5,r3
    7e64:	39c00117 	ldw	r7,4(r7)
    7e68:	39c0004c 	andi	r7,r7,1
    7e6c:	38003a26 	beq	r7,zero,7f58 <_free_r+0x178>
    7e70:	10c00054 	ori	r3,r2,1
    7e74:	30c00115 	stw	r3,4(r6)
    7e78:	3087883a 	add	r3,r6,r2
    7e7c:	18800015 	stw	r2,0(r3)
    7e80:	00c07fc4 	movi	r3,511
    7e84:	18801936 	bltu	r3,r2,7eec <_free_r+0x10c>
    7e88:	1004d0fa 	srli	r2,r2,3
    7e8c:	01c00044 	movi	r7,1
    7e90:	21400117 	ldw	r5,4(r4)
    7e94:	10c00044 	addi	r3,r2,1
    7e98:	18c7883a 	add	r3,r3,r3
    7e9c:	1005d0ba 	srai	r2,r2,2
    7ea0:	18c7883a 	add	r3,r3,r3
    7ea4:	18c7883a 	add	r3,r3,r3
    7ea8:	1907883a 	add	r3,r3,r4
    7eac:	3884983a 	sll	r2,r7,r2
    7eb0:	19c00017 	ldw	r7,0(r3)
    7eb4:	1a3ffe04 	addi	r8,r3,-8
    7eb8:	1144b03a 	or	r2,r2,r5
    7ebc:	32000315 	stw	r8,12(r6)
    7ec0:	31c00215 	stw	r7,8(r6)
    7ec4:	20800115 	stw	r2,4(r4)
    7ec8:	19800015 	stw	r6,0(r3)
    7ecc:	39800315 	stw	r6,12(r7)
    7ed0:	8809883a 	mov	r4,r17
    7ed4:	dfc00217 	ldw	ra,8(sp)
    7ed8:	dc400117 	ldw	r17,4(sp)
    7edc:	dc000017 	ldw	r16,0(sp)
    7ee0:	dec00304 	addi	sp,sp,12
    7ee4:	000bfd41 	jmpi	bfd4 <__malloc_unlock>
    7ee8:	f800283a 	ret
    7eec:	100ad27a 	srli	r5,r2,9
    7ef0:	00c00104 	movi	r3,4
    7ef4:	19404a36 	bltu	r3,r5,8020 <_free_r+0x240>
    7ef8:	100ad1ba 	srli	r5,r2,6
    7efc:	28c00e44 	addi	r3,r5,57
    7f00:	18c7883a 	add	r3,r3,r3
    7f04:	29400e04 	addi	r5,r5,56
    7f08:	18c7883a 	add	r3,r3,r3
    7f0c:	18c7883a 	add	r3,r3,r3
    7f10:	1909883a 	add	r4,r3,r4
    7f14:	20c00017 	ldw	r3,0(r4)
    7f18:	01c00074 	movhi	r7,1
    7f1c:	213ffe04 	addi	r4,r4,-8
    7f20:	39fb4d04 	addi	r7,r7,-4812
    7f24:	20c04426 	beq	r4,r3,8038 <_free_r+0x258>
    7f28:	01ffff04 	movi	r7,-4
    7f2c:	19400117 	ldw	r5,4(r3)
    7f30:	29ca703a 	and	r5,r5,r7
    7f34:	1140022e 	bgeu	r2,r5,7f40 <_free_r+0x160>
    7f38:	18c00217 	ldw	r3,8(r3)
    7f3c:	20fffb1e 	bne	r4,r3,7f2c <__alt_mem_onchip_memory2_0+0xf7007f2c>
    7f40:	19000317 	ldw	r4,12(r3)
    7f44:	31000315 	stw	r4,12(r6)
    7f48:	30c00215 	stw	r3,8(r6)
    7f4c:	21800215 	stw	r6,8(r4)
    7f50:	19800315 	stw	r6,12(r3)
    7f54:	003fde06 	br	7ed0 <__alt_mem_onchip_memory2_0+0xf7007ed0>
    7f58:	29c00217 	ldw	r7,8(r5)
    7f5c:	10c5883a 	add	r2,r2,r3
    7f60:	00c00074 	movhi	r3,1
    7f64:	18fb4f04 	addi	r3,r3,-4804
    7f68:	38c03b26 	beq	r7,r3,8058 <_free_r+0x278>
    7f6c:	2a000317 	ldw	r8,12(r5)
    7f70:	11400054 	ori	r5,r2,1
    7f74:	3087883a 	add	r3,r6,r2
    7f78:	3a000315 	stw	r8,12(r7)
    7f7c:	41c00215 	stw	r7,8(r8)
    7f80:	31400115 	stw	r5,4(r6)
    7f84:	18800015 	stw	r2,0(r3)
    7f88:	003fbd06 	br	7e80 <__alt_mem_onchip_memory2_0+0xf7007e80>
    7f8c:	39c0004c 	andi	r7,r7,1
    7f90:	10c5883a 	add	r2,r2,r3
    7f94:	3800071e 	bne	r7,zero,7fb4 <_free_r+0x1d4>
    7f98:	81fffe17 	ldw	r7,-8(r16)
    7f9c:	31cdc83a 	sub	r6,r6,r7
    7fa0:	30c00317 	ldw	r3,12(r6)
    7fa4:	31400217 	ldw	r5,8(r6)
    7fa8:	11c5883a 	add	r2,r2,r7
    7fac:	28c00315 	stw	r3,12(r5)
    7fb0:	19400215 	stw	r5,8(r3)
    7fb4:	10c00054 	ori	r3,r2,1
    7fb8:	30c00115 	stw	r3,4(r6)
    7fbc:	00c00074 	movhi	r3,1
    7fc0:	18c0d804 	addi	r3,r3,864
    7fc4:	18c00017 	ldw	r3,0(r3)
    7fc8:	21800215 	stw	r6,8(r4)
    7fcc:	10ffc036 	bltu	r2,r3,7ed0 <__alt_mem_onchip_memory2_0+0xf7007ed0>
    7fd0:	00800074 	movhi	r2,1
    7fd4:	1088b904 	addi	r2,r2,8932
    7fd8:	11400017 	ldw	r5,0(r2)
    7fdc:	8809883a 	mov	r4,r17
    7fe0:	0007cbc0 	call	7cbc <_malloc_trim_r>
    7fe4:	003fba06 	br	7ed0 <__alt_mem_onchip_memory2_0+0xf7007ed0>
    7fe8:	28c9883a 	add	r4,r5,r3
    7fec:	21000117 	ldw	r4,4(r4)
    7ff0:	2100004c 	andi	r4,r4,1
    7ff4:	2000391e 	bne	r4,zero,80dc <_free_r+0x2fc>
    7ff8:	29c00217 	ldw	r7,8(r5)
    7ffc:	29000317 	ldw	r4,12(r5)
    8000:	1885883a 	add	r2,r3,r2
    8004:	10c00054 	ori	r3,r2,1
    8008:	39000315 	stw	r4,12(r7)
    800c:	21c00215 	stw	r7,8(r4)
    8010:	30c00115 	stw	r3,4(r6)
    8014:	308d883a 	add	r6,r6,r2
    8018:	30800015 	stw	r2,0(r6)
    801c:	003fac06 	br	7ed0 <__alt_mem_onchip_memory2_0+0xf7007ed0>
    8020:	00c00504 	movi	r3,20
    8024:	19401536 	bltu	r3,r5,807c <_free_r+0x29c>
    8028:	28c01704 	addi	r3,r5,92
    802c:	18c7883a 	add	r3,r3,r3
    8030:	294016c4 	addi	r5,r5,91
    8034:	003fb406 	br	7f08 <__alt_mem_onchip_memory2_0+0xf7007f08>
    8038:	280bd0ba 	srai	r5,r5,2
    803c:	00c00044 	movi	r3,1
    8040:	38800117 	ldw	r2,4(r7)
    8044:	194a983a 	sll	r5,r3,r5
    8048:	2007883a 	mov	r3,r4
    804c:	2884b03a 	or	r2,r5,r2
    8050:	38800115 	stw	r2,4(r7)
    8054:	003fbb06 	br	7f44 <__alt_mem_onchip_memory2_0+0xf7007f44>
    8058:	21800515 	stw	r6,20(r4)
    805c:	21800415 	stw	r6,16(r4)
    8060:	10c00054 	ori	r3,r2,1
    8064:	31c00315 	stw	r7,12(r6)
    8068:	31c00215 	stw	r7,8(r6)
    806c:	30c00115 	stw	r3,4(r6)
    8070:	308d883a 	add	r6,r6,r2
    8074:	30800015 	stw	r2,0(r6)
    8078:	003f9506 	br	7ed0 <__alt_mem_onchip_memory2_0+0xf7007ed0>
    807c:	00c01504 	movi	r3,84
    8080:	19400536 	bltu	r3,r5,8098 <_free_r+0x2b8>
    8084:	100ad33a 	srli	r5,r2,12
    8088:	28c01bc4 	addi	r3,r5,111
    808c:	18c7883a 	add	r3,r3,r3
    8090:	29401b84 	addi	r5,r5,110
    8094:	003f9c06 	br	7f08 <__alt_mem_onchip_memory2_0+0xf7007f08>
    8098:	00c05504 	movi	r3,340
    809c:	19400536 	bltu	r3,r5,80b4 <_free_r+0x2d4>
    80a0:	100ad3fa 	srli	r5,r2,15
    80a4:	28c01e04 	addi	r3,r5,120
    80a8:	18c7883a 	add	r3,r3,r3
    80ac:	29401dc4 	addi	r5,r5,119
    80b0:	003f9506 	br	7f08 <__alt_mem_onchip_memory2_0+0xf7007f08>
    80b4:	00c15504 	movi	r3,1364
    80b8:	19400536 	bltu	r3,r5,80d0 <_free_r+0x2f0>
    80bc:	100ad4ba 	srli	r5,r2,18
    80c0:	28c01f44 	addi	r3,r5,125
    80c4:	18c7883a 	add	r3,r3,r3
    80c8:	29401f04 	addi	r5,r5,124
    80cc:	003f8e06 	br	7f08 <__alt_mem_onchip_memory2_0+0xf7007f08>
    80d0:	00c03f84 	movi	r3,254
    80d4:	01401f84 	movi	r5,126
    80d8:	003f8b06 	br	7f08 <__alt_mem_onchip_memory2_0+0xf7007f08>
    80dc:	10c00054 	ori	r3,r2,1
    80e0:	30c00115 	stw	r3,4(r6)
    80e4:	308d883a 	add	r6,r6,r2
    80e8:	30800015 	stw	r2,0(r6)
    80ec:	003f7806 	br	7ed0 <__alt_mem_onchip_memory2_0+0xf7007ed0>

000080f0 <memmove>:
    80f0:	2005883a 	mov	r2,r4
    80f4:	29000b2e 	bgeu	r5,r4,8124 <memmove+0x34>
    80f8:	298f883a 	add	r7,r5,r6
    80fc:	21c0092e 	bgeu	r4,r7,8124 <memmove+0x34>
    8100:	2187883a 	add	r3,r4,r6
    8104:	198bc83a 	sub	r5,r3,r6
    8108:	30004826 	beq	r6,zero,822c <memmove+0x13c>
    810c:	39ffffc4 	addi	r7,r7,-1
    8110:	39000003 	ldbu	r4,0(r7)
    8114:	18ffffc4 	addi	r3,r3,-1
    8118:	19000005 	stb	r4,0(r3)
    811c:	28fffb1e 	bne	r5,r3,810c <__alt_mem_onchip_memory2_0+0xf700810c>
    8120:	f800283a 	ret
    8124:	00c003c4 	movi	r3,15
    8128:	1980412e 	bgeu	r3,r6,8230 <memmove+0x140>
    812c:	2886b03a 	or	r3,r5,r2
    8130:	18c000cc 	andi	r3,r3,3
    8134:	1800401e 	bne	r3,zero,8238 <memmove+0x148>
    8138:	33fffc04 	addi	r15,r6,-16
    813c:	781ed13a 	srli	r15,r15,4
    8140:	28c00104 	addi	r3,r5,4
    8144:	13400104 	addi	r13,r2,4
    8148:	781c913a 	slli	r14,r15,4
    814c:	2b000204 	addi	r12,r5,8
    8150:	12c00204 	addi	r11,r2,8
    8154:	73800504 	addi	r14,r14,20
    8158:	2a800304 	addi	r10,r5,12
    815c:	12400304 	addi	r9,r2,12
    8160:	2b9d883a 	add	r14,r5,r14
    8164:	2811883a 	mov	r8,r5
    8168:	100f883a 	mov	r7,r2
    816c:	41000017 	ldw	r4,0(r8)
    8170:	39c00404 	addi	r7,r7,16
    8174:	18c00404 	addi	r3,r3,16
    8178:	393ffc15 	stw	r4,-16(r7)
    817c:	193ffc17 	ldw	r4,-16(r3)
    8180:	6b400404 	addi	r13,r13,16
    8184:	5ac00404 	addi	r11,r11,16
    8188:	693ffc15 	stw	r4,-16(r13)
    818c:	61000017 	ldw	r4,0(r12)
    8190:	4a400404 	addi	r9,r9,16
    8194:	42000404 	addi	r8,r8,16
    8198:	593ffc15 	stw	r4,-16(r11)
    819c:	51000017 	ldw	r4,0(r10)
    81a0:	63000404 	addi	r12,r12,16
    81a4:	52800404 	addi	r10,r10,16
    81a8:	493ffc15 	stw	r4,-16(r9)
    81ac:	1bbfef1e 	bne	r3,r14,816c <__alt_mem_onchip_memory2_0+0xf700816c>
    81b0:	79000044 	addi	r4,r15,1
    81b4:	2008913a 	slli	r4,r4,4
    81b8:	328003cc 	andi	r10,r6,15
    81bc:	02c000c4 	movi	r11,3
    81c0:	1107883a 	add	r3,r2,r4
    81c4:	290b883a 	add	r5,r5,r4
    81c8:	5a801e2e 	bgeu	r11,r10,8244 <memmove+0x154>
    81cc:	1813883a 	mov	r9,r3
    81d0:	2811883a 	mov	r8,r5
    81d4:	500f883a 	mov	r7,r10
    81d8:	41000017 	ldw	r4,0(r8)
    81dc:	4a400104 	addi	r9,r9,4
    81e0:	39ffff04 	addi	r7,r7,-4
    81e4:	493fff15 	stw	r4,-4(r9)
    81e8:	42000104 	addi	r8,r8,4
    81ec:	59fffa36 	bltu	r11,r7,81d8 <__alt_mem_onchip_memory2_0+0xf70081d8>
    81f0:	513fff04 	addi	r4,r10,-4
    81f4:	2008d0ba 	srli	r4,r4,2
    81f8:	318000cc 	andi	r6,r6,3
    81fc:	21000044 	addi	r4,r4,1
    8200:	2109883a 	add	r4,r4,r4
    8204:	2109883a 	add	r4,r4,r4
    8208:	1907883a 	add	r3,r3,r4
    820c:	290b883a 	add	r5,r5,r4
    8210:	30000b26 	beq	r6,zero,8240 <memmove+0x150>
    8214:	198d883a 	add	r6,r3,r6
    8218:	29c00003 	ldbu	r7,0(r5)
    821c:	18c00044 	addi	r3,r3,1
    8220:	29400044 	addi	r5,r5,1
    8224:	19ffffc5 	stb	r7,-1(r3)
    8228:	19bffb1e 	bne	r3,r6,8218 <__alt_mem_onchip_memory2_0+0xf7008218>
    822c:	f800283a 	ret
    8230:	1007883a 	mov	r3,r2
    8234:	003ff606 	br	8210 <__alt_mem_onchip_memory2_0+0xf7008210>
    8238:	1007883a 	mov	r3,r2
    823c:	003ff506 	br	8214 <__alt_mem_onchip_memory2_0+0xf7008214>
    8240:	f800283a 	ret
    8244:	500d883a 	mov	r6,r10
    8248:	003ff106 	br	8210 <__alt_mem_onchip_memory2_0+0xf7008210>

0000824c <memset>:
    824c:	20c000cc 	andi	r3,r4,3
    8250:	2005883a 	mov	r2,r4
    8254:	18004426 	beq	r3,zero,8368 <memset+0x11c>
    8258:	31ffffc4 	addi	r7,r6,-1
    825c:	30004026 	beq	r6,zero,8360 <memset+0x114>
    8260:	2813883a 	mov	r9,r5
    8264:	200d883a 	mov	r6,r4
    8268:	2007883a 	mov	r3,r4
    826c:	00000406 	br	8280 <memset+0x34>
    8270:	3a3fffc4 	addi	r8,r7,-1
    8274:	31800044 	addi	r6,r6,1
    8278:	38003926 	beq	r7,zero,8360 <memset+0x114>
    827c:	400f883a 	mov	r7,r8
    8280:	18c00044 	addi	r3,r3,1
    8284:	32400005 	stb	r9,0(r6)
    8288:	1a0000cc 	andi	r8,r3,3
    828c:	403ff81e 	bne	r8,zero,8270 <__alt_mem_onchip_memory2_0+0xf7008270>
    8290:	010000c4 	movi	r4,3
    8294:	21c02d2e 	bgeu	r4,r7,834c <memset+0x100>
    8298:	29003fcc 	andi	r4,r5,255
    829c:	200c923a 	slli	r6,r4,8
    82a0:	3108b03a 	or	r4,r6,r4
    82a4:	200c943a 	slli	r6,r4,16
    82a8:	218cb03a 	or	r6,r4,r6
    82ac:	010003c4 	movi	r4,15
    82b0:	21c0182e 	bgeu	r4,r7,8314 <memset+0xc8>
    82b4:	3b3ffc04 	addi	r12,r7,-16
    82b8:	6018d13a 	srli	r12,r12,4
    82bc:	1a000104 	addi	r8,r3,4
    82c0:	1ac00204 	addi	r11,r3,8
    82c4:	6008913a 	slli	r4,r12,4
    82c8:	1a800304 	addi	r10,r3,12
    82cc:	1813883a 	mov	r9,r3
    82d0:	21000504 	addi	r4,r4,20
    82d4:	1909883a 	add	r4,r3,r4
    82d8:	49800015 	stw	r6,0(r9)
    82dc:	41800015 	stw	r6,0(r8)
    82e0:	59800015 	stw	r6,0(r11)
    82e4:	51800015 	stw	r6,0(r10)
    82e8:	42000404 	addi	r8,r8,16
    82ec:	4a400404 	addi	r9,r9,16
    82f0:	5ac00404 	addi	r11,r11,16
    82f4:	52800404 	addi	r10,r10,16
    82f8:	413ff71e 	bne	r8,r4,82d8 <__alt_mem_onchip_memory2_0+0xf70082d8>
    82fc:	63000044 	addi	r12,r12,1
    8300:	6018913a 	slli	r12,r12,4
    8304:	39c003cc 	andi	r7,r7,15
    8308:	010000c4 	movi	r4,3
    830c:	1b07883a 	add	r3,r3,r12
    8310:	21c00e2e 	bgeu	r4,r7,834c <memset+0x100>
    8314:	1813883a 	mov	r9,r3
    8318:	3811883a 	mov	r8,r7
    831c:	010000c4 	movi	r4,3
    8320:	49800015 	stw	r6,0(r9)
    8324:	423fff04 	addi	r8,r8,-4
    8328:	4a400104 	addi	r9,r9,4
    832c:	223ffc36 	bltu	r4,r8,8320 <__alt_mem_onchip_memory2_0+0xf7008320>
    8330:	393fff04 	addi	r4,r7,-4
    8334:	2008d0ba 	srli	r4,r4,2
    8338:	39c000cc 	andi	r7,r7,3
    833c:	21000044 	addi	r4,r4,1
    8340:	2109883a 	add	r4,r4,r4
    8344:	2109883a 	add	r4,r4,r4
    8348:	1907883a 	add	r3,r3,r4
    834c:	38000526 	beq	r7,zero,8364 <memset+0x118>
    8350:	19cf883a 	add	r7,r3,r7
    8354:	19400005 	stb	r5,0(r3)
    8358:	18c00044 	addi	r3,r3,1
    835c:	38fffd1e 	bne	r7,r3,8354 <__alt_mem_onchip_memory2_0+0xf7008354>
    8360:	f800283a 	ret
    8364:	f800283a 	ret
    8368:	2007883a 	mov	r3,r4
    836c:	300f883a 	mov	r7,r6
    8370:	003fc706 	br	8290 <__alt_mem_onchip_memory2_0+0xf7008290>

00008374 <_realloc_r>:
    8374:	defff604 	addi	sp,sp,-40
    8378:	dc800215 	stw	r18,8(sp)
    837c:	dfc00915 	stw	ra,36(sp)
    8380:	df000815 	stw	fp,32(sp)
    8384:	ddc00715 	stw	r23,28(sp)
    8388:	dd800615 	stw	r22,24(sp)
    838c:	dd400515 	stw	r21,20(sp)
    8390:	dd000415 	stw	r20,16(sp)
    8394:	dcc00315 	stw	r19,12(sp)
    8398:	dc400115 	stw	r17,4(sp)
    839c:	dc000015 	stw	r16,0(sp)
    83a0:	3025883a 	mov	r18,r6
    83a4:	2800b726 	beq	r5,zero,8684 <_realloc_r+0x310>
    83a8:	282b883a 	mov	r21,r5
    83ac:	2029883a 	mov	r20,r4
    83b0:	000bfb00 	call	bfb0 <__malloc_lock>
    83b4:	a8bfff17 	ldw	r2,-4(r21)
    83b8:	043fff04 	movi	r16,-4
    83bc:	90c002c4 	addi	r3,r18,11
    83c0:	01000584 	movi	r4,22
    83c4:	acfffe04 	addi	r19,r21,-8
    83c8:	1420703a 	and	r16,r2,r16
    83cc:	20c0332e 	bgeu	r4,r3,849c <_realloc_r+0x128>
    83d0:	047ffe04 	movi	r17,-8
    83d4:	1c62703a 	and	r17,r3,r17
    83d8:	8807883a 	mov	r3,r17
    83dc:	88005816 	blt	r17,zero,8540 <_realloc_r+0x1cc>
    83e0:	8c805736 	bltu	r17,r18,8540 <_realloc_r+0x1cc>
    83e4:	80c0300e 	bge	r16,r3,84a8 <_realloc_r+0x134>
    83e8:	07000074 	movhi	fp,1
    83ec:	e73b4d04 	addi	fp,fp,-4812
    83f0:	e1c00217 	ldw	r7,8(fp)
    83f4:	9c09883a 	add	r4,r19,r16
    83f8:	22000117 	ldw	r8,4(r4)
    83fc:	21c06326 	beq	r4,r7,858c <_realloc_r+0x218>
    8400:	017fff84 	movi	r5,-2
    8404:	414a703a 	and	r5,r8,r5
    8408:	214b883a 	add	r5,r4,r5
    840c:	29800117 	ldw	r6,4(r5)
    8410:	3180004c 	andi	r6,r6,1
    8414:	30003f26 	beq	r6,zero,8514 <_realloc_r+0x1a0>
    8418:	1080004c 	andi	r2,r2,1
    841c:	10008326 	beq	r2,zero,862c <_realloc_r+0x2b8>
    8420:	900b883a 	mov	r5,r18
    8424:	a009883a 	mov	r4,r20
    8428:	00049dc0 	call	49dc <_malloc_r>
    842c:	1025883a 	mov	r18,r2
    8430:	10011e26 	beq	r2,zero,88ac <_realloc_r+0x538>
    8434:	a93fff17 	ldw	r4,-4(r21)
    8438:	10fffe04 	addi	r3,r2,-8
    843c:	00bfff84 	movi	r2,-2
    8440:	2084703a 	and	r2,r4,r2
    8444:	9885883a 	add	r2,r19,r2
    8448:	1880ee26 	beq	r3,r2,8804 <_realloc_r+0x490>
    844c:	81bfff04 	addi	r6,r16,-4
    8450:	00800904 	movi	r2,36
    8454:	1180b836 	bltu	r2,r6,8738 <_realloc_r+0x3c4>
    8458:	00c004c4 	movi	r3,19
    845c:	19809636 	bltu	r3,r6,86b8 <_realloc_r+0x344>
    8460:	9005883a 	mov	r2,r18
    8464:	a807883a 	mov	r3,r21
    8468:	19000017 	ldw	r4,0(r3)
    846c:	11000015 	stw	r4,0(r2)
    8470:	19000117 	ldw	r4,4(r3)
    8474:	11000115 	stw	r4,4(r2)
    8478:	18c00217 	ldw	r3,8(r3)
    847c:	10c00215 	stw	r3,8(r2)
    8480:	a80b883a 	mov	r5,r21
    8484:	a009883a 	mov	r4,r20
    8488:	0007de00 	call	7de0 <_free_r>
    848c:	a009883a 	mov	r4,r20
    8490:	000bfd40 	call	bfd4 <__malloc_unlock>
    8494:	9005883a 	mov	r2,r18
    8498:	00001206 	br	84e4 <_realloc_r+0x170>
    849c:	00c00404 	movi	r3,16
    84a0:	1823883a 	mov	r17,r3
    84a4:	003fce06 	br	83e0 <__alt_mem_onchip_memory2_0+0xf70083e0>
    84a8:	a825883a 	mov	r18,r21
    84ac:	8445c83a 	sub	r2,r16,r17
    84b0:	00c003c4 	movi	r3,15
    84b4:	18802636 	bltu	r3,r2,8550 <_realloc_r+0x1dc>
    84b8:	99800117 	ldw	r6,4(r19)
    84bc:	9c07883a 	add	r3,r19,r16
    84c0:	3180004c 	andi	r6,r6,1
    84c4:	3420b03a 	or	r16,r6,r16
    84c8:	9c000115 	stw	r16,4(r19)
    84cc:	18800117 	ldw	r2,4(r3)
    84d0:	10800054 	ori	r2,r2,1
    84d4:	18800115 	stw	r2,4(r3)
    84d8:	a009883a 	mov	r4,r20
    84dc:	000bfd40 	call	bfd4 <__malloc_unlock>
    84e0:	9005883a 	mov	r2,r18
    84e4:	dfc00917 	ldw	ra,36(sp)
    84e8:	df000817 	ldw	fp,32(sp)
    84ec:	ddc00717 	ldw	r23,28(sp)
    84f0:	dd800617 	ldw	r22,24(sp)
    84f4:	dd400517 	ldw	r21,20(sp)
    84f8:	dd000417 	ldw	r20,16(sp)
    84fc:	dcc00317 	ldw	r19,12(sp)
    8500:	dc800217 	ldw	r18,8(sp)
    8504:	dc400117 	ldw	r17,4(sp)
    8508:	dc000017 	ldw	r16,0(sp)
    850c:	dec00a04 	addi	sp,sp,40
    8510:	f800283a 	ret
    8514:	017fff04 	movi	r5,-4
    8518:	414a703a 	and	r5,r8,r5
    851c:	814d883a 	add	r6,r16,r5
    8520:	30c01f16 	blt	r6,r3,85a0 <_realloc_r+0x22c>
    8524:	20800317 	ldw	r2,12(r4)
    8528:	20c00217 	ldw	r3,8(r4)
    852c:	a825883a 	mov	r18,r21
    8530:	3021883a 	mov	r16,r6
    8534:	18800315 	stw	r2,12(r3)
    8538:	10c00215 	stw	r3,8(r2)
    853c:	003fdb06 	br	84ac <__alt_mem_onchip_memory2_0+0xf70084ac>
    8540:	00800304 	movi	r2,12
    8544:	a0800015 	stw	r2,0(r20)
    8548:	0005883a 	mov	r2,zero
    854c:	003fe506 	br	84e4 <__alt_mem_onchip_memory2_0+0xf70084e4>
    8550:	98c00117 	ldw	r3,4(r19)
    8554:	9c4b883a 	add	r5,r19,r17
    8558:	11000054 	ori	r4,r2,1
    855c:	18c0004c 	andi	r3,r3,1
    8560:	1c62b03a 	or	r17,r3,r17
    8564:	9c400115 	stw	r17,4(r19)
    8568:	29000115 	stw	r4,4(r5)
    856c:	2885883a 	add	r2,r5,r2
    8570:	10c00117 	ldw	r3,4(r2)
    8574:	29400204 	addi	r5,r5,8
    8578:	a009883a 	mov	r4,r20
    857c:	18c00054 	ori	r3,r3,1
    8580:	10c00115 	stw	r3,4(r2)
    8584:	0007de00 	call	7de0 <_free_r>
    8588:	003fd306 	br	84d8 <__alt_mem_onchip_memory2_0+0xf70084d8>
    858c:	017fff04 	movi	r5,-4
    8590:	414a703a 	and	r5,r8,r5
    8594:	89800404 	addi	r6,r17,16
    8598:	8151883a 	add	r8,r16,r5
    859c:	4180590e 	bge	r8,r6,8704 <_realloc_r+0x390>
    85a0:	1080004c 	andi	r2,r2,1
    85a4:	103f9e1e 	bne	r2,zero,8420 <__alt_mem_onchip_memory2_0+0xf7008420>
    85a8:	adbffe17 	ldw	r22,-8(r21)
    85ac:	00bfff04 	movi	r2,-4
    85b0:	9dadc83a 	sub	r22,r19,r22
    85b4:	b1800117 	ldw	r6,4(r22)
    85b8:	3084703a 	and	r2,r6,r2
    85bc:	20002026 	beq	r4,zero,8640 <_realloc_r+0x2cc>
    85c0:	80af883a 	add	r23,r16,r2
    85c4:	b96f883a 	add	r23,r23,r5
    85c8:	21c05f26 	beq	r4,r7,8748 <_realloc_r+0x3d4>
    85cc:	b8c01c16 	blt	r23,r3,8640 <_realloc_r+0x2cc>
    85d0:	20800317 	ldw	r2,12(r4)
    85d4:	20c00217 	ldw	r3,8(r4)
    85d8:	81bfff04 	addi	r6,r16,-4
    85dc:	01000904 	movi	r4,36
    85e0:	18800315 	stw	r2,12(r3)
    85e4:	10c00215 	stw	r3,8(r2)
    85e8:	b0c00217 	ldw	r3,8(r22)
    85ec:	b0800317 	ldw	r2,12(r22)
    85f0:	b4800204 	addi	r18,r22,8
    85f4:	18800315 	stw	r2,12(r3)
    85f8:	10c00215 	stw	r3,8(r2)
    85fc:	21801b36 	bltu	r4,r6,866c <_realloc_r+0x2f8>
    8600:	008004c4 	movi	r2,19
    8604:	1180352e 	bgeu	r2,r6,86dc <_realloc_r+0x368>
    8608:	a8800017 	ldw	r2,0(r21)
    860c:	b0800215 	stw	r2,8(r22)
    8610:	a8800117 	ldw	r2,4(r21)
    8614:	b0800315 	stw	r2,12(r22)
    8618:	008006c4 	movi	r2,27
    861c:	11807f36 	bltu	r2,r6,881c <_realloc_r+0x4a8>
    8620:	b0800404 	addi	r2,r22,16
    8624:	ad400204 	addi	r21,r21,8
    8628:	00002d06 	br	86e0 <_realloc_r+0x36c>
    862c:	adbffe17 	ldw	r22,-8(r21)
    8630:	00bfff04 	movi	r2,-4
    8634:	9dadc83a 	sub	r22,r19,r22
    8638:	b1000117 	ldw	r4,4(r22)
    863c:	2084703a 	and	r2,r4,r2
    8640:	b03f7726 	beq	r22,zero,8420 <__alt_mem_onchip_memory2_0+0xf7008420>
    8644:	80af883a 	add	r23,r16,r2
    8648:	b8ff7516 	blt	r23,r3,8420 <__alt_mem_onchip_memory2_0+0xf7008420>
    864c:	b0800317 	ldw	r2,12(r22)
    8650:	b0c00217 	ldw	r3,8(r22)
    8654:	81bfff04 	addi	r6,r16,-4
    8658:	01000904 	movi	r4,36
    865c:	18800315 	stw	r2,12(r3)
    8660:	10c00215 	stw	r3,8(r2)
    8664:	b4800204 	addi	r18,r22,8
    8668:	21bfe52e 	bgeu	r4,r6,8600 <__alt_mem_onchip_memory2_0+0xf7008600>
    866c:	a80b883a 	mov	r5,r21
    8670:	9009883a 	mov	r4,r18
    8674:	00080f00 	call	80f0 <memmove>
    8678:	b821883a 	mov	r16,r23
    867c:	b027883a 	mov	r19,r22
    8680:	003f8a06 	br	84ac <__alt_mem_onchip_memory2_0+0xf70084ac>
    8684:	300b883a 	mov	r5,r6
    8688:	dfc00917 	ldw	ra,36(sp)
    868c:	df000817 	ldw	fp,32(sp)
    8690:	ddc00717 	ldw	r23,28(sp)
    8694:	dd800617 	ldw	r22,24(sp)
    8698:	dd400517 	ldw	r21,20(sp)
    869c:	dd000417 	ldw	r20,16(sp)
    86a0:	dcc00317 	ldw	r19,12(sp)
    86a4:	dc800217 	ldw	r18,8(sp)
    86a8:	dc400117 	ldw	r17,4(sp)
    86ac:	dc000017 	ldw	r16,0(sp)
    86b0:	dec00a04 	addi	sp,sp,40
    86b4:	00049dc1 	jmpi	49dc <_malloc_r>
    86b8:	a8c00017 	ldw	r3,0(r21)
    86bc:	90c00015 	stw	r3,0(r18)
    86c0:	a8c00117 	ldw	r3,4(r21)
    86c4:	90c00115 	stw	r3,4(r18)
    86c8:	00c006c4 	movi	r3,27
    86cc:	19804536 	bltu	r3,r6,87e4 <_realloc_r+0x470>
    86d0:	90800204 	addi	r2,r18,8
    86d4:	a8c00204 	addi	r3,r21,8
    86d8:	003f6306 	br	8468 <__alt_mem_onchip_memory2_0+0xf7008468>
    86dc:	9005883a 	mov	r2,r18
    86e0:	a8c00017 	ldw	r3,0(r21)
    86e4:	b821883a 	mov	r16,r23
    86e8:	b027883a 	mov	r19,r22
    86ec:	10c00015 	stw	r3,0(r2)
    86f0:	a8c00117 	ldw	r3,4(r21)
    86f4:	10c00115 	stw	r3,4(r2)
    86f8:	a8c00217 	ldw	r3,8(r21)
    86fc:	10c00215 	stw	r3,8(r2)
    8700:	003f6a06 	br	84ac <__alt_mem_onchip_memory2_0+0xf70084ac>
    8704:	9c67883a 	add	r19,r19,r17
    8708:	4445c83a 	sub	r2,r8,r17
    870c:	e4c00215 	stw	r19,8(fp)
    8710:	10800054 	ori	r2,r2,1
    8714:	98800115 	stw	r2,4(r19)
    8718:	a8bfff17 	ldw	r2,-4(r21)
    871c:	a009883a 	mov	r4,r20
    8720:	1080004c 	andi	r2,r2,1
    8724:	1462b03a 	or	r17,r2,r17
    8728:	ac7fff15 	stw	r17,-4(r21)
    872c:	000bfd40 	call	bfd4 <__malloc_unlock>
    8730:	a805883a 	mov	r2,r21
    8734:	003f6b06 	br	84e4 <__alt_mem_onchip_memory2_0+0xf70084e4>
    8738:	a80b883a 	mov	r5,r21
    873c:	9009883a 	mov	r4,r18
    8740:	00080f00 	call	80f0 <memmove>
    8744:	003f4e06 	br	8480 <__alt_mem_onchip_memory2_0+0xf7008480>
    8748:	89000404 	addi	r4,r17,16
    874c:	b93fbc16 	blt	r23,r4,8640 <__alt_mem_onchip_memory2_0+0xf7008640>
    8750:	b0800317 	ldw	r2,12(r22)
    8754:	b0c00217 	ldw	r3,8(r22)
    8758:	81bfff04 	addi	r6,r16,-4
    875c:	01000904 	movi	r4,36
    8760:	18800315 	stw	r2,12(r3)
    8764:	10c00215 	stw	r3,8(r2)
    8768:	b4800204 	addi	r18,r22,8
    876c:	21804336 	bltu	r4,r6,887c <_realloc_r+0x508>
    8770:	008004c4 	movi	r2,19
    8774:	11803f2e 	bgeu	r2,r6,8874 <_realloc_r+0x500>
    8778:	a8800017 	ldw	r2,0(r21)
    877c:	b0800215 	stw	r2,8(r22)
    8780:	a8800117 	ldw	r2,4(r21)
    8784:	b0800315 	stw	r2,12(r22)
    8788:	008006c4 	movi	r2,27
    878c:	11803f36 	bltu	r2,r6,888c <_realloc_r+0x518>
    8790:	b0800404 	addi	r2,r22,16
    8794:	ad400204 	addi	r21,r21,8
    8798:	a8c00017 	ldw	r3,0(r21)
    879c:	10c00015 	stw	r3,0(r2)
    87a0:	a8c00117 	ldw	r3,4(r21)
    87a4:	10c00115 	stw	r3,4(r2)
    87a8:	a8c00217 	ldw	r3,8(r21)
    87ac:	10c00215 	stw	r3,8(r2)
    87b0:	b447883a 	add	r3,r22,r17
    87b4:	bc45c83a 	sub	r2,r23,r17
    87b8:	e0c00215 	stw	r3,8(fp)
    87bc:	10800054 	ori	r2,r2,1
    87c0:	18800115 	stw	r2,4(r3)
    87c4:	b0800117 	ldw	r2,4(r22)
    87c8:	a009883a 	mov	r4,r20
    87cc:	1080004c 	andi	r2,r2,1
    87d0:	1462b03a 	or	r17,r2,r17
    87d4:	b4400115 	stw	r17,4(r22)
    87d8:	000bfd40 	call	bfd4 <__malloc_unlock>
    87dc:	9005883a 	mov	r2,r18
    87e0:	003f4006 	br	84e4 <__alt_mem_onchip_memory2_0+0xf70084e4>
    87e4:	a8c00217 	ldw	r3,8(r21)
    87e8:	90c00215 	stw	r3,8(r18)
    87ec:	a8c00317 	ldw	r3,12(r21)
    87f0:	90c00315 	stw	r3,12(r18)
    87f4:	30801126 	beq	r6,r2,883c <_realloc_r+0x4c8>
    87f8:	90800404 	addi	r2,r18,16
    87fc:	a8c00404 	addi	r3,r21,16
    8800:	003f1906 	br	8468 <__alt_mem_onchip_memory2_0+0xf7008468>
    8804:	90ffff17 	ldw	r3,-4(r18)
    8808:	00bfff04 	movi	r2,-4
    880c:	a825883a 	mov	r18,r21
    8810:	1884703a 	and	r2,r3,r2
    8814:	80a1883a 	add	r16,r16,r2
    8818:	003f2406 	br	84ac <__alt_mem_onchip_memory2_0+0xf70084ac>
    881c:	a8800217 	ldw	r2,8(r21)
    8820:	b0800415 	stw	r2,16(r22)
    8824:	a8800317 	ldw	r2,12(r21)
    8828:	b0800515 	stw	r2,20(r22)
    882c:	31000a26 	beq	r6,r4,8858 <_realloc_r+0x4e4>
    8830:	b0800604 	addi	r2,r22,24
    8834:	ad400404 	addi	r21,r21,16
    8838:	003fa906 	br	86e0 <__alt_mem_onchip_memory2_0+0xf70086e0>
    883c:	a9000417 	ldw	r4,16(r21)
    8840:	90800604 	addi	r2,r18,24
    8844:	a8c00604 	addi	r3,r21,24
    8848:	91000415 	stw	r4,16(r18)
    884c:	a9000517 	ldw	r4,20(r21)
    8850:	91000515 	stw	r4,20(r18)
    8854:	003f0406 	br	8468 <__alt_mem_onchip_memory2_0+0xf7008468>
    8858:	a8c00417 	ldw	r3,16(r21)
    885c:	ad400604 	addi	r21,r21,24
    8860:	b0800804 	addi	r2,r22,32
    8864:	b0c00615 	stw	r3,24(r22)
    8868:	a8ffff17 	ldw	r3,-4(r21)
    886c:	b0c00715 	stw	r3,28(r22)
    8870:	003f9b06 	br	86e0 <__alt_mem_onchip_memory2_0+0xf70086e0>
    8874:	9005883a 	mov	r2,r18
    8878:	003fc706 	br	8798 <__alt_mem_onchip_memory2_0+0xf7008798>
    887c:	a80b883a 	mov	r5,r21
    8880:	9009883a 	mov	r4,r18
    8884:	00080f00 	call	80f0 <memmove>
    8888:	003fc906 	br	87b0 <__alt_mem_onchip_memory2_0+0xf70087b0>
    888c:	a8800217 	ldw	r2,8(r21)
    8890:	b0800415 	stw	r2,16(r22)
    8894:	a8800317 	ldw	r2,12(r21)
    8898:	b0800515 	stw	r2,20(r22)
    889c:	31000726 	beq	r6,r4,88bc <_realloc_r+0x548>
    88a0:	b0800604 	addi	r2,r22,24
    88a4:	ad400404 	addi	r21,r21,16
    88a8:	003fbb06 	br	8798 <__alt_mem_onchip_memory2_0+0xf7008798>
    88ac:	a009883a 	mov	r4,r20
    88b0:	000bfd40 	call	bfd4 <__malloc_unlock>
    88b4:	0005883a 	mov	r2,zero
    88b8:	003f0a06 	br	84e4 <__alt_mem_onchip_memory2_0+0xf70084e4>
    88bc:	a8c00417 	ldw	r3,16(r21)
    88c0:	ad400604 	addi	r21,r21,24
    88c4:	b0800804 	addi	r2,r22,32
    88c8:	b0c00615 	stw	r3,24(r22)
    88cc:	a8ffff17 	ldw	r3,-4(r21)
    88d0:	b0c00715 	stw	r3,28(r22)
    88d4:	003fb006 	br	8798 <__alt_mem_onchip_memory2_0+0xf7008798>

000088d8 <__muldi3>:
    88d8:	defff604 	addi	sp,sp,-40
    88dc:	dd800615 	stw	r22,24(sp)
    88e0:	dd400515 	stw	r21,20(sp)
    88e4:	dc400115 	stw	r17,4(sp)
    88e8:	357fffcc 	andi	r21,r6,65535
    88ec:	2022d43a 	srli	r17,r4,16
    88f0:	25bfffcc 	andi	r22,r4,65535
    88f4:	dcc00315 	stw	r19,12(sp)
    88f8:	dc800215 	stw	r18,8(sp)
    88fc:	2027883a 	mov	r19,r4
    8900:	2825883a 	mov	r18,r5
    8904:	b009883a 	mov	r4,r22
    8908:	a80b883a 	mov	r5,r21
    890c:	dfc00915 	stw	ra,36(sp)
    8910:	df000815 	stw	fp,32(sp)
    8914:	ddc00715 	stw	r23,28(sp)
    8918:	3839883a 	mov	fp,r7
    891c:	302ed43a 	srli	r23,r6,16
    8920:	dd000415 	stw	r20,16(sp)
    8924:	dc000015 	stw	r16,0(sp)
    8928:	3029883a 	mov	r20,r6
    892c:	0000b940 	call	b94 <__mulsi3>
    8930:	a80b883a 	mov	r5,r21
    8934:	8809883a 	mov	r4,r17
    8938:	1021883a 	mov	r16,r2
    893c:	0000b940 	call	b94 <__mulsi3>
    8940:	8809883a 	mov	r4,r17
    8944:	b80b883a 	mov	r5,r23
    8948:	102b883a 	mov	r21,r2
    894c:	0000b940 	call	b94 <__mulsi3>
    8950:	b80b883a 	mov	r5,r23
    8954:	b009883a 	mov	r4,r22
    8958:	1023883a 	mov	r17,r2
    895c:	0000b940 	call	b94 <__mulsi3>
    8960:	8006d43a 	srli	r3,r16,16
    8964:	1545883a 	add	r2,r2,r21
    8968:	1885883a 	add	r2,r3,r2
    896c:	1540022e 	bgeu	r2,r21,8978 <__muldi3+0xa0>
    8970:	00c00074 	movhi	r3,1
    8974:	88e3883a 	add	r17,r17,r3
    8978:	1006d43a 	srli	r3,r2,16
    897c:	1004943a 	slli	r2,r2,16
    8980:	e00b883a 	mov	r5,fp
    8984:	9809883a 	mov	r4,r19
    8988:	843fffcc 	andi	r16,r16,65535
    898c:	1c63883a 	add	r17,r3,r17
    8990:	1421883a 	add	r16,r2,r16
    8994:	0000b940 	call	b94 <__mulsi3>
    8998:	900b883a 	mov	r5,r18
    899c:	a009883a 	mov	r4,r20
    89a0:	1027883a 	mov	r19,r2
    89a4:	0000b940 	call	b94 <__mulsi3>
    89a8:	9885883a 	add	r2,r19,r2
    89ac:	1447883a 	add	r3,r2,r17
    89b0:	8005883a 	mov	r2,r16
    89b4:	dfc00917 	ldw	ra,36(sp)
    89b8:	df000817 	ldw	fp,32(sp)
    89bc:	ddc00717 	ldw	r23,28(sp)
    89c0:	dd800617 	ldw	r22,24(sp)
    89c4:	dd400517 	ldw	r21,20(sp)
    89c8:	dd000417 	ldw	r20,16(sp)
    89cc:	dcc00317 	ldw	r19,12(sp)
    89d0:	dc800217 	ldw	r18,8(sp)
    89d4:	dc400117 	ldw	r17,4(sp)
    89d8:	dc000017 	ldw	r16,0(sp)
    89dc:	dec00a04 	addi	sp,sp,40
    89e0:	f800283a 	ret

000089e4 <__udivdi3>:
    89e4:	defff404 	addi	sp,sp,-48
    89e8:	dcc00515 	stw	r19,20(sp)
    89ec:	dc000215 	stw	r16,8(sp)
    89f0:	dfc00b15 	stw	ra,44(sp)
    89f4:	df000a15 	stw	fp,40(sp)
    89f8:	ddc00915 	stw	r23,36(sp)
    89fc:	dd800815 	stw	r22,32(sp)
    8a00:	dd400715 	stw	r21,28(sp)
    8a04:	dd000615 	stw	r20,24(sp)
    8a08:	dc800415 	stw	r18,16(sp)
    8a0c:	dc400315 	stw	r17,12(sp)
    8a10:	2027883a 	mov	r19,r4
    8a14:	2821883a 	mov	r16,r5
    8a18:	3800461e 	bne	r7,zero,8b34 <__udivdi3+0x150>
    8a1c:	3023883a 	mov	r17,r6
    8a20:	2025883a 	mov	r18,r4
    8a24:	2980572e 	bgeu	r5,r6,8b84 <__udivdi3+0x1a0>
    8a28:	00bfffd4 	movui	r2,65535
    8a2c:	282d883a 	mov	r22,r5
    8a30:	1180b236 	bltu	r2,r6,8cfc <__udivdi3+0x318>
    8a34:	00803fc4 	movi	r2,255
    8a38:	1185803a 	cmpltu	r2,r2,r6
    8a3c:	100490fa 	slli	r2,r2,3
    8a40:	3086d83a 	srl	r3,r6,r2
    8a44:	01000074 	movhi	r4,1
    8a48:	2138c504 	addi	r4,r4,-7404
    8a4c:	20c7883a 	add	r3,r4,r3
    8a50:	18c00003 	ldbu	r3,0(r3)
    8a54:	1885883a 	add	r2,r3,r2
    8a58:	00c00804 	movi	r3,32
    8a5c:	1887c83a 	sub	r3,r3,r2
    8a60:	18000526 	beq	r3,zero,8a78 <__udivdi3+0x94>
    8a64:	80e0983a 	sll	r16,r16,r3
    8a68:	9884d83a 	srl	r2,r19,r2
    8a6c:	30e2983a 	sll	r17,r6,r3
    8a70:	98e4983a 	sll	r18,r19,r3
    8a74:	142cb03a 	or	r22,r2,r16
    8a78:	882ad43a 	srli	r21,r17,16
    8a7c:	b009883a 	mov	r4,r22
    8a80:	8d3fffcc 	andi	r20,r17,65535
    8a84:	a80b883a 	mov	r5,r21
    8a88:	0000b3c0 	call	b3c <__umodsi3>
    8a8c:	b009883a 	mov	r4,r22
    8a90:	a80b883a 	mov	r5,r21
    8a94:	1027883a 	mov	r19,r2
    8a98:	0000ad80 	call	ad8 <__udivsi3>
    8a9c:	100b883a 	mov	r5,r2
    8aa0:	a009883a 	mov	r4,r20
    8aa4:	102d883a 	mov	r22,r2
    8aa8:	0000b940 	call	b94 <__mulsi3>
    8aac:	9826943a 	slli	r19,r19,16
    8ab0:	9006d43a 	srli	r3,r18,16
    8ab4:	1cc6b03a 	or	r3,r3,r19
    8ab8:	1880052e 	bgeu	r3,r2,8ad0 <__udivdi3+0xec>
    8abc:	1c47883a 	add	r3,r3,r17
    8ac0:	b13fffc4 	addi	r4,r22,-1
    8ac4:	1c400136 	bltu	r3,r17,8acc <__udivdi3+0xe8>
    8ac8:	18814236 	bltu	r3,r2,8fd4 <__udivdi3+0x5f0>
    8acc:	202d883a 	mov	r22,r4
    8ad0:	18a1c83a 	sub	r16,r3,r2
    8ad4:	8009883a 	mov	r4,r16
    8ad8:	a80b883a 	mov	r5,r21
    8adc:	0000b3c0 	call	b3c <__umodsi3>
    8ae0:	1027883a 	mov	r19,r2
    8ae4:	8009883a 	mov	r4,r16
    8ae8:	a80b883a 	mov	r5,r21
    8aec:	9826943a 	slli	r19,r19,16
    8af0:	0000ad80 	call	ad8 <__udivsi3>
    8af4:	100b883a 	mov	r5,r2
    8af8:	a009883a 	mov	r4,r20
    8afc:	94bfffcc 	andi	r18,r18,65535
    8b00:	1021883a 	mov	r16,r2
    8b04:	94e4b03a 	or	r18,r18,r19
    8b08:	0000b940 	call	b94 <__mulsi3>
    8b0c:	9080052e 	bgeu	r18,r2,8b24 <__udivdi3+0x140>
    8b10:	8ca5883a 	add	r18,r17,r18
    8b14:	80ffffc4 	addi	r3,r16,-1
    8b18:	94410c36 	bltu	r18,r17,8f4c <__udivdi3+0x568>
    8b1c:	90810b2e 	bgeu	r18,r2,8f4c <__udivdi3+0x568>
    8b20:	843fff84 	addi	r16,r16,-2
    8b24:	b004943a 	slli	r2,r22,16
    8b28:	0007883a 	mov	r3,zero
    8b2c:	1404b03a 	or	r2,r2,r16
    8b30:	00005e06 	br	8cac <__udivdi3+0x2c8>
    8b34:	29c05b36 	bltu	r5,r7,8ca4 <__udivdi3+0x2c0>
    8b38:	00bfffd4 	movui	r2,65535
    8b3c:	11c0672e 	bgeu	r2,r7,8cdc <__udivdi3+0x2f8>
    8b40:	00804034 	movhi	r2,256
    8b44:	10bfffc4 	addi	r2,r2,-1
    8b48:	11c10a36 	bltu	r2,r7,8f74 <__udivdi3+0x590>
    8b4c:	00800404 	movi	r2,16
    8b50:	3886d83a 	srl	r3,r7,r2
    8b54:	01000074 	movhi	r4,1
    8b58:	2138c504 	addi	r4,r4,-7404
    8b5c:	20c7883a 	add	r3,r4,r3
    8b60:	18c00003 	ldbu	r3,0(r3)
    8b64:	05c00804 	movi	r23,32
    8b68:	1885883a 	add	r2,r3,r2
    8b6c:	b8afc83a 	sub	r23,r23,r2
    8b70:	b800671e 	bne	r23,zero,8d10 <__udivdi3+0x32c>
    8b74:	3c010536 	bltu	r7,r16,8f8c <__udivdi3+0x5a8>
    8b78:	9985403a 	cmpgeu	r2,r19,r6
    8b7c:	0007883a 	mov	r3,zero
    8b80:	00004a06 	br	8cac <__udivdi3+0x2c8>
    8b84:	3000041e 	bne	r6,zero,8b98 <__udivdi3+0x1b4>
    8b88:	000b883a 	mov	r5,zero
    8b8c:	01000044 	movi	r4,1
    8b90:	0000ad80 	call	ad8 <__udivsi3>
    8b94:	1023883a 	mov	r17,r2
    8b98:	00bfffd4 	movui	r2,65535
    8b9c:	1440532e 	bgeu	r2,r17,8cec <__udivdi3+0x308>
    8ba0:	00804034 	movhi	r2,256
    8ba4:	10bfffc4 	addi	r2,r2,-1
    8ba8:	1440f436 	bltu	r2,r17,8f7c <__udivdi3+0x598>
    8bac:	00800404 	movi	r2,16
    8bb0:	8886d83a 	srl	r3,r17,r2
    8bb4:	01000074 	movhi	r4,1
    8bb8:	2138c504 	addi	r4,r4,-7404
    8bbc:	20c7883a 	add	r3,r4,r3
    8bc0:	18c00003 	ldbu	r3,0(r3)
    8bc4:	1885883a 	add	r2,r3,r2
    8bc8:	00c00804 	movi	r3,32
    8bcc:	1887c83a 	sub	r3,r3,r2
    8bd0:	1800a51e 	bne	r3,zero,8e68 <__udivdi3+0x484>
    8bd4:	882ad43a 	srli	r21,r17,16
    8bd8:	8461c83a 	sub	r16,r16,r17
    8bdc:	8d3fffcc 	andi	r20,r17,65535
    8be0:	00c00044 	movi	r3,1
    8be4:	a80b883a 	mov	r5,r21
    8be8:	8009883a 	mov	r4,r16
    8bec:	d8c00115 	stw	r3,4(sp)
    8bf0:	0000b3c0 	call	b3c <__umodsi3>
    8bf4:	a80b883a 	mov	r5,r21
    8bf8:	8009883a 	mov	r4,r16
    8bfc:	1027883a 	mov	r19,r2
    8c00:	0000ad80 	call	ad8 <__udivsi3>
    8c04:	a00b883a 	mov	r5,r20
    8c08:	1009883a 	mov	r4,r2
    8c0c:	102d883a 	mov	r22,r2
    8c10:	0000b940 	call	b94 <__mulsi3>
    8c14:	9826943a 	slli	r19,r19,16
    8c18:	900ed43a 	srli	r7,r18,16
    8c1c:	d8c00117 	ldw	r3,4(sp)
    8c20:	3cceb03a 	or	r7,r7,r19
    8c24:	3880052e 	bgeu	r7,r2,8c3c <__udivdi3+0x258>
    8c28:	3c4f883a 	add	r7,r7,r17
    8c2c:	b13fffc4 	addi	r4,r22,-1
    8c30:	3c400136 	bltu	r7,r17,8c38 <__udivdi3+0x254>
    8c34:	3880e436 	bltu	r7,r2,8fc8 <__udivdi3+0x5e4>
    8c38:	202d883a 	mov	r22,r4
    8c3c:	38a1c83a 	sub	r16,r7,r2
    8c40:	8009883a 	mov	r4,r16
    8c44:	a80b883a 	mov	r5,r21
    8c48:	d8c00115 	stw	r3,4(sp)
    8c4c:	0000b3c0 	call	b3c <__umodsi3>
    8c50:	1027883a 	mov	r19,r2
    8c54:	8009883a 	mov	r4,r16
    8c58:	a80b883a 	mov	r5,r21
    8c5c:	9826943a 	slli	r19,r19,16
    8c60:	0000ad80 	call	ad8 <__udivsi3>
    8c64:	a00b883a 	mov	r5,r20
    8c68:	1009883a 	mov	r4,r2
    8c6c:	94bfffcc 	andi	r18,r18,65535
    8c70:	1021883a 	mov	r16,r2
    8c74:	94e4b03a 	or	r18,r18,r19
    8c78:	0000b940 	call	b94 <__mulsi3>
    8c7c:	d8c00117 	ldw	r3,4(sp)
    8c80:	9080052e 	bgeu	r18,r2,8c98 <__udivdi3+0x2b4>
    8c84:	8ca5883a 	add	r18,r17,r18
    8c88:	813fffc4 	addi	r4,r16,-1
    8c8c:	9440ad36 	bltu	r18,r17,8f44 <__udivdi3+0x560>
    8c90:	9080ac2e 	bgeu	r18,r2,8f44 <__udivdi3+0x560>
    8c94:	843fff84 	addi	r16,r16,-2
    8c98:	b004943a 	slli	r2,r22,16
    8c9c:	1404b03a 	or	r2,r2,r16
    8ca0:	00000206 	br	8cac <__udivdi3+0x2c8>
    8ca4:	0007883a 	mov	r3,zero
    8ca8:	0005883a 	mov	r2,zero
    8cac:	dfc00b17 	ldw	ra,44(sp)
    8cb0:	df000a17 	ldw	fp,40(sp)
    8cb4:	ddc00917 	ldw	r23,36(sp)
    8cb8:	dd800817 	ldw	r22,32(sp)
    8cbc:	dd400717 	ldw	r21,28(sp)
    8cc0:	dd000617 	ldw	r20,24(sp)
    8cc4:	dcc00517 	ldw	r19,20(sp)
    8cc8:	dc800417 	ldw	r18,16(sp)
    8ccc:	dc400317 	ldw	r17,12(sp)
    8cd0:	dc000217 	ldw	r16,8(sp)
    8cd4:	dec00c04 	addi	sp,sp,48
    8cd8:	f800283a 	ret
    8cdc:	00803fc4 	movi	r2,255
    8ce0:	11c5803a 	cmpltu	r2,r2,r7
    8ce4:	100490fa 	slli	r2,r2,3
    8ce8:	003f9906 	br	8b50 <__alt_mem_onchip_memory2_0+0xf7008b50>
    8cec:	00803fc4 	movi	r2,255
    8cf0:	1445803a 	cmpltu	r2,r2,r17
    8cf4:	100490fa 	slli	r2,r2,3
    8cf8:	003fad06 	br	8bb0 <__alt_mem_onchip_memory2_0+0xf7008bb0>
    8cfc:	00804034 	movhi	r2,256
    8d00:	10bfffc4 	addi	r2,r2,-1
    8d04:	11809f36 	bltu	r2,r6,8f84 <__udivdi3+0x5a0>
    8d08:	00800404 	movi	r2,16
    8d0c:	003f4c06 	br	8a40 <__alt_mem_onchip_memory2_0+0xf7008a40>
    8d10:	3dce983a 	sll	r7,r7,r23
    8d14:	30b8d83a 	srl	fp,r6,r2
    8d18:	80a2d83a 	srl	r17,r16,r2
    8d1c:	35cc983a 	sll	r6,r6,r23
    8d20:	3f38b03a 	or	fp,r7,fp
    8d24:	e024d43a 	srli	r18,fp,16
    8d28:	9884d83a 	srl	r2,r19,r2
    8d2c:	85e0983a 	sll	r16,r16,r23
    8d30:	8809883a 	mov	r4,r17
    8d34:	900b883a 	mov	r5,r18
    8d38:	d9800015 	stw	r6,0(sp)
    8d3c:	1420b03a 	or	r16,r2,r16
    8d40:	0000b3c0 	call	b3c <__umodsi3>
    8d44:	900b883a 	mov	r5,r18
    8d48:	8809883a 	mov	r4,r17
    8d4c:	1029883a 	mov	r20,r2
    8d50:	e5bfffcc 	andi	r22,fp,65535
    8d54:	0000ad80 	call	ad8 <__udivsi3>
    8d58:	100b883a 	mov	r5,r2
    8d5c:	b009883a 	mov	r4,r22
    8d60:	102b883a 	mov	r21,r2
    8d64:	0000b940 	call	b94 <__mulsi3>
    8d68:	a028943a 	slli	r20,r20,16
    8d6c:	8006d43a 	srli	r3,r16,16
    8d70:	1d06b03a 	or	r3,r3,r20
    8d74:	1880042e 	bgeu	r3,r2,8d88 <__udivdi3+0x3a4>
    8d78:	1f07883a 	add	r3,r3,fp
    8d7c:	a93fffc4 	addi	r4,r21,-1
    8d80:	1f00892e 	bgeu	r3,fp,8fa8 <__udivdi3+0x5c4>
    8d84:	202b883a 	mov	r21,r4
    8d88:	18a3c83a 	sub	r17,r3,r2
    8d8c:	8809883a 	mov	r4,r17
    8d90:	900b883a 	mov	r5,r18
    8d94:	0000b3c0 	call	b3c <__umodsi3>
    8d98:	1029883a 	mov	r20,r2
    8d9c:	8809883a 	mov	r4,r17
    8da0:	900b883a 	mov	r5,r18
    8da4:	a028943a 	slli	r20,r20,16
    8da8:	0000ad80 	call	ad8 <__udivsi3>
    8dac:	100b883a 	mov	r5,r2
    8db0:	b009883a 	mov	r4,r22
    8db4:	843fffcc 	andi	r16,r16,65535
    8db8:	1023883a 	mov	r17,r2
    8dbc:	8520b03a 	or	r16,r16,r20
    8dc0:	0000b940 	call	b94 <__mulsi3>
    8dc4:	8080042e 	bgeu	r16,r2,8dd8 <__udivdi3+0x3f4>
    8dc8:	8721883a 	add	r16,r16,fp
    8dcc:	88ffffc4 	addi	r3,r17,-1
    8dd0:	8700712e 	bgeu	r16,fp,8f98 <__udivdi3+0x5b4>
    8dd4:	1823883a 	mov	r17,r3
    8dd8:	a80e943a 	slli	r7,r21,16
    8ddc:	d8c00017 	ldw	r3,0(sp)
    8de0:	80a1c83a 	sub	r16,r16,r2
    8de4:	3c64b03a 	or	r18,r7,r17
    8de8:	1d3fffcc 	andi	r20,r3,65535
    8dec:	9022d43a 	srli	r17,r18,16
    8df0:	95bfffcc 	andi	r22,r18,65535
    8df4:	a00b883a 	mov	r5,r20
    8df8:	b009883a 	mov	r4,r22
    8dfc:	182ad43a 	srli	r21,r3,16
    8e00:	0000b940 	call	b94 <__mulsi3>
    8e04:	a00b883a 	mov	r5,r20
    8e08:	8809883a 	mov	r4,r17
    8e0c:	1039883a 	mov	fp,r2
    8e10:	0000b940 	call	b94 <__mulsi3>
    8e14:	8809883a 	mov	r4,r17
    8e18:	a80b883a 	mov	r5,r21
    8e1c:	1029883a 	mov	r20,r2
    8e20:	0000b940 	call	b94 <__mulsi3>
    8e24:	a80b883a 	mov	r5,r21
    8e28:	b009883a 	mov	r4,r22
    8e2c:	1023883a 	mov	r17,r2
    8e30:	0000b940 	call	b94 <__mulsi3>
    8e34:	e006d43a 	srli	r3,fp,16
    8e38:	1505883a 	add	r2,r2,r20
    8e3c:	1887883a 	add	r3,r3,r2
    8e40:	1d00022e 	bgeu	r3,r20,8e4c <__udivdi3+0x468>
    8e44:	00800074 	movhi	r2,1
    8e48:	88a3883a 	add	r17,r17,r2
    8e4c:	1804d43a 	srli	r2,r3,16
    8e50:	1463883a 	add	r17,r2,r17
    8e54:	84404436 	bltu	r16,r17,8f68 <__udivdi3+0x584>
    8e58:	84403e26 	beq	r16,r17,8f54 <__udivdi3+0x570>
    8e5c:	9005883a 	mov	r2,r18
    8e60:	0007883a 	mov	r3,zero
    8e64:	003f9106 	br	8cac <__alt_mem_onchip_memory2_0+0xf7008cac>
    8e68:	88e2983a 	sll	r17,r17,r3
    8e6c:	80aed83a 	srl	r23,r16,r2
    8e70:	80e0983a 	sll	r16,r16,r3
    8e74:	882ad43a 	srli	r21,r17,16
    8e78:	9884d83a 	srl	r2,r19,r2
    8e7c:	b809883a 	mov	r4,r23
    8e80:	a80b883a 	mov	r5,r21
    8e84:	98e4983a 	sll	r18,r19,r3
    8e88:	142cb03a 	or	r22,r2,r16
    8e8c:	0000b3c0 	call	b3c <__umodsi3>
    8e90:	b809883a 	mov	r4,r23
    8e94:	a80b883a 	mov	r5,r21
    8e98:	1027883a 	mov	r19,r2
    8e9c:	8d3fffcc 	andi	r20,r17,65535
    8ea0:	0000ad80 	call	ad8 <__udivsi3>
    8ea4:	a009883a 	mov	r4,r20
    8ea8:	100b883a 	mov	r5,r2
    8eac:	102f883a 	mov	r23,r2
    8eb0:	0000b940 	call	b94 <__mulsi3>
    8eb4:	9826943a 	slli	r19,r19,16
    8eb8:	b008d43a 	srli	r4,r22,16
    8ebc:	24c8b03a 	or	r4,r4,r19
    8ec0:	2080062e 	bgeu	r4,r2,8edc <__udivdi3+0x4f8>
    8ec4:	2449883a 	add	r4,r4,r17
    8ec8:	b8ffffc4 	addi	r3,r23,-1
    8ecc:	24403c36 	bltu	r4,r17,8fc0 <__udivdi3+0x5dc>
    8ed0:	20803b2e 	bgeu	r4,r2,8fc0 <__udivdi3+0x5dc>
    8ed4:	bdffff84 	addi	r23,r23,-2
    8ed8:	2449883a 	add	r4,r4,r17
    8edc:	20a1c83a 	sub	r16,r4,r2
    8ee0:	a80b883a 	mov	r5,r21
    8ee4:	8009883a 	mov	r4,r16
    8ee8:	0000b3c0 	call	b3c <__umodsi3>
    8eec:	a80b883a 	mov	r5,r21
    8ef0:	8009883a 	mov	r4,r16
    8ef4:	1027883a 	mov	r19,r2
    8ef8:	0000ad80 	call	ad8 <__udivsi3>
    8efc:	a009883a 	mov	r4,r20
    8f00:	100b883a 	mov	r5,r2
    8f04:	9826943a 	slli	r19,r19,16
    8f08:	1039883a 	mov	fp,r2
    8f0c:	0000b940 	call	b94 <__mulsi3>
    8f10:	b13fffcc 	andi	r4,r22,65535
    8f14:	24c8b03a 	or	r4,r4,r19
    8f18:	2080062e 	bgeu	r4,r2,8f34 <__udivdi3+0x550>
    8f1c:	2449883a 	add	r4,r4,r17
    8f20:	e0ffffc4 	addi	r3,fp,-1
    8f24:	24402436 	bltu	r4,r17,8fb8 <__udivdi3+0x5d4>
    8f28:	2080232e 	bgeu	r4,r2,8fb8 <__udivdi3+0x5d4>
    8f2c:	e73fff84 	addi	fp,fp,-2
    8f30:	2449883a 	add	r4,r4,r17
    8f34:	b82e943a 	slli	r23,r23,16
    8f38:	20a1c83a 	sub	r16,r4,r2
    8f3c:	bf06b03a 	or	r3,r23,fp
    8f40:	003f2806 	br	8be4 <__alt_mem_onchip_memory2_0+0xf7008be4>
    8f44:	2021883a 	mov	r16,r4
    8f48:	003f5306 	br	8c98 <__alt_mem_onchip_memory2_0+0xf7008c98>
    8f4c:	1821883a 	mov	r16,r3
    8f50:	003ef406 	br	8b24 <__alt_mem_onchip_memory2_0+0xf7008b24>
    8f54:	1806943a 	slli	r3,r3,16
    8f58:	9de6983a 	sll	r19,r19,r23
    8f5c:	e73fffcc 	andi	fp,fp,65535
    8f60:	1f07883a 	add	r3,r3,fp
    8f64:	98ffbd2e 	bgeu	r19,r3,8e5c <__alt_mem_onchip_memory2_0+0xf7008e5c>
    8f68:	90bfffc4 	addi	r2,r18,-1
    8f6c:	0007883a 	mov	r3,zero
    8f70:	003f4e06 	br	8cac <__alt_mem_onchip_memory2_0+0xf7008cac>
    8f74:	00800604 	movi	r2,24
    8f78:	003ef506 	br	8b50 <__alt_mem_onchip_memory2_0+0xf7008b50>
    8f7c:	00800604 	movi	r2,24
    8f80:	003f0b06 	br	8bb0 <__alt_mem_onchip_memory2_0+0xf7008bb0>
    8f84:	00800604 	movi	r2,24
    8f88:	003ead06 	br	8a40 <__alt_mem_onchip_memory2_0+0xf7008a40>
    8f8c:	0007883a 	mov	r3,zero
    8f90:	00800044 	movi	r2,1
    8f94:	003f4506 	br	8cac <__alt_mem_onchip_memory2_0+0xf7008cac>
    8f98:	80bf8e2e 	bgeu	r16,r2,8dd4 <__alt_mem_onchip_memory2_0+0xf7008dd4>
    8f9c:	8c7fff84 	addi	r17,r17,-2
    8fa0:	8721883a 	add	r16,r16,fp
    8fa4:	003f8c06 	br	8dd8 <__alt_mem_onchip_memory2_0+0xf7008dd8>
    8fa8:	18bf762e 	bgeu	r3,r2,8d84 <__alt_mem_onchip_memory2_0+0xf7008d84>
    8fac:	ad7fff84 	addi	r21,r21,-2
    8fb0:	1f07883a 	add	r3,r3,fp
    8fb4:	003f7406 	br	8d88 <__alt_mem_onchip_memory2_0+0xf7008d88>
    8fb8:	1839883a 	mov	fp,r3
    8fbc:	003fdd06 	br	8f34 <__alt_mem_onchip_memory2_0+0xf7008f34>
    8fc0:	182f883a 	mov	r23,r3
    8fc4:	003fc506 	br	8edc <__alt_mem_onchip_memory2_0+0xf7008edc>
    8fc8:	b5bfff84 	addi	r22,r22,-2
    8fcc:	3c4f883a 	add	r7,r7,r17
    8fd0:	003f1a06 	br	8c3c <__alt_mem_onchip_memory2_0+0xf7008c3c>
    8fd4:	b5bfff84 	addi	r22,r22,-2
    8fd8:	1c47883a 	add	r3,r3,r17
    8fdc:	003ebc06 	br	8ad0 <__alt_mem_onchip_memory2_0+0xf7008ad0>

00008fe0 <__umoddi3>:
    8fe0:	defff304 	addi	sp,sp,-52
    8fe4:	df000b15 	stw	fp,44(sp)
    8fe8:	dc400415 	stw	r17,16(sp)
    8fec:	dc000315 	stw	r16,12(sp)
    8ff0:	dfc00c15 	stw	ra,48(sp)
    8ff4:	ddc00a15 	stw	r23,40(sp)
    8ff8:	dd800915 	stw	r22,36(sp)
    8ffc:	dd400815 	stw	r21,32(sp)
    9000:	dd000715 	stw	r20,28(sp)
    9004:	dcc00615 	stw	r19,24(sp)
    9008:	dc800515 	stw	r18,20(sp)
    900c:	2021883a 	mov	r16,r4
    9010:	2823883a 	mov	r17,r5
    9014:	2839883a 	mov	fp,r5
    9018:	3800401e 	bne	r7,zero,911c <__umoddi3+0x13c>
    901c:	3027883a 	mov	r19,r6
    9020:	2029883a 	mov	r20,r4
    9024:	2980552e 	bgeu	r5,r6,917c <__umoddi3+0x19c>
    9028:	00bfffd4 	movui	r2,65535
    902c:	1180a236 	bltu	r2,r6,92b8 <__umoddi3+0x2d8>
    9030:	01003fc4 	movi	r4,255
    9034:	2189803a 	cmpltu	r4,r4,r6
    9038:	200890fa 	slli	r4,r4,3
    903c:	3104d83a 	srl	r2,r6,r4
    9040:	00c00074 	movhi	r3,1
    9044:	18f8c504 	addi	r3,r3,-7404
    9048:	1885883a 	add	r2,r3,r2
    904c:	10c00003 	ldbu	r3,0(r2)
    9050:	00800804 	movi	r2,32
    9054:	1909883a 	add	r4,r3,r4
    9058:	1125c83a 	sub	r18,r2,r4
    905c:	90000526 	beq	r18,zero,9074 <__umoddi3+0x94>
    9060:	8ca2983a 	sll	r17,r17,r18
    9064:	8108d83a 	srl	r4,r16,r4
    9068:	34a6983a 	sll	r19,r6,r18
    906c:	84a8983a 	sll	r20,r16,r18
    9070:	2478b03a 	or	fp,r4,r17
    9074:	982cd43a 	srli	r22,r19,16
    9078:	e009883a 	mov	r4,fp
    907c:	9dffffcc 	andi	r23,r19,65535
    9080:	b00b883a 	mov	r5,r22
    9084:	0000b3c0 	call	b3c <__umodsi3>
    9088:	b00b883a 	mov	r5,r22
    908c:	e009883a 	mov	r4,fp
    9090:	102b883a 	mov	r21,r2
    9094:	0000ad80 	call	ad8 <__udivsi3>
    9098:	100b883a 	mov	r5,r2
    909c:	b809883a 	mov	r4,r23
    90a0:	0000b940 	call	b94 <__mulsi3>
    90a4:	a82a943a 	slli	r21,r21,16
    90a8:	a006d43a 	srli	r3,r20,16
    90ac:	1d46b03a 	or	r3,r3,r21
    90b0:	1880032e 	bgeu	r3,r2,90c0 <__umoddi3+0xe0>
    90b4:	1cc7883a 	add	r3,r3,r19
    90b8:	1cc00136 	bltu	r3,r19,90c0 <__umoddi3+0xe0>
    90bc:	18813136 	bltu	r3,r2,9584 <__umoddi3+0x5a4>
    90c0:	18a1c83a 	sub	r16,r3,r2
    90c4:	b00b883a 	mov	r5,r22
    90c8:	8009883a 	mov	r4,r16
    90cc:	0000b3c0 	call	b3c <__umodsi3>
    90d0:	b00b883a 	mov	r5,r22
    90d4:	8009883a 	mov	r4,r16
    90d8:	1023883a 	mov	r17,r2
    90dc:	0000ad80 	call	ad8 <__udivsi3>
    90e0:	100b883a 	mov	r5,r2
    90e4:	b809883a 	mov	r4,r23
    90e8:	8822943a 	slli	r17,r17,16
    90ec:	0000b940 	call	b94 <__mulsi3>
    90f0:	a0ffffcc 	andi	r3,r20,65535
    90f4:	1c46b03a 	or	r3,r3,r17
    90f8:	1880042e 	bgeu	r3,r2,910c <__umoddi3+0x12c>
    90fc:	1cc7883a 	add	r3,r3,r19
    9100:	1cc00236 	bltu	r3,r19,910c <__umoddi3+0x12c>
    9104:	1880012e 	bgeu	r3,r2,910c <__umoddi3+0x12c>
    9108:	1cc7883a 	add	r3,r3,r19
    910c:	1885c83a 	sub	r2,r3,r2
    9110:	1484d83a 	srl	r2,r2,r18
    9114:	0007883a 	mov	r3,zero
    9118:	00005306 	br	9268 <__umoddi3+0x288>
    911c:	29c05036 	bltu	r5,r7,9260 <__umoddi3+0x280>
    9120:	00bfffd4 	movui	r2,65535
    9124:	11c05c2e 	bgeu	r2,r7,9298 <__umoddi3+0x2b8>
    9128:	00804034 	movhi	r2,256
    912c:	10bfffc4 	addi	r2,r2,-1
    9130:	11c10636 	bltu	r2,r7,954c <__umoddi3+0x56c>
    9134:	01000404 	movi	r4,16
    9138:	3904d83a 	srl	r2,r7,r4
    913c:	00c00074 	movhi	r3,1
    9140:	18f8c504 	addi	r3,r3,-7404
    9144:	1885883a 	add	r2,r3,r2
    9148:	14c00003 	ldbu	r19,0(r2)
    914c:	00c00804 	movi	r3,32
    9150:	9927883a 	add	r19,r19,r4
    9154:	1ce9c83a 	sub	r20,r3,r19
    9158:	a0005c1e 	bne	r20,zero,92cc <__umoddi3+0x2ec>
    915c:	3c400136 	bltu	r7,r17,9164 <__umoddi3+0x184>
    9160:	81810a36 	bltu	r16,r6,958c <__umoddi3+0x5ac>
    9164:	8185c83a 	sub	r2,r16,r6
    9168:	89e3c83a 	sub	r17,r17,r7
    916c:	8089803a 	cmpltu	r4,r16,r2
    9170:	8939c83a 	sub	fp,r17,r4
    9174:	e007883a 	mov	r3,fp
    9178:	00003b06 	br	9268 <__umoddi3+0x288>
    917c:	3000041e 	bne	r6,zero,9190 <__umoddi3+0x1b0>
    9180:	000b883a 	mov	r5,zero
    9184:	01000044 	movi	r4,1
    9188:	0000ad80 	call	ad8 <__udivsi3>
    918c:	1027883a 	mov	r19,r2
    9190:	00bfffd4 	movui	r2,65535
    9194:	14c0442e 	bgeu	r2,r19,92a8 <__umoddi3+0x2c8>
    9198:	00804034 	movhi	r2,256
    919c:	10bfffc4 	addi	r2,r2,-1
    91a0:	14c0ec36 	bltu	r2,r19,9554 <__umoddi3+0x574>
    91a4:	00800404 	movi	r2,16
    91a8:	9886d83a 	srl	r3,r19,r2
    91ac:	01000074 	movhi	r4,1
    91b0:	2138c504 	addi	r4,r4,-7404
    91b4:	20c7883a 	add	r3,r4,r3
    91b8:	18c00003 	ldbu	r3,0(r3)
    91bc:	1887883a 	add	r3,r3,r2
    91c0:	00800804 	movi	r2,32
    91c4:	10e5c83a 	sub	r18,r2,r3
    91c8:	9000ab1e 	bne	r18,zero,9478 <__umoddi3+0x498>
    91cc:	982cd43a 	srli	r22,r19,16
    91d0:	8ce3c83a 	sub	r17,r17,r19
    91d4:	9dffffcc 	andi	r23,r19,65535
    91d8:	b00b883a 	mov	r5,r22
    91dc:	8809883a 	mov	r4,r17
    91e0:	0000b3c0 	call	b3c <__umodsi3>
    91e4:	b00b883a 	mov	r5,r22
    91e8:	8809883a 	mov	r4,r17
    91ec:	102b883a 	mov	r21,r2
    91f0:	0000ad80 	call	ad8 <__udivsi3>
    91f4:	b80b883a 	mov	r5,r23
    91f8:	1009883a 	mov	r4,r2
    91fc:	0000b940 	call	b94 <__mulsi3>
    9200:	a82a943a 	slli	r21,r21,16
    9204:	a006d43a 	srli	r3,r20,16
    9208:	1d46b03a 	or	r3,r3,r21
    920c:	1880042e 	bgeu	r3,r2,9220 <__umoddi3+0x240>
    9210:	1cc7883a 	add	r3,r3,r19
    9214:	1cc00236 	bltu	r3,r19,9220 <__umoddi3+0x240>
    9218:	1880012e 	bgeu	r3,r2,9220 <__umoddi3+0x240>
    921c:	1cc7883a 	add	r3,r3,r19
    9220:	18a1c83a 	sub	r16,r3,r2
    9224:	b00b883a 	mov	r5,r22
    9228:	8009883a 	mov	r4,r16
    922c:	0000b3c0 	call	b3c <__umodsi3>
    9230:	1023883a 	mov	r17,r2
    9234:	b00b883a 	mov	r5,r22
    9238:	8009883a 	mov	r4,r16
    923c:	0000ad80 	call	ad8 <__udivsi3>
    9240:	8822943a 	slli	r17,r17,16
    9244:	b80b883a 	mov	r5,r23
    9248:	1009883a 	mov	r4,r2
    924c:	0000b940 	call	b94 <__mulsi3>
    9250:	a53fffcc 	andi	r20,r20,65535
    9254:	a446b03a 	or	r3,r20,r17
    9258:	18bfac2e 	bgeu	r3,r2,910c <__alt_mem_onchip_memory2_0+0xf700910c>
    925c:	003fa706 	br	90fc <__alt_mem_onchip_memory2_0+0xf70090fc>
    9260:	2005883a 	mov	r2,r4
    9264:	2807883a 	mov	r3,r5
    9268:	dfc00c17 	ldw	ra,48(sp)
    926c:	df000b17 	ldw	fp,44(sp)
    9270:	ddc00a17 	ldw	r23,40(sp)
    9274:	dd800917 	ldw	r22,36(sp)
    9278:	dd400817 	ldw	r21,32(sp)
    927c:	dd000717 	ldw	r20,28(sp)
    9280:	dcc00617 	ldw	r19,24(sp)
    9284:	dc800517 	ldw	r18,20(sp)
    9288:	dc400417 	ldw	r17,16(sp)
    928c:	dc000317 	ldw	r16,12(sp)
    9290:	dec00d04 	addi	sp,sp,52
    9294:	f800283a 	ret
    9298:	04c03fc4 	movi	r19,255
    929c:	99c9803a 	cmpltu	r4,r19,r7
    92a0:	200890fa 	slli	r4,r4,3
    92a4:	003fa406 	br	9138 <__alt_mem_onchip_memory2_0+0xf7009138>
    92a8:	00803fc4 	movi	r2,255
    92ac:	14c5803a 	cmpltu	r2,r2,r19
    92b0:	100490fa 	slli	r2,r2,3
    92b4:	003fbc06 	br	91a8 <__alt_mem_onchip_memory2_0+0xf70091a8>
    92b8:	00804034 	movhi	r2,256
    92bc:	10bfffc4 	addi	r2,r2,-1
    92c0:	1180a636 	bltu	r2,r6,955c <__umoddi3+0x57c>
    92c4:	01000404 	movi	r4,16
    92c8:	003f5c06 	br	903c <__alt_mem_onchip_memory2_0+0xf700903c>
    92cc:	3d0e983a 	sll	r7,r7,r20
    92d0:	34ead83a 	srl	r21,r6,r19
    92d4:	8cc6d83a 	srl	r3,r17,r19
    92d8:	8d10983a 	sll	r8,r17,r20
    92dc:	3d6ab03a 	or	r21,r7,r21
    92e0:	a82cd43a 	srli	r22,r21,16
    92e4:	84e2d83a 	srl	r17,r16,r19
    92e8:	1809883a 	mov	r4,r3
    92ec:	b00b883a 	mov	r5,r22
    92f0:	8a22b03a 	or	r17,r17,r8
    92f4:	3524983a 	sll	r18,r6,r20
    92f8:	dc400015 	stw	r17,0(sp)
    92fc:	d8c00115 	stw	r3,4(sp)
    9300:	0000b3c0 	call	b3c <__umodsi3>
    9304:	d8c00117 	ldw	r3,4(sp)
    9308:	b00b883a 	mov	r5,r22
    930c:	1039883a 	mov	fp,r2
    9310:	1809883a 	mov	r4,r3
    9314:	0000ad80 	call	ad8 <__udivsi3>
    9318:	adffffcc 	andi	r23,r21,65535
    931c:	100b883a 	mov	r5,r2
    9320:	b809883a 	mov	r4,r23
    9324:	1023883a 	mov	r17,r2
    9328:	0000b940 	call	b94 <__mulsi3>
    932c:	d9400017 	ldw	r5,0(sp)
    9330:	e008943a 	slli	r4,fp,16
    9334:	8520983a 	sll	r16,r16,r20
    9338:	2806d43a 	srli	r3,r5,16
    933c:	1906b03a 	or	r3,r3,r4
    9340:	1880042e 	bgeu	r3,r2,9354 <__umoddi3+0x374>
    9344:	1d47883a 	add	r3,r3,r21
    9348:	893fffc4 	addi	r4,r17,-1
    934c:	1d40892e 	bgeu	r3,r21,9574 <__umoddi3+0x594>
    9350:	2023883a 	mov	r17,r4
    9354:	18b9c83a 	sub	fp,r3,r2
    9358:	b00b883a 	mov	r5,r22
    935c:	e009883a 	mov	r4,fp
    9360:	0000b3c0 	call	b3c <__umodsi3>
    9364:	b00b883a 	mov	r5,r22
    9368:	e009883a 	mov	r4,fp
    936c:	d8800215 	stw	r2,8(sp)
    9370:	0000ad80 	call	ad8 <__udivsi3>
    9374:	100b883a 	mov	r5,r2
    9378:	b809883a 	mov	r4,r23
    937c:	102d883a 	mov	r22,r2
    9380:	0000b940 	call	b94 <__mulsi3>
    9384:	d9800217 	ldw	r6,8(sp)
    9388:	d8c00017 	ldw	r3,0(sp)
    938c:	300c943a 	slli	r6,r6,16
    9390:	1a3fffcc 	andi	r8,r3,65535
    9394:	4190b03a 	or	r8,r8,r6
    9398:	4080042e 	bgeu	r8,r2,93ac <__umoddi3+0x3cc>
    939c:	4551883a 	add	r8,r8,r21
    93a0:	b0ffffc4 	addi	r3,r22,-1
    93a4:	45406f2e 	bgeu	r8,r21,9564 <__umoddi3+0x584>
    93a8:	182d883a 	mov	r22,r3
    93ac:	880e943a 	slli	r7,r17,16
    93b0:	9006d43a 	srli	r3,r18,16
    93b4:	91bfffcc 	andi	r6,r18,65535
    93b8:	3dacb03a 	or	r22,r7,r22
    93bc:	b02ed43a 	srli	r23,r22,16
    93c0:	b5bfffcc 	andi	r22,r22,65535
    93c4:	300b883a 	mov	r5,r6
    93c8:	b009883a 	mov	r4,r22
    93cc:	40a3c83a 	sub	r17,r8,r2
    93d0:	d8c00115 	stw	r3,4(sp)
    93d4:	d9800215 	stw	r6,8(sp)
    93d8:	0000b940 	call	b94 <__mulsi3>
    93dc:	d9800217 	ldw	r6,8(sp)
    93e0:	b809883a 	mov	r4,r23
    93e4:	1039883a 	mov	fp,r2
    93e8:	300b883a 	mov	r5,r6
    93ec:	0000b940 	call	b94 <__mulsi3>
    93f0:	d8c00117 	ldw	r3,4(sp)
    93f4:	b809883a 	mov	r4,r23
    93f8:	d8800215 	stw	r2,8(sp)
    93fc:	180b883a 	mov	r5,r3
    9400:	0000b940 	call	b94 <__mulsi3>
    9404:	d8c00117 	ldw	r3,4(sp)
    9408:	b009883a 	mov	r4,r22
    940c:	102f883a 	mov	r23,r2
    9410:	180b883a 	mov	r5,r3
    9414:	0000b940 	call	b94 <__mulsi3>
    9418:	d9800217 	ldw	r6,8(sp)
    941c:	e006d43a 	srli	r3,fp,16
    9420:	1185883a 	add	r2,r2,r6
    9424:	1885883a 	add	r2,r3,r2
    9428:	1180022e 	bgeu	r2,r6,9434 <__umoddi3+0x454>
    942c:	00c00074 	movhi	r3,1
    9430:	b8ef883a 	add	r23,r23,r3
    9434:	1006d43a 	srli	r3,r2,16
    9438:	1004943a 	slli	r2,r2,16
    943c:	e73fffcc 	andi	fp,fp,65535
    9440:	1dc7883a 	add	r3,r3,r23
    9444:	1739883a 	add	fp,r2,fp
    9448:	88c03a36 	bltu	r17,r3,9534 <__umoddi3+0x554>
    944c:	88c05126 	beq	r17,r3,9594 <__umoddi3+0x5b4>
    9450:	88c9c83a 	sub	r4,r17,r3
    9454:	e00f883a 	mov	r7,fp
    9458:	81cfc83a 	sub	r7,r16,r7
    945c:	81c7803a 	cmpltu	r3,r16,r7
    9460:	20c7c83a 	sub	r3,r4,r3
    9464:	1cc4983a 	sll	r2,r3,r19
    9468:	3d0ed83a 	srl	r7,r7,r20
    946c:	1d06d83a 	srl	r3,r3,r20
    9470:	11c4b03a 	or	r2,r2,r7
    9474:	003f7c06 	br	9268 <__alt_mem_onchip_memory2_0+0xf7009268>
    9478:	9ca6983a 	sll	r19,r19,r18
    947c:	88f8d83a 	srl	fp,r17,r3
    9480:	80c4d83a 	srl	r2,r16,r3
    9484:	982cd43a 	srli	r22,r19,16
    9488:	8ca2983a 	sll	r17,r17,r18
    948c:	e009883a 	mov	r4,fp
    9490:	b00b883a 	mov	r5,r22
    9494:	146ab03a 	or	r21,r2,r17
    9498:	0000b3c0 	call	b3c <__umodsi3>
    949c:	b00b883a 	mov	r5,r22
    94a0:	e009883a 	mov	r4,fp
    94a4:	1029883a 	mov	r20,r2
    94a8:	9dffffcc 	andi	r23,r19,65535
    94ac:	0000ad80 	call	ad8 <__udivsi3>
    94b0:	b809883a 	mov	r4,r23
    94b4:	100b883a 	mov	r5,r2
    94b8:	0000b940 	call	b94 <__mulsi3>
    94bc:	a008943a 	slli	r4,r20,16
    94c0:	a806d43a 	srli	r3,r21,16
    94c4:	84a8983a 	sll	r20,r16,r18
    94c8:	1906b03a 	or	r3,r3,r4
    94cc:	1880042e 	bgeu	r3,r2,94e0 <__umoddi3+0x500>
    94d0:	1cc7883a 	add	r3,r3,r19
    94d4:	1cc00236 	bltu	r3,r19,94e0 <__umoddi3+0x500>
    94d8:	1880012e 	bgeu	r3,r2,94e0 <__umoddi3+0x500>
    94dc:	1cc7883a 	add	r3,r3,r19
    94e0:	18a3c83a 	sub	r17,r3,r2
    94e4:	b00b883a 	mov	r5,r22
    94e8:	8809883a 	mov	r4,r17
    94ec:	0000b3c0 	call	b3c <__umodsi3>
    94f0:	b00b883a 	mov	r5,r22
    94f4:	8809883a 	mov	r4,r17
    94f8:	1021883a 	mov	r16,r2
    94fc:	0000ad80 	call	ad8 <__udivsi3>
    9500:	100b883a 	mov	r5,r2
    9504:	b809883a 	mov	r4,r23
    9508:	8020943a 	slli	r16,r16,16
    950c:	0000b940 	call	b94 <__mulsi3>
    9510:	a8ffffcc 	andi	r3,r21,65535
    9514:	1c06b03a 	or	r3,r3,r16
    9518:	1880042e 	bgeu	r3,r2,952c <__umoddi3+0x54c>
    951c:	1cc7883a 	add	r3,r3,r19
    9520:	1cc00236 	bltu	r3,r19,952c <__umoddi3+0x54c>
    9524:	1880012e 	bgeu	r3,r2,952c <__umoddi3+0x54c>
    9528:	1cc7883a 	add	r3,r3,r19
    952c:	18a3c83a 	sub	r17,r3,r2
    9530:	003f2906 	br	91d8 <__alt_mem_onchip_memory2_0+0xf70091d8>
    9534:	e48fc83a 	sub	r7,fp,r18
    9538:	1d49c83a 	sub	r4,r3,r21
    953c:	e1f9803a 	cmpltu	fp,fp,r7
    9540:	2739c83a 	sub	fp,r4,fp
    9544:	8f09c83a 	sub	r4,r17,fp
    9548:	003fc306 	br	9458 <__alt_mem_onchip_memory2_0+0xf7009458>
    954c:	01000604 	movi	r4,24
    9550:	003ef906 	br	9138 <__alt_mem_onchip_memory2_0+0xf7009138>
    9554:	00800604 	movi	r2,24
    9558:	003f1306 	br	91a8 <__alt_mem_onchip_memory2_0+0xf70091a8>
    955c:	01000604 	movi	r4,24
    9560:	003eb606 	br	903c <__alt_mem_onchip_memory2_0+0xf700903c>
    9564:	40bf902e 	bgeu	r8,r2,93a8 <__alt_mem_onchip_memory2_0+0xf70093a8>
    9568:	b5bfff84 	addi	r22,r22,-2
    956c:	4551883a 	add	r8,r8,r21
    9570:	003f8e06 	br	93ac <__alt_mem_onchip_memory2_0+0xf70093ac>
    9574:	18bf762e 	bgeu	r3,r2,9350 <__alt_mem_onchip_memory2_0+0xf7009350>
    9578:	8c7fff84 	addi	r17,r17,-2
    957c:	1d47883a 	add	r3,r3,r21
    9580:	003f7406 	br	9354 <__alt_mem_onchip_memory2_0+0xf7009354>
    9584:	1cc7883a 	add	r3,r3,r19
    9588:	003ecd06 	br	90c0 <__alt_mem_onchip_memory2_0+0xf70090c0>
    958c:	8005883a 	mov	r2,r16
    9590:	003ef806 	br	9174 <__alt_mem_onchip_memory2_0+0xf7009174>
    9594:	873fe736 	bltu	r16,fp,9534 <__alt_mem_onchip_memory2_0+0xf7009534>
    9598:	e00f883a 	mov	r7,fp
    959c:	0009883a 	mov	r4,zero
    95a0:	003fad06 	br	9458 <__alt_mem_onchip_memory2_0+0xf7009458>

000095a4 <__adddf3>:
    95a4:	02c00434 	movhi	r11,16
    95a8:	5affffc4 	addi	r11,r11,-1
    95ac:	2806d7fa 	srli	r3,r5,31
    95b0:	2ad4703a 	and	r10,r5,r11
    95b4:	3ad2703a 	and	r9,r7,r11
    95b8:	3804d53a 	srli	r2,r7,20
    95bc:	3018d77a 	srli	r12,r6,29
    95c0:	280ad53a 	srli	r5,r5,20
    95c4:	501490fa 	slli	r10,r10,3
    95c8:	2010d77a 	srli	r8,r4,29
    95cc:	481290fa 	slli	r9,r9,3
    95d0:	380ed7fa 	srli	r7,r7,31
    95d4:	defffb04 	addi	sp,sp,-20
    95d8:	dc800215 	stw	r18,8(sp)
    95dc:	dc400115 	stw	r17,4(sp)
    95e0:	dc000015 	stw	r16,0(sp)
    95e4:	dfc00415 	stw	ra,16(sp)
    95e8:	dcc00315 	stw	r19,12(sp)
    95ec:	1c803fcc 	andi	r18,r3,255
    95f0:	2c01ffcc 	andi	r16,r5,2047
    95f4:	5210b03a 	or	r8,r10,r8
    95f8:	202290fa 	slli	r17,r4,3
    95fc:	1081ffcc 	andi	r2,r2,2047
    9600:	4b12b03a 	or	r9,r9,r12
    9604:	300c90fa 	slli	r6,r6,3
    9608:	91c07526 	beq	r18,r7,97e0 <__adddf3+0x23c>
    960c:	8087c83a 	sub	r3,r16,r2
    9610:	00c0ab0e 	bge	zero,r3,98c0 <__adddf3+0x31c>
    9614:	10002a1e 	bne	r2,zero,96c0 <__adddf3+0x11c>
    9618:	4984b03a 	or	r2,r9,r6
    961c:	1000961e 	bne	r2,zero,9878 <__adddf3+0x2d4>
    9620:	888001cc 	andi	r2,r17,7
    9624:	10000726 	beq	r2,zero,9644 <__adddf3+0xa0>
    9628:	888003cc 	andi	r2,r17,15
    962c:	00c00104 	movi	r3,4
    9630:	10c00426 	beq	r2,r3,9644 <__adddf3+0xa0>
    9634:	88c7883a 	add	r3,r17,r3
    9638:	1c63803a 	cmpltu	r17,r3,r17
    963c:	4451883a 	add	r8,r8,r17
    9640:	1823883a 	mov	r17,r3
    9644:	4080202c 	andhi	r2,r8,128
    9648:	10005926 	beq	r2,zero,97b0 <__adddf3+0x20c>
    964c:	84000044 	addi	r16,r16,1
    9650:	0081ffc4 	movi	r2,2047
    9654:	8080ba26 	beq	r16,r2,9940 <__adddf3+0x39c>
    9658:	00bfe034 	movhi	r2,65408
    965c:	10bfffc4 	addi	r2,r2,-1
    9660:	4090703a 	and	r8,r8,r2
    9664:	4004977a 	slli	r2,r8,29
    9668:	4010927a 	slli	r8,r8,9
    966c:	8822d0fa 	srli	r17,r17,3
    9670:	8401ffcc 	andi	r16,r16,2047
    9674:	4010d33a 	srli	r8,r8,12
    9678:	9007883a 	mov	r3,r18
    967c:	1444b03a 	or	r2,r2,r17
    9680:	8401ffcc 	andi	r16,r16,2047
    9684:	8020953a 	slli	r16,r16,20
    9688:	18c03fcc 	andi	r3,r3,255
    968c:	01000434 	movhi	r4,16
    9690:	213fffc4 	addi	r4,r4,-1
    9694:	180697fa 	slli	r3,r3,31
    9698:	4110703a 	and	r8,r8,r4
    969c:	4410b03a 	or	r8,r8,r16
    96a0:	40c6b03a 	or	r3,r8,r3
    96a4:	dfc00417 	ldw	ra,16(sp)
    96a8:	dcc00317 	ldw	r19,12(sp)
    96ac:	dc800217 	ldw	r18,8(sp)
    96b0:	dc400117 	ldw	r17,4(sp)
    96b4:	dc000017 	ldw	r16,0(sp)
    96b8:	dec00504 	addi	sp,sp,20
    96bc:	f800283a 	ret
    96c0:	0081ffc4 	movi	r2,2047
    96c4:	80bfd626 	beq	r16,r2,9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    96c8:	4a402034 	orhi	r9,r9,128
    96cc:	00800e04 	movi	r2,56
    96d0:	10c09f16 	blt	r2,r3,9950 <__adddf3+0x3ac>
    96d4:	008007c4 	movi	r2,31
    96d8:	10c0c216 	blt	r2,r3,99e4 <__adddf3+0x440>
    96dc:	00800804 	movi	r2,32
    96e0:	10c5c83a 	sub	r2,r2,r3
    96e4:	488a983a 	sll	r5,r9,r2
    96e8:	30c8d83a 	srl	r4,r6,r3
    96ec:	3084983a 	sll	r2,r6,r2
    96f0:	48c6d83a 	srl	r3,r9,r3
    96f4:	290cb03a 	or	r6,r5,r4
    96f8:	1004c03a 	cmpne	r2,r2,zero
    96fc:	308cb03a 	or	r6,r6,r2
    9700:	898dc83a 	sub	r6,r17,r6
    9704:	89a3803a 	cmpltu	r17,r17,r6
    9708:	40d1c83a 	sub	r8,r8,r3
    970c:	4451c83a 	sub	r8,r8,r17
    9710:	3023883a 	mov	r17,r6
    9714:	4080202c 	andhi	r2,r8,128
    9718:	10002326 	beq	r2,zero,97a8 <__adddf3+0x204>
    971c:	04c02034 	movhi	r19,128
    9720:	9cffffc4 	addi	r19,r19,-1
    9724:	44e6703a 	and	r19,r8,r19
    9728:	98007626 	beq	r19,zero,9904 <__adddf3+0x360>
    972c:	9809883a 	mov	r4,r19
    9730:	000bde40 	call	bde4 <__clzsi2>
    9734:	10fffe04 	addi	r3,r2,-8
    9738:	010007c4 	movi	r4,31
    973c:	20c07716 	blt	r4,r3,991c <__adddf3+0x378>
    9740:	00800804 	movi	r2,32
    9744:	10c5c83a 	sub	r2,r2,r3
    9748:	8884d83a 	srl	r2,r17,r2
    974c:	98d0983a 	sll	r8,r19,r3
    9750:	88e2983a 	sll	r17,r17,r3
    9754:	1204b03a 	or	r2,r2,r8
    9758:	1c007416 	blt	r3,r16,992c <__adddf3+0x388>
    975c:	1c21c83a 	sub	r16,r3,r16
    9760:	82000044 	addi	r8,r16,1
    9764:	00c007c4 	movi	r3,31
    9768:	1a009116 	blt	r3,r8,99b0 <__adddf3+0x40c>
    976c:	00c00804 	movi	r3,32
    9770:	1a07c83a 	sub	r3,r3,r8
    9774:	8a08d83a 	srl	r4,r17,r8
    9778:	88e2983a 	sll	r17,r17,r3
    977c:	10c6983a 	sll	r3,r2,r3
    9780:	1210d83a 	srl	r8,r2,r8
    9784:	8804c03a 	cmpne	r2,r17,zero
    9788:	1906b03a 	or	r3,r3,r4
    978c:	18a2b03a 	or	r17,r3,r2
    9790:	0021883a 	mov	r16,zero
    9794:	003fa206 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9798:	1890b03a 	or	r8,r3,r2
    979c:	40017d26 	beq	r8,zero,9d94 <__adddf3+0x7f0>
    97a0:	1011883a 	mov	r8,r2
    97a4:	1823883a 	mov	r17,r3
    97a8:	888001cc 	andi	r2,r17,7
    97ac:	103f9e1e 	bne	r2,zero,9628 <__alt_mem_onchip_memory2_0+0xf7009628>
    97b0:	4004977a 	slli	r2,r8,29
    97b4:	8822d0fa 	srli	r17,r17,3
    97b8:	4010d0fa 	srli	r8,r8,3
    97bc:	9007883a 	mov	r3,r18
    97c0:	1444b03a 	or	r2,r2,r17
    97c4:	0101ffc4 	movi	r4,2047
    97c8:	81002426 	beq	r16,r4,985c <__adddf3+0x2b8>
    97cc:	8120703a 	and	r16,r16,r4
    97d0:	01000434 	movhi	r4,16
    97d4:	213fffc4 	addi	r4,r4,-1
    97d8:	4110703a 	and	r8,r8,r4
    97dc:	003fa806 	br	9680 <__alt_mem_onchip_memory2_0+0xf7009680>
    97e0:	8089c83a 	sub	r4,r16,r2
    97e4:	01005e0e 	bge	zero,r4,9960 <__adddf3+0x3bc>
    97e8:	10002b26 	beq	r2,zero,9898 <__adddf3+0x2f4>
    97ec:	0081ffc4 	movi	r2,2047
    97f0:	80bf8b26 	beq	r16,r2,9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    97f4:	4a402034 	orhi	r9,r9,128
    97f8:	00800e04 	movi	r2,56
    97fc:	1100a40e 	bge	r2,r4,9a90 <__adddf3+0x4ec>
    9800:	498cb03a 	or	r6,r9,r6
    9804:	300ac03a 	cmpne	r5,r6,zero
    9808:	0013883a 	mov	r9,zero
    980c:	2c4b883a 	add	r5,r5,r17
    9810:	2c63803a 	cmpltu	r17,r5,r17
    9814:	4a11883a 	add	r8,r9,r8
    9818:	8a11883a 	add	r8,r17,r8
    981c:	2823883a 	mov	r17,r5
    9820:	4080202c 	andhi	r2,r8,128
    9824:	103fe026 	beq	r2,zero,97a8 <__alt_mem_onchip_memory2_0+0xf70097a8>
    9828:	84000044 	addi	r16,r16,1
    982c:	0081ffc4 	movi	r2,2047
    9830:	8080d226 	beq	r16,r2,9b7c <__adddf3+0x5d8>
    9834:	00bfe034 	movhi	r2,65408
    9838:	10bfffc4 	addi	r2,r2,-1
    983c:	4090703a 	and	r8,r8,r2
    9840:	880ad07a 	srli	r5,r17,1
    9844:	400897fa 	slli	r4,r8,31
    9848:	88c0004c 	andi	r3,r17,1
    984c:	28e2b03a 	or	r17,r5,r3
    9850:	4010d07a 	srli	r8,r8,1
    9854:	2462b03a 	or	r17,r4,r17
    9858:	003f7106 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    985c:	4088b03a 	or	r4,r8,r2
    9860:	20014526 	beq	r4,zero,9d78 <__adddf3+0x7d4>
    9864:	01000434 	movhi	r4,16
    9868:	42000234 	orhi	r8,r8,8
    986c:	213fffc4 	addi	r4,r4,-1
    9870:	4110703a 	and	r8,r8,r4
    9874:	003f8206 	br	9680 <__alt_mem_onchip_memory2_0+0xf7009680>
    9878:	18ffffc4 	addi	r3,r3,-1
    987c:	1800491e 	bne	r3,zero,99a4 <__adddf3+0x400>
    9880:	898bc83a 	sub	r5,r17,r6
    9884:	8963803a 	cmpltu	r17,r17,r5
    9888:	4251c83a 	sub	r8,r8,r9
    988c:	4451c83a 	sub	r8,r8,r17
    9890:	2823883a 	mov	r17,r5
    9894:	003f9f06 	br	9714 <__alt_mem_onchip_memory2_0+0xf7009714>
    9898:	4984b03a 	or	r2,r9,r6
    989c:	103f6026 	beq	r2,zero,9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    98a0:	213fffc4 	addi	r4,r4,-1
    98a4:	2000931e 	bne	r4,zero,9af4 <__adddf3+0x550>
    98a8:	898d883a 	add	r6,r17,r6
    98ac:	3463803a 	cmpltu	r17,r6,r17
    98b0:	4251883a 	add	r8,r8,r9
    98b4:	8a11883a 	add	r8,r17,r8
    98b8:	3023883a 	mov	r17,r6
    98bc:	003fd806 	br	9820 <__alt_mem_onchip_memory2_0+0xf7009820>
    98c0:	1800541e 	bne	r3,zero,9a14 <__adddf3+0x470>
    98c4:	80800044 	addi	r2,r16,1
    98c8:	1081ffcc 	andi	r2,r2,2047
    98cc:	00c00044 	movi	r3,1
    98d0:	1880a00e 	bge	r3,r2,9b54 <__adddf3+0x5b0>
    98d4:	8989c83a 	sub	r4,r17,r6
    98d8:	8905803a 	cmpltu	r2,r17,r4
    98dc:	4267c83a 	sub	r19,r8,r9
    98e0:	98a7c83a 	sub	r19,r19,r2
    98e4:	9880202c 	andhi	r2,r19,128
    98e8:	10006326 	beq	r2,zero,9a78 <__adddf3+0x4d4>
    98ec:	3463c83a 	sub	r17,r6,r17
    98f0:	4a07c83a 	sub	r3,r9,r8
    98f4:	344d803a 	cmpltu	r6,r6,r17
    98f8:	19a7c83a 	sub	r19,r3,r6
    98fc:	3825883a 	mov	r18,r7
    9900:	983f8a1e 	bne	r19,zero,972c <__alt_mem_onchip_memory2_0+0xf700972c>
    9904:	8809883a 	mov	r4,r17
    9908:	000bde40 	call	bde4 <__clzsi2>
    990c:	10800804 	addi	r2,r2,32
    9910:	10fffe04 	addi	r3,r2,-8
    9914:	010007c4 	movi	r4,31
    9918:	20ff890e 	bge	r4,r3,9740 <__alt_mem_onchip_memory2_0+0xf7009740>
    991c:	10bff604 	addi	r2,r2,-40
    9920:	8884983a 	sll	r2,r17,r2
    9924:	0023883a 	mov	r17,zero
    9928:	1c3f8c0e 	bge	r3,r16,975c <__alt_mem_onchip_memory2_0+0xf700975c>
    992c:	023fe034 	movhi	r8,65408
    9930:	423fffc4 	addi	r8,r8,-1
    9934:	80e1c83a 	sub	r16,r16,r3
    9938:	1210703a 	and	r8,r2,r8
    993c:	003f3806 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9940:	9007883a 	mov	r3,r18
    9944:	0011883a 	mov	r8,zero
    9948:	0005883a 	mov	r2,zero
    994c:	003f4c06 	br	9680 <__alt_mem_onchip_memory2_0+0xf7009680>
    9950:	498cb03a 	or	r6,r9,r6
    9954:	300cc03a 	cmpne	r6,r6,zero
    9958:	0007883a 	mov	r3,zero
    995c:	003f6806 	br	9700 <__alt_mem_onchip_memory2_0+0xf7009700>
    9960:	20009c1e 	bne	r4,zero,9bd4 <__adddf3+0x630>
    9964:	80800044 	addi	r2,r16,1
    9968:	1141ffcc 	andi	r5,r2,2047
    996c:	01000044 	movi	r4,1
    9970:	2140670e 	bge	r4,r5,9b10 <__adddf3+0x56c>
    9974:	0101ffc4 	movi	r4,2047
    9978:	11007f26 	beq	r2,r4,9b78 <__adddf3+0x5d4>
    997c:	898d883a 	add	r6,r17,r6
    9980:	4247883a 	add	r3,r8,r9
    9984:	3451803a 	cmpltu	r8,r6,r17
    9988:	40d1883a 	add	r8,r8,r3
    998c:	402297fa 	slli	r17,r8,31
    9990:	300cd07a 	srli	r6,r6,1
    9994:	4010d07a 	srli	r8,r8,1
    9998:	1021883a 	mov	r16,r2
    999c:	89a2b03a 	or	r17,r17,r6
    99a0:	003f1f06 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    99a4:	0081ffc4 	movi	r2,2047
    99a8:	80bf481e 	bne	r16,r2,96cc <__alt_mem_onchip_memory2_0+0xf70096cc>
    99ac:	003f1c06 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    99b0:	843ff844 	addi	r16,r16,-31
    99b4:	01000804 	movi	r4,32
    99b8:	1406d83a 	srl	r3,r2,r16
    99bc:	41005026 	beq	r8,r4,9b00 <__adddf3+0x55c>
    99c0:	01001004 	movi	r4,64
    99c4:	2211c83a 	sub	r8,r4,r8
    99c8:	1204983a 	sll	r2,r2,r8
    99cc:	88a2b03a 	or	r17,r17,r2
    99d0:	8822c03a 	cmpne	r17,r17,zero
    99d4:	1c62b03a 	or	r17,r3,r17
    99d8:	0011883a 	mov	r8,zero
    99dc:	0021883a 	mov	r16,zero
    99e0:	003f7106 	br	97a8 <__alt_mem_onchip_memory2_0+0xf70097a8>
    99e4:	193ff804 	addi	r4,r3,-32
    99e8:	00800804 	movi	r2,32
    99ec:	4908d83a 	srl	r4,r9,r4
    99f0:	18804526 	beq	r3,r2,9b08 <__adddf3+0x564>
    99f4:	00801004 	movi	r2,64
    99f8:	10c5c83a 	sub	r2,r2,r3
    99fc:	4886983a 	sll	r3,r9,r2
    9a00:	198cb03a 	or	r6,r3,r6
    9a04:	300cc03a 	cmpne	r6,r6,zero
    9a08:	218cb03a 	or	r6,r4,r6
    9a0c:	0007883a 	mov	r3,zero
    9a10:	003f3b06 	br	9700 <__alt_mem_onchip_memory2_0+0xf7009700>
    9a14:	80002a26 	beq	r16,zero,9ac0 <__adddf3+0x51c>
    9a18:	0101ffc4 	movi	r4,2047
    9a1c:	11006826 	beq	r2,r4,9bc0 <__adddf3+0x61c>
    9a20:	00c7c83a 	sub	r3,zero,r3
    9a24:	42002034 	orhi	r8,r8,128
    9a28:	01000e04 	movi	r4,56
    9a2c:	20c07c16 	blt	r4,r3,9c20 <__adddf3+0x67c>
    9a30:	010007c4 	movi	r4,31
    9a34:	20c0da16 	blt	r4,r3,9da0 <__adddf3+0x7fc>
    9a38:	01000804 	movi	r4,32
    9a3c:	20c9c83a 	sub	r4,r4,r3
    9a40:	4114983a 	sll	r10,r8,r4
    9a44:	88cad83a 	srl	r5,r17,r3
    9a48:	8908983a 	sll	r4,r17,r4
    9a4c:	40c6d83a 	srl	r3,r8,r3
    9a50:	5162b03a 	or	r17,r10,r5
    9a54:	2008c03a 	cmpne	r4,r4,zero
    9a58:	8922b03a 	or	r17,r17,r4
    9a5c:	3463c83a 	sub	r17,r6,r17
    9a60:	48c7c83a 	sub	r3,r9,r3
    9a64:	344d803a 	cmpltu	r6,r6,r17
    9a68:	1991c83a 	sub	r8,r3,r6
    9a6c:	1021883a 	mov	r16,r2
    9a70:	3825883a 	mov	r18,r7
    9a74:	003f2706 	br	9714 <__alt_mem_onchip_memory2_0+0xf7009714>
    9a78:	24d0b03a 	or	r8,r4,r19
    9a7c:	40001b1e 	bne	r8,zero,9aec <__adddf3+0x548>
    9a80:	0005883a 	mov	r2,zero
    9a84:	0007883a 	mov	r3,zero
    9a88:	0021883a 	mov	r16,zero
    9a8c:	003f4d06 	br	97c4 <__alt_mem_onchip_memory2_0+0xf70097c4>
    9a90:	008007c4 	movi	r2,31
    9a94:	11003c16 	blt	r2,r4,9b88 <__adddf3+0x5e4>
    9a98:	00800804 	movi	r2,32
    9a9c:	1105c83a 	sub	r2,r2,r4
    9aa0:	488e983a 	sll	r7,r9,r2
    9aa4:	310ad83a 	srl	r5,r6,r4
    9aa8:	3084983a 	sll	r2,r6,r2
    9aac:	4912d83a 	srl	r9,r9,r4
    9ab0:	394ab03a 	or	r5,r7,r5
    9ab4:	1004c03a 	cmpne	r2,r2,zero
    9ab8:	288ab03a 	or	r5,r5,r2
    9abc:	003f5306 	br	980c <__alt_mem_onchip_memory2_0+0xf700980c>
    9ac0:	4448b03a 	or	r4,r8,r17
    9ac4:	20003e26 	beq	r4,zero,9bc0 <__adddf3+0x61c>
    9ac8:	00c6303a 	nor	r3,zero,r3
    9acc:	18003a1e 	bne	r3,zero,9bb8 <__adddf3+0x614>
    9ad0:	3463c83a 	sub	r17,r6,r17
    9ad4:	4a07c83a 	sub	r3,r9,r8
    9ad8:	344d803a 	cmpltu	r6,r6,r17
    9adc:	1991c83a 	sub	r8,r3,r6
    9ae0:	1021883a 	mov	r16,r2
    9ae4:	3825883a 	mov	r18,r7
    9ae8:	003f0a06 	br	9714 <__alt_mem_onchip_memory2_0+0xf7009714>
    9aec:	2023883a 	mov	r17,r4
    9af0:	003f0d06 	br	9728 <__alt_mem_onchip_memory2_0+0xf7009728>
    9af4:	0081ffc4 	movi	r2,2047
    9af8:	80bf3f1e 	bne	r16,r2,97f8 <__alt_mem_onchip_memory2_0+0xf70097f8>
    9afc:	003ec806 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9b00:	0005883a 	mov	r2,zero
    9b04:	003fb106 	br	99cc <__alt_mem_onchip_memory2_0+0xf70099cc>
    9b08:	0007883a 	mov	r3,zero
    9b0c:	003fbc06 	br	9a00 <__alt_mem_onchip_memory2_0+0xf7009a00>
    9b10:	4444b03a 	or	r2,r8,r17
    9b14:	8000871e 	bne	r16,zero,9d34 <__adddf3+0x790>
    9b18:	1000ba26 	beq	r2,zero,9e04 <__adddf3+0x860>
    9b1c:	4984b03a 	or	r2,r9,r6
    9b20:	103ebf26 	beq	r2,zero,9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9b24:	8985883a 	add	r2,r17,r6
    9b28:	4247883a 	add	r3,r8,r9
    9b2c:	1451803a 	cmpltu	r8,r2,r17
    9b30:	40d1883a 	add	r8,r8,r3
    9b34:	40c0202c 	andhi	r3,r8,128
    9b38:	1023883a 	mov	r17,r2
    9b3c:	183f1a26 	beq	r3,zero,97a8 <__alt_mem_onchip_memory2_0+0xf70097a8>
    9b40:	00bfe034 	movhi	r2,65408
    9b44:	10bfffc4 	addi	r2,r2,-1
    9b48:	2021883a 	mov	r16,r4
    9b4c:	4090703a 	and	r8,r8,r2
    9b50:	003eb306 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9b54:	4444b03a 	or	r2,r8,r17
    9b58:	8000291e 	bne	r16,zero,9c00 <__adddf3+0x65c>
    9b5c:	10004b1e 	bne	r2,zero,9c8c <__adddf3+0x6e8>
    9b60:	4990b03a 	or	r8,r9,r6
    9b64:	40008b26 	beq	r8,zero,9d94 <__adddf3+0x7f0>
    9b68:	4811883a 	mov	r8,r9
    9b6c:	3023883a 	mov	r17,r6
    9b70:	3825883a 	mov	r18,r7
    9b74:	003eaa06 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9b78:	1021883a 	mov	r16,r2
    9b7c:	0011883a 	mov	r8,zero
    9b80:	0005883a 	mov	r2,zero
    9b84:	003f0f06 	br	97c4 <__alt_mem_onchip_memory2_0+0xf70097c4>
    9b88:	217ff804 	addi	r5,r4,-32
    9b8c:	00800804 	movi	r2,32
    9b90:	494ad83a 	srl	r5,r9,r5
    9b94:	20807d26 	beq	r4,r2,9d8c <__adddf3+0x7e8>
    9b98:	00801004 	movi	r2,64
    9b9c:	1109c83a 	sub	r4,r2,r4
    9ba0:	4912983a 	sll	r9,r9,r4
    9ba4:	498cb03a 	or	r6,r9,r6
    9ba8:	300cc03a 	cmpne	r6,r6,zero
    9bac:	298ab03a 	or	r5,r5,r6
    9bb0:	0013883a 	mov	r9,zero
    9bb4:	003f1506 	br	980c <__alt_mem_onchip_memory2_0+0xf700980c>
    9bb8:	0101ffc4 	movi	r4,2047
    9bbc:	113f9a1e 	bne	r2,r4,9a28 <__alt_mem_onchip_memory2_0+0xf7009a28>
    9bc0:	4811883a 	mov	r8,r9
    9bc4:	3023883a 	mov	r17,r6
    9bc8:	1021883a 	mov	r16,r2
    9bcc:	3825883a 	mov	r18,r7
    9bd0:	003e9306 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9bd4:	8000161e 	bne	r16,zero,9c30 <__adddf3+0x68c>
    9bd8:	444ab03a 	or	r5,r8,r17
    9bdc:	28005126 	beq	r5,zero,9d24 <__adddf3+0x780>
    9be0:	0108303a 	nor	r4,zero,r4
    9be4:	20004d1e 	bne	r4,zero,9d1c <__adddf3+0x778>
    9be8:	89a3883a 	add	r17,r17,r6
    9bec:	4253883a 	add	r9,r8,r9
    9bf0:	898d803a 	cmpltu	r6,r17,r6
    9bf4:	3251883a 	add	r8,r6,r9
    9bf8:	1021883a 	mov	r16,r2
    9bfc:	003f0806 	br	9820 <__alt_mem_onchip_memory2_0+0xf7009820>
    9c00:	1000301e 	bne	r2,zero,9cc4 <__adddf3+0x720>
    9c04:	4984b03a 	or	r2,r9,r6
    9c08:	10007126 	beq	r2,zero,9dd0 <__adddf3+0x82c>
    9c0c:	4811883a 	mov	r8,r9
    9c10:	3023883a 	mov	r17,r6
    9c14:	3825883a 	mov	r18,r7
    9c18:	0401ffc4 	movi	r16,2047
    9c1c:	003e8006 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9c20:	4462b03a 	or	r17,r8,r17
    9c24:	8822c03a 	cmpne	r17,r17,zero
    9c28:	0007883a 	mov	r3,zero
    9c2c:	003f8b06 	br	9a5c <__alt_mem_onchip_memory2_0+0xf7009a5c>
    9c30:	0141ffc4 	movi	r5,2047
    9c34:	11403b26 	beq	r2,r5,9d24 <__adddf3+0x780>
    9c38:	0109c83a 	sub	r4,zero,r4
    9c3c:	42002034 	orhi	r8,r8,128
    9c40:	01400e04 	movi	r5,56
    9c44:	29006716 	blt	r5,r4,9de4 <__adddf3+0x840>
    9c48:	014007c4 	movi	r5,31
    9c4c:	29007016 	blt	r5,r4,9e10 <__adddf3+0x86c>
    9c50:	01400804 	movi	r5,32
    9c54:	290bc83a 	sub	r5,r5,r4
    9c58:	4154983a 	sll	r10,r8,r5
    9c5c:	890ed83a 	srl	r7,r17,r4
    9c60:	894a983a 	sll	r5,r17,r5
    9c64:	4108d83a 	srl	r4,r8,r4
    9c68:	51e2b03a 	or	r17,r10,r7
    9c6c:	280ac03a 	cmpne	r5,r5,zero
    9c70:	8962b03a 	or	r17,r17,r5
    9c74:	89a3883a 	add	r17,r17,r6
    9c78:	2253883a 	add	r9,r4,r9
    9c7c:	898d803a 	cmpltu	r6,r17,r6
    9c80:	3251883a 	add	r8,r6,r9
    9c84:	1021883a 	mov	r16,r2
    9c88:	003ee506 	br	9820 <__alt_mem_onchip_memory2_0+0xf7009820>
    9c8c:	4984b03a 	or	r2,r9,r6
    9c90:	103e6326 	beq	r2,zero,9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9c94:	8987c83a 	sub	r3,r17,r6
    9c98:	88c9803a 	cmpltu	r4,r17,r3
    9c9c:	4245c83a 	sub	r2,r8,r9
    9ca0:	1105c83a 	sub	r2,r2,r4
    9ca4:	1100202c 	andhi	r4,r2,128
    9ca8:	203ebb26 	beq	r4,zero,9798 <__alt_mem_onchip_memory2_0+0xf7009798>
    9cac:	3463c83a 	sub	r17,r6,r17
    9cb0:	4a07c83a 	sub	r3,r9,r8
    9cb4:	344d803a 	cmpltu	r6,r6,r17
    9cb8:	1991c83a 	sub	r8,r3,r6
    9cbc:	3825883a 	mov	r18,r7
    9cc0:	003e5706 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9cc4:	4984b03a 	or	r2,r9,r6
    9cc8:	10002e26 	beq	r2,zero,9d84 <__adddf3+0x7e0>
    9ccc:	4004d0fa 	srli	r2,r8,3
    9cd0:	8822d0fa 	srli	r17,r17,3
    9cd4:	4010977a 	slli	r8,r8,29
    9cd8:	10c0022c 	andhi	r3,r2,8
    9cdc:	4462b03a 	or	r17,r8,r17
    9ce0:	18000826 	beq	r3,zero,9d04 <__adddf3+0x760>
    9ce4:	4808d0fa 	srli	r4,r9,3
    9ce8:	20c0022c 	andhi	r3,r4,8
    9cec:	1800051e 	bne	r3,zero,9d04 <__adddf3+0x760>
    9cf0:	300cd0fa 	srli	r6,r6,3
    9cf4:	4806977a 	slli	r3,r9,29
    9cf8:	2005883a 	mov	r2,r4
    9cfc:	3825883a 	mov	r18,r7
    9d00:	19a2b03a 	or	r17,r3,r6
    9d04:	8810d77a 	srli	r8,r17,29
    9d08:	100490fa 	slli	r2,r2,3
    9d0c:	882290fa 	slli	r17,r17,3
    9d10:	0401ffc4 	movi	r16,2047
    9d14:	4090b03a 	or	r8,r8,r2
    9d18:	003e4106 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9d1c:	0141ffc4 	movi	r5,2047
    9d20:	117fc71e 	bne	r2,r5,9c40 <__alt_mem_onchip_memory2_0+0xf7009c40>
    9d24:	4811883a 	mov	r8,r9
    9d28:	3023883a 	mov	r17,r6
    9d2c:	1021883a 	mov	r16,r2
    9d30:	003e3b06 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9d34:	10002f26 	beq	r2,zero,9df4 <__adddf3+0x850>
    9d38:	4984b03a 	or	r2,r9,r6
    9d3c:	10001126 	beq	r2,zero,9d84 <__adddf3+0x7e0>
    9d40:	4004d0fa 	srli	r2,r8,3
    9d44:	8822d0fa 	srli	r17,r17,3
    9d48:	4010977a 	slli	r8,r8,29
    9d4c:	10c0022c 	andhi	r3,r2,8
    9d50:	4462b03a 	or	r17,r8,r17
    9d54:	183feb26 	beq	r3,zero,9d04 <__alt_mem_onchip_memory2_0+0xf7009d04>
    9d58:	4808d0fa 	srli	r4,r9,3
    9d5c:	20c0022c 	andhi	r3,r4,8
    9d60:	183fe81e 	bne	r3,zero,9d04 <__alt_mem_onchip_memory2_0+0xf7009d04>
    9d64:	300cd0fa 	srli	r6,r6,3
    9d68:	4806977a 	slli	r3,r9,29
    9d6c:	2005883a 	mov	r2,r4
    9d70:	19a2b03a 	or	r17,r3,r6
    9d74:	003fe306 	br	9d04 <__alt_mem_onchip_memory2_0+0xf7009d04>
    9d78:	0011883a 	mov	r8,zero
    9d7c:	0005883a 	mov	r2,zero
    9d80:	003e3f06 	br	9680 <__alt_mem_onchip_memory2_0+0xf7009680>
    9d84:	0401ffc4 	movi	r16,2047
    9d88:	003e2506 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9d8c:	0013883a 	mov	r9,zero
    9d90:	003f8406 	br	9ba4 <__alt_mem_onchip_memory2_0+0xf7009ba4>
    9d94:	0005883a 	mov	r2,zero
    9d98:	0007883a 	mov	r3,zero
    9d9c:	003e8906 	br	97c4 <__alt_mem_onchip_memory2_0+0xf70097c4>
    9da0:	197ff804 	addi	r5,r3,-32
    9da4:	01000804 	movi	r4,32
    9da8:	414ad83a 	srl	r5,r8,r5
    9dac:	19002426 	beq	r3,r4,9e40 <__adddf3+0x89c>
    9db0:	01001004 	movi	r4,64
    9db4:	20c7c83a 	sub	r3,r4,r3
    9db8:	40c6983a 	sll	r3,r8,r3
    9dbc:	1c46b03a 	or	r3,r3,r17
    9dc0:	1806c03a 	cmpne	r3,r3,zero
    9dc4:	28e2b03a 	or	r17,r5,r3
    9dc8:	0007883a 	mov	r3,zero
    9dcc:	003f2306 	br	9a5c <__alt_mem_onchip_memory2_0+0xf7009a5c>
    9dd0:	0007883a 	mov	r3,zero
    9dd4:	5811883a 	mov	r8,r11
    9dd8:	00bfffc4 	movi	r2,-1
    9ddc:	0401ffc4 	movi	r16,2047
    9de0:	003e7806 	br	97c4 <__alt_mem_onchip_memory2_0+0xf70097c4>
    9de4:	4462b03a 	or	r17,r8,r17
    9de8:	8822c03a 	cmpne	r17,r17,zero
    9dec:	0009883a 	mov	r4,zero
    9df0:	003fa006 	br	9c74 <__alt_mem_onchip_memory2_0+0xf7009c74>
    9df4:	4811883a 	mov	r8,r9
    9df8:	3023883a 	mov	r17,r6
    9dfc:	0401ffc4 	movi	r16,2047
    9e00:	003e0706 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9e04:	4811883a 	mov	r8,r9
    9e08:	3023883a 	mov	r17,r6
    9e0c:	003e0406 	br	9620 <__alt_mem_onchip_memory2_0+0xf7009620>
    9e10:	21fff804 	addi	r7,r4,-32
    9e14:	01400804 	movi	r5,32
    9e18:	41ced83a 	srl	r7,r8,r7
    9e1c:	21400a26 	beq	r4,r5,9e48 <__adddf3+0x8a4>
    9e20:	01401004 	movi	r5,64
    9e24:	2909c83a 	sub	r4,r5,r4
    9e28:	4108983a 	sll	r4,r8,r4
    9e2c:	2448b03a 	or	r4,r4,r17
    9e30:	2008c03a 	cmpne	r4,r4,zero
    9e34:	3922b03a 	or	r17,r7,r4
    9e38:	0009883a 	mov	r4,zero
    9e3c:	003f8d06 	br	9c74 <__alt_mem_onchip_memory2_0+0xf7009c74>
    9e40:	0007883a 	mov	r3,zero
    9e44:	003fdd06 	br	9dbc <__alt_mem_onchip_memory2_0+0xf7009dbc>
    9e48:	0009883a 	mov	r4,zero
    9e4c:	003ff706 	br	9e2c <__alt_mem_onchip_memory2_0+0xf7009e2c>

00009e50 <__divdf3>:
    9e50:	defff004 	addi	sp,sp,-64
    9e54:	dc800815 	stw	r18,32(sp)
    9e58:	2824d53a 	srli	r18,r5,20
    9e5c:	dd800c15 	stw	r22,48(sp)
    9e60:	282cd7fa 	srli	r22,r5,31
    9e64:	dc000615 	stw	r16,24(sp)
    9e68:	04000434 	movhi	r16,16
    9e6c:	843fffc4 	addi	r16,r16,-1
    9e70:	dfc00f15 	stw	ra,60(sp)
    9e74:	df000e15 	stw	fp,56(sp)
    9e78:	ddc00d15 	stw	r23,52(sp)
    9e7c:	dd400b15 	stw	r21,44(sp)
    9e80:	dd000a15 	stw	r20,40(sp)
    9e84:	dcc00915 	stw	r19,36(sp)
    9e88:	dc400715 	stw	r17,28(sp)
    9e8c:	9481ffcc 	andi	r18,r18,2047
    9e90:	2c20703a 	and	r16,r5,r16
    9e94:	b2003fcc 	andi	r8,r22,255
    9e98:	90006126 	beq	r18,zero,a020 <__divdf3+0x1d0>
    9e9c:	0081ffc4 	movi	r2,2047
    9ea0:	202b883a 	mov	r21,r4
    9ea4:	90803726 	beq	r18,r2,9f84 <__divdf3+0x134>
    9ea8:	80800434 	orhi	r2,r16,16
    9eac:	100490fa 	slli	r2,r2,3
    9eb0:	2020d77a 	srli	r16,r4,29
    9eb4:	202a90fa 	slli	r21,r4,3
    9eb8:	94bf0044 	addi	r18,r18,-1023
    9ebc:	80a0b03a 	or	r16,r16,r2
    9ec0:	0013883a 	mov	r9,zero
    9ec4:	000b883a 	mov	r5,zero
    9ec8:	3806d53a 	srli	r3,r7,20
    9ecc:	382ed7fa 	srli	r23,r7,31
    9ed0:	04400434 	movhi	r17,16
    9ed4:	8c7fffc4 	addi	r17,r17,-1
    9ed8:	18c1ffcc 	andi	r3,r3,2047
    9edc:	3029883a 	mov	r20,r6
    9ee0:	3c62703a 	and	r17,r7,r17
    9ee4:	bf003fcc 	andi	fp,r23,255
    9ee8:	18006e26 	beq	r3,zero,a0a4 <__divdf3+0x254>
    9eec:	0081ffc4 	movi	r2,2047
    9ef0:	18806626 	beq	r3,r2,a08c <__divdf3+0x23c>
    9ef4:	88800434 	orhi	r2,r17,16
    9ef8:	100490fa 	slli	r2,r2,3
    9efc:	3022d77a 	srli	r17,r6,29
    9f00:	302890fa 	slli	r20,r6,3
    9f04:	18ff0044 	addi	r3,r3,-1023
    9f08:	88a2b03a 	or	r17,r17,r2
    9f0c:	000f883a 	mov	r7,zero
    9f10:	b5e6f03a 	xor	r19,r22,r23
    9f14:	3a4cb03a 	or	r6,r7,r9
    9f18:	008003c4 	movi	r2,15
    9f1c:	9809883a 	mov	r4,r19
    9f20:	90c7c83a 	sub	r3,r18,r3
    9f24:	9cc03fcc 	andi	r19,r19,255
    9f28:	11809636 	bltu	r2,r6,a184 <__divdf3+0x334>
    9f2c:	300c90ba 	slli	r6,r6,2
    9f30:	00800074 	movhi	r2,1
    9f34:	10a7d104 	addi	r2,r2,-24764
    9f38:	308d883a 	add	r6,r6,r2
    9f3c:	30800017 	ldw	r2,0(r6)
    9f40:	1000683a 	jmp	r2
    9f44:	0000a184 	movi	zero,646
    9f48:	00009fbc 	xorhi	zero,zero,638
    9f4c:	0000a174 	movhi	zero,645
    9f50:	00009fb0 	cmpltui	zero,zero,638
    9f54:	0000a174 	movhi	zero,645
    9f58:	0000a148 	cmpgei	zero,zero,645
    9f5c:	0000a174 	movhi	zero,645
    9f60:	00009fb0 	cmpltui	zero,zero,638
    9f64:	00009fbc 	xorhi	zero,zero,638
    9f68:	00009fbc 	xorhi	zero,zero,638
    9f6c:	0000a148 	cmpgei	zero,zero,645
    9f70:	00009fb0 	cmpltui	zero,zero,638
    9f74:	00009fa0 	cmpeqi	zero,zero,638
    9f78:	00009fa0 	cmpeqi	zero,zero,638
    9f7c:	00009fa0 	cmpeqi	zero,zero,638
    9f80:	0000a50c 	andi	zero,zero,660
    9f84:	2404b03a 	or	r2,r4,r16
    9f88:	10006c1e 	bne	r2,zero,a13c <__divdf3+0x2ec>
    9f8c:	02400204 	movi	r9,8
    9f90:	0021883a 	mov	r16,zero
    9f94:	002b883a 	mov	r21,zero
    9f98:	01400084 	movi	r5,2
    9f9c:	003fca06 	br	9ec8 <__alt_mem_onchip_memory2_0+0xf7009ec8>
    9fa0:	8023883a 	mov	r17,r16
    9fa4:	a829883a 	mov	r20,r21
    9fa8:	4039883a 	mov	fp,r8
    9fac:	280f883a 	mov	r7,r5
    9fb0:	00800084 	movi	r2,2
    9fb4:	3881601e 	bne	r7,r2,a538 <__divdf3+0x6e8>
    9fb8:	e027883a 	mov	r19,fp
    9fbc:	9900004c 	andi	r4,r19,1
    9fc0:	0081ffc4 	movi	r2,2047
    9fc4:	0021883a 	mov	r16,zero
    9fc8:	002b883a 	mov	r21,zero
    9fcc:	1004953a 	slli	r2,r2,20
    9fd0:	20c03fcc 	andi	r3,r4,255
    9fd4:	01400434 	movhi	r5,16
    9fd8:	297fffc4 	addi	r5,r5,-1
    9fdc:	180697fa 	slli	r3,r3,31
    9fe0:	8160703a 	and	r16,r16,r5
    9fe4:	80a0b03a 	or	r16,r16,r2
    9fe8:	80c6b03a 	or	r3,r16,r3
    9fec:	a805883a 	mov	r2,r21
    9ff0:	dfc00f17 	ldw	ra,60(sp)
    9ff4:	df000e17 	ldw	fp,56(sp)
    9ff8:	ddc00d17 	ldw	r23,52(sp)
    9ffc:	dd800c17 	ldw	r22,48(sp)
    a000:	dd400b17 	ldw	r21,44(sp)
    a004:	dd000a17 	ldw	r20,40(sp)
    a008:	dcc00917 	ldw	r19,36(sp)
    a00c:	dc800817 	ldw	r18,32(sp)
    a010:	dc400717 	ldw	r17,28(sp)
    a014:	dc000617 	ldw	r16,24(sp)
    a018:	dec01004 	addi	sp,sp,64
    a01c:	f800283a 	ret
    a020:	2404b03a 	or	r2,r4,r16
    a024:	2023883a 	mov	r17,r4
    a028:	10003f26 	beq	r2,zero,a128 <__divdf3+0x2d8>
    a02c:	80015e26 	beq	r16,zero,a5a8 <__divdf3+0x758>
    a030:	8009883a 	mov	r4,r16
    a034:	d9800215 	stw	r6,8(sp)
    a038:	d9c00515 	stw	r7,20(sp)
    a03c:	da000415 	stw	r8,16(sp)
    a040:	000bde40 	call	bde4 <__clzsi2>
    a044:	d9800217 	ldw	r6,8(sp)
    a048:	d9c00517 	ldw	r7,20(sp)
    a04c:	da000417 	ldw	r8,16(sp)
    a050:	113ffd44 	addi	r4,r2,-11
    a054:	00c00704 	movi	r3,28
    a058:	19014f16 	blt	r3,r4,a598 <__divdf3+0x748>
    a05c:	00c00744 	movi	r3,29
    a060:	157ffe04 	addi	r21,r2,-8
    a064:	1907c83a 	sub	r3,r3,r4
    a068:	8560983a 	sll	r16,r16,r21
    a06c:	88c6d83a 	srl	r3,r17,r3
    a070:	8d6a983a 	sll	r21,r17,r21
    a074:	1c20b03a 	or	r16,r3,r16
    a078:	1080fcc4 	addi	r2,r2,1011
    a07c:	00a5c83a 	sub	r18,zero,r2
    a080:	0013883a 	mov	r9,zero
    a084:	000b883a 	mov	r5,zero
    a088:	003f8f06 	br	9ec8 <__alt_mem_onchip_memory2_0+0xf7009ec8>
    a08c:	3444b03a 	or	r2,r6,r17
    a090:	1000231e 	bne	r2,zero,a120 <__divdf3+0x2d0>
    a094:	0023883a 	mov	r17,zero
    a098:	0029883a 	mov	r20,zero
    a09c:	01c00084 	movi	r7,2
    a0a0:	003f9b06 	br	9f10 <__alt_mem_onchip_memory2_0+0xf7009f10>
    a0a4:	3444b03a 	or	r2,r6,r17
    a0a8:	10001926 	beq	r2,zero,a110 <__divdf3+0x2c0>
    a0ac:	88014b26 	beq	r17,zero,a5dc <__divdf3+0x78c>
    a0b0:	8809883a 	mov	r4,r17
    a0b4:	d9400115 	stw	r5,4(sp)
    a0b8:	d9800215 	stw	r6,8(sp)
    a0bc:	da000415 	stw	r8,16(sp)
    a0c0:	da400315 	stw	r9,12(sp)
    a0c4:	000bde40 	call	bde4 <__clzsi2>
    a0c8:	d9400117 	ldw	r5,4(sp)
    a0cc:	d9800217 	ldw	r6,8(sp)
    a0d0:	da000417 	ldw	r8,16(sp)
    a0d4:	da400317 	ldw	r9,12(sp)
    a0d8:	113ffd44 	addi	r4,r2,-11
    a0dc:	00c00704 	movi	r3,28
    a0e0:	19013a16 	blt	r3,r4,a5cc <__divdf3+0x77c>
    a0e4:	00c00744 	movi	r3,29
    a0e8:	153ffe04 	addi	r20,r2,-8
    a0ec:	1907c83a 	sub	r3,r3,r4
    a0f0:	8d22983a 	sll	r17,r17,r20
    a0f4:	30c6d83a 	srl	r3,r6,r3
    a0f8:	3528983a 	sll	r20,r6,r20
    a0fc:	1c62b03a 	or	r17,r3,r17
    a100:	1080fcc4 	addi	r2,r2,1011
    a104:	0087c83a 	sub	r3,zero,r2
    a108:	000f883a 	mov	r7,zero
    a10c:	003f8006 	br	9f10 <__alt_mem_onchip_memory2_0+0xf7009f10>
    a110:	0023883a 	mov	r17,zero
    a114:	0029883a 	mov	r20,zero
    a118:	01c00044 	movi	r7,1
    a11c:	003f7c06 	br	9f10 <__alt_mem_onchip_memory2_0+0xf7009f10>
    a120:	01c000c4 	movi	r7,3
    a124:	003f7a06 	br	9f10 <__alt_mem_onchip_memory2_0+0xf7009f10>
    a128:	02400104 	movi	r9,4
    a12c:	0021883a 	mov	r16,zero
    a130:	002b883a 	mov	r21,zero
    a134:	01400044 	movi	r5,1
    a138:	003f6306 	br	9ec8 <__alt_mem_onchip_memory2_0+0xf7009ec8>
    a13c:	02400304 	movi	r9,12
    a140:	014000c4 	movi	r5,3
    a144:	003f6006 	br	9ec8 <__alt_mem_onchip_memory2_0+0xf7009ec8>
    a148:	04000434 	movhi	r16,16
    a14c:	0009883a 	mov	r4,zero
    a150:	843fffc4 	addi	r16,r16,-1
    a154:	057fffc4 	movi	r21,-1
    a158:	0081ffc4 	movi	r2,2047
    a15c:	003f9b06 	br	9fcc <__alt_mem_onchip_memory2_0+0xf7009fcc>
    a160:	00c00044 	movi	r3,1
    a164:	1887c83a 	sub	r3,r3,r2
    a168:	01000e04 	movi	r4,56
    a16c:	20c1530e 	bge	r4,r3,a6bc <__divdf3+0x86c>
    a170:	9900004c 	andi	r4,r19,1
    a174:	0005883a 	mov	r2,zero
    a178:	0021883a 	mov	r16,zero
    a17c:	002b883a 	mov	r21,zero
    a180:	003f9206 	br	9fcc <__alt_mem_onchip_memory2_0+0xf7009fcc>
    a184:	8c012e36 	bltu	r17,r16,a640 <__divdf3+0x7f0>
    a188:	84412c26 	beq	r16,r17,a63c <__divdf3+0x7ec>
    a18c:	a82f883a 	mov	r23,r21
    a190:	18ffffc4 	addi	r3,r3,-1
    a194:	002b883a 	mov	r21,zero
    a198:	a004d63a 	srli	r2,r20,24
    a19c:	8822923a 	slli	r17,r17,8
    a1a0:	a028923a 	slli	r20,r20,8
    a1a4:	8009883a 	mov	r4,r16
    a1a8:	88acb03a 	or	r22,r17,r2
    a1ac:	dd000015 	stw	r20,0(sp)
    a1b0:	b028d43a 	srli	r20,r22,16
    a1b4:	d8c00215 	stw	r3,8(sp)
    a1b8:	b4bfffcc 	andi	r18,r22,65535
    a1bc:	a00b883a 	mov	r5,r20
    a1c0:	0000ad80 	call	ad8 <__udivsi3>
    a1c4:	100b883a 	mov	r5,r2
    a1c8:	9009883a 	mov	r4,r18
    a1cc:	1023883a 	mov	r17,r2
    a1d0:	0000b940 	call	b94 <__mulsi3>
    a1d4:	8009883a 	mov	r4,r16
    a1d8:	a00b883a 	mov	r5,r20
    a1dc:	1039883a 	mov	fp,r2
    a1e0:	0000b3c0 	call	b3c <__umodsi3>
    a1e4:	1004943a 	slli	r2,r2,16
    a1e8:	b808d43a 	srli	r4,r23,16
    a1ec:	d8c00217 	ldw	r3,8(sp)
    a1f0:	2084b03a 	or	r2,r4,r2
    a1f4:	1700062e 	bgeu	r2,fp,a210 <__divdf3+0x3c0>
    a1f8:	1585883a 	add	r2,r2,r22
    a1fc:	893fffc4 	addi	r4,r17,-1
    a200:	15811d36 	bltu	r2,r22,a678 <__divdf3+0x828>
    a204:	17011c2e 	bgeu	r2,fp,a678 <__divdf3+0x828>
    a208:	8c7fff84 	addi	r17,r17,-2
    a20c:	1585883a 	add	r2,r2,r22
    a210:	1739c83a 	sub	fp,r2,fp
    a214:	a00b883a 	mov	r5,r20
    a218:	e009883a 	mov	r4,fp
    a21c:	d8c00215 	stw	r3,8(sp)
    a220:	0000ad80 	call	ad8 <__udivsi3>
    a224:	100b883a 	mov	r5,r2
    a228:	9009883a 	mov	r4,r18
    a22c:	1021883a 	mov	r16,r2
    a230:	0000b940 	call	b94 <__mulsi3>
    a234:	a00b883a 	mov	r5,r20
    a238:	e009883a 	mov	r4,fp
    a23c:	d8800415 	stw	r2,16(sp)
    a240:	0000b3c0 	call	b3c <__umodsi3>
    a244:	1004943a 	slli	r2,r2,16
    a248:	da000417 	ldw	r8,16(sp)
    a24c:	bdffffcc 	andi	r23,r23,65535
    a250:	b884b03a 	or	r2,r23,r2
    a254:	d8c00217 	ldw	r3,8(sp)
    a258:	1200062e 	bgeu	r2,r8,a274 <__divdf3+0x424>
    a25c:	1585883a 	add	r2,r2,r22
    a260:	813fffc4 	addi	r4,r16,-1
    a264:	15810236 	bltu	r2,r22,a670 <__divdf3+0x820>
    a268:	1201012e 	bgeu	r2,r8,a670 <__divdf3+0x820>
    a26c:	843fff84 	addi	r16,r16,-2
    a270:	1585883a 	add	r2,r2,r22
    a274:	8822943a 	slli	r17,r17,16
    a278:	d9800017 	ldw	r6,0(sp)
    a27c:	1211c83a 	sub	r8,r2,r8
    a280:	8c22b03a 	or	r17,r17,r16
    a284:	373fffcc 	andi	fp,r6,65535
    a288:	8abfffcc 	andi	r10,r17,65535
    a28c:	8820d43a 	srli	r16,r17,16
    a290:	5009883a 	mov	r4,r10
    a294:	e00b883a 	mov	r5,fp
    a298:	302ed43a 	srli	r23,r6,16
    a29c:	d8c00215 	stw	r3,8(sp)
    a2a0:	da000415 	stw	r8,16(sp)
    a2a4:	da800115 	stw	r10,4(sp)
    a2a8:	0000b940 	call	b94 <__mulsi3>
    a2ac:	800b883a 	mov	r5,r16
    a2b0:	e009883a 	mov	r4,fp
    a2b4:	d8800515 	stw	r2,20(sp)
    a2b8:	0000b940 	call	b94 <__mulsi3>
    a2bc:	8009883a 	mov	r4,r16
    a2c0:	b80b883a 	mov	r5,r23
    a2c4:	d8800315 	stw	r2,12(sp)
    a2c8:	0000b940 	call	b94 <__mulsi3>
    a2cc:	da800117 	ldw	r10,4(sp)
    a2d0:	b80b883a 	mov	r5,r23
    a2d4:	1021883a 	mov	r16,r2
    a2d8:	5009883a 	mov	r4,r10
    a2dc:	0000b940 	call	b94 <__mulsi3>
    a2e0:	d9c00517 	ldw	r7,20(sp)
    a2e4:	da400317 	ldw	r9,12(sp)
    a2e8:	d8c00217 	ldw	r3,8(sp)
    a2ec:	3808d43a 	srli	r4,r7,16
    a2f0:	1245883a 	add	r2,r2,r9
    a2f4:	da000417 	ldw	r8,16(sp)
    a2f8:	2085883a 	add	r2,r4,r2
    a2fc:	1240022e 	bgeu	r2,r9,a308 <__divdf3+0x4b8>
    a300:	01000074 	movhi	r4,1
    a304:	8121883a 	add	r16,r16,r4
    a308:	1008d43a 	srli	r4,r2,16
    a30c:	1004943a 	slli	r2,r2,16
    a310:	39ffffcc 	andi	r7,r7,65535
    a314:	2409883a 	add	r4,r4,r16
    a318:	11c5883a 	add	r2,r2,r7
    a31c:	4100bb36 	bltu	r8,r4,a60c <__divdf3+0x7bc>
    a320:	4100d726 	beq	r8,r4,a680 <__divdf3+0x830>
    a324:	4109c83a 	sub	r4,r8,r4
    a328:	a8a1c83a 	sub	r16,r21,r2
    a32c:	ac2b803a 	cmpltu	r21,r21,r16
    a330:	256bc83a 	sub	r21,r4,r21
    a334:	b540d926 	beq	r22,r21,a69c <__divdf3+0x84c>
    a338:	a00b883a 	mov	r5,r20
    a33c:	a809883a 	mov	r4,r21
    a340:	d8c00215 	stw	r3,8(sp)
    a344:	0000ad80 	call	ad8 <__udivsi3>
    a348:	100b883a 	mov	r5,r2
    a34c:	9009883a 	mov	r4,r18
    a350:	d8800515 	stw	r2,20(sp)
    a354:	0000b940 	call	b94 <__mulsi3>
    a358:	a809883a 	mov	r4,r21
    a35c:	a00b883a 	mov	r5,r20
    a360:	d8800415 	stw	r2,16(sp)
    a364:	0000b3c0 	call	b3c <__umodsi3>
    a368:	1004943a 	slli	r2,r2,16
    a36c:	8008d43a 	srli	r4,r16,16
    a370:	da000417 	ldw	r8,16(sp)
    a374:	d8c00217 	ldw	r3,8(sp)
    a378:	2084b03a 	or	r2,r4,r2
    a37c:	d9c00517 	ldw	r7,20(sp)
    a380:	1200062e 	bgeu	r2,r8,a39c <__divdf3+0x54c>
    a384:	1585883a 	add	r2,r2,r22
    a388:	393fffc4 	addi	r4,r7,-1
    a38c:	1580c536 	bltu	r2,r22,a6a4 <__divdf3+0x854>
    a390:	1200c42e 	bgeu	r2,r8,a6a4 <__divdf3+0x854>
    a394:	39ffff84 	addi	r7,r7,-2
    a398:	1585883a 	add	r2,r2,r22
    a39c:	122bc83a 	sub	r21,r2,r8
    a3a0:	a00b883a 	mov	r5,r20
    a3a4:	a809883a 	mov	r4,r21
    a3a8:	d8c00215 	stw	r3,8(sp)
    a3ac:	d9c00515 	stw	r7,20(sp)
    a3b0:	0000ad80 	call	ad8 <__udivsi3>
    a3b4:	9009883a 	mov	r4,r18
    a3b8:	100b883a 	mov	r5,r2
    a3bc:	d8800415 	stw	r2,16(sp)
    a3c0:	0000b940 	call	b94 <__mulsi3>
    a3c4:	a809883a 	mov	r4,r21
    a3c8:	a00b883a 	mov	r5,r20
    a3cc:	1025883a 	mov	r18,r2
    a3d0:	0000b3c0 	call	b3c <__umodsi3>
    a3d4:	1004943a 	slli	r2,r2,16
    a3d8:	813fffcc 	andi	r4,r16,65535
    a3dc:	d8c00217 	ldw	r3,8(sp)
    a3e0:	20a0b03a 	or	r16,r4,r2
    a3e4:	d9c00517 	ldw	r7,20(sp)
    a3e8:	da000417 	ldw	r8,16(sp)
    a3ec:	8480062e 	bgeu	r16,r18,a408 <__divdf3+0x5b8>
    a3f0:	85a1883a 	add	r16,r16,r22
    a3f4:	40bfffc4 	addi	r2,r8,-1
    a3f8:	8580ac36 	bltu	r16,r22,a6ac <__divdf3+0x85c>
    a3fc:	8480ab2e 	bgeu	r16,r18,a6ac <__divdf3+0x85c>
    a400:	423fff84 	addi	r8,r8,-2
    a404:	85a1883a 	add	r16,r16,r22
    a408:	3804943a 	slli	r2,r7,16
    a40c:	84a1c83a 	sub	r16,r16,r18
    a410:	e009883a 	mov	r4,fp
    a414:	1228b03a 	or	r20,r2,r8
    a418:	a1ffffcc 	andi	r7,r20,65535
    a41c:	a024d43a 	srli	r18,r20,16
    a420:	380b883a 	mov	r5,r7
    a424:	d8c00215 	stw	r3,8(sp)
    a428:	d9c00515 	stw	r7,20(sp)
    a42c:	0000b940 	call	b94 <__mulsi3>
    a430:	900b883a 	mov	r5,r18
    a434:	e009883a 	mov	r4,fp
    a438:	102b883a 	mov	r21,r2
    a43c:	0000b940 	call	b94 <__mulsi3>
    a440:	900b883a 	mov	r5,r18
    a444:	b809883a 	mov	r4,r23
    a448:	1039883a 	mov	fp,r2
    a44c:	0000b940 	call	b94 <__mulsi3>
    a450:	d9c00517 	ldw	r7,20(sp)
    a454:	b80b883a 	mov	r5,r23
    a458:	1025883a 	mov	r18,r2
    a45c:	3809883a 	mov	r4,r7
    a460:	0000b940 	call	b94 <__mulsi3>
    a464:	a808d43a 	srli	r4,r21,16
    a468:	1705883a 	add	r2,r2,fp
    a46c:	d8c00217 	ldw	r3,8(sp)
    a470:	2085883a 	add	r2,r4,r2
    a474:	1700022e 	bgeu	r2,fp,a480 <__divdf3+0x630>
    a478:	01000074 	movhi	r4,1
    a47c:	9125883a 	add	r18,r18,r4
    a480:	1008d43a 	srli	r4,r2,16
    a484:	1004943a 	slli	r2,r2,16
    a488:	ad7fffcc 	andi	r21,r21,65535
    a48c:	2489883a 	add	r4,r4,r18
    a490:	1545883a 	add	r2,r2,r21
    a494:	81003836 	bltu	r16,r4,a578 <__divdf3+0x728>
    a498:	81003626 	beq	r16,r4,a574 <__divdf3+0x724>
    a49c:	a5000054 	ori	r20,r20,1
    a4a0:	1880ffc4 	addi	r2,r3,1023
    a4a4:	00bf2e0e 	bge	zero,r2,a160 <__alt_mem_onchip_memory2_0+0xf700a160>
    a4a8:	a10001cc 	andi	r4,r20,7
    a4ac:	20000726 	beq	r4,zero,a4cc <__divdf3+0x67c>
    a4b0:	a10003cc 	andi	r4,r20,15
    a4b4:	01400104 	movi	r5,4
    a4b8:	21400426 	beq	r4,r5,a4cc <__divdf3+0x67c>
    a4bc:	a149883a 	add	r4,r20,r5
    a4c0:	2529803a 	cmpltu	r20,r4,r20
    a4c4:	8d23883a 	add	r17,r17,r20
    a4c8:	2029883a 	mov	r20,r4
    a4cc:	8900402c 	andhi	r4,r17,256
    a4d0:	20000426 	beq	r4,zero,a4e4 <__divdf3+0x694>
    a4d4:	18810004 	addi	r2,r3,1024
    a4d8:	00ffc034 	movhi	r3,65280
    a4dc:	18ffffc4 	addi	r3,r3,-1
    a4e0:	88e2703a 	and	r17,r17,r3
    a4e4:	00c1ff84 	movi	r3,2046
    a4e8:	18beb416 	blt	r3,r2,9fbc <__alt_mem_onchip_memory2_0+0xf7009fbc>
    a4ec:	a028d0fa 	srli	r20,r20,3
    a4f0:	882a977a 	slli	r21,r17,29
    a4f4:	8820927a 	slli	r16,r17,9
    a4f8:	1081ffcc 	andi	r2,r2,2047
    a4fc:	ad2ab03a 	or	r21,r21,r20
    a500:	8020d33a 	srli	r16,r16,12
    a504:	9900004c 	andi	r4,r19,1
    a508:	003eb006 	br	9fcc <__alt_mem_onchip_memory2_0+0xf7009fcc>
    a50c:	8080022c 	andhi	r2,r16,8
    a510:	10001226 	beq	r2,zero,a55c <__divdf3+0x70c>
    a514:	8880022c 	andhi	r2,r17,8
    a518:	1000101e 	bne	r2,zero,a55c <__divdf3+0x70c>
    a51c:	00800434 	movhi	r2,16
    a520:	8c000234 	orhi	r16,r17,8
    a524:	10bfffc4 	addi	r2,r2,-1
    a528:	b809883a 	mov	r4,r23
    a52c:	80a0703a 	and	r16,r16,r2
    a530:	a02b883a 	mov	r21,r20
    a534:	003f0806 	br	a158 <__alt_mem_onchip_memory2_0+0xf700a158>
    a538:	008000c4 	movi	r2,3
    a53c:	3880b126 	beq	r7,r2,a804 <__divdf3+0x9b4>
    a540:	00800044 	movi	r2,1
    a544:	38805b1e 	bne	r7,r2,a6b4 <__divdf3+0x864>
    a548:	e009883a 	mov	r4,fp
    a54c:	0005883a 	mov	r2,zero
    a550:	0021883a 	mov	r16,zero
    a554:	002b883a 	mov	r21,zero
    a558:	003e9c06 	br	9fcc <__alt_mem_onchip_memory2_0+0xf7009fcc>
    a55c:	00800434 	movhi	r2,16
    a560:	84000234 	orhi	r16,r16,8
    a564:	10bfffc4 	addi	r2,r2,-1
    a568:	b009883a 	mov	r4,r22
    a56c:	80a0703a 	and	r16,r16,r2
    a570:	003ef906 	br	a158 <__alt_mem_onchip_memory2_0+0xf700a158>
    a574:	103fca26 	beq	r2,zero,a4a0 <__alt_mem_onchip_memory2_0+0xf700a4a0>
    a578:	b421883a 	add	r16,r22,r16
    a57c:	a17fffc4 	addi	r5,r20,-1
    a580:	8580422e 	bgeu	r16,r22,a68c <__divdf3+0x83c>
    a584:	2829883a 	mov	r20,r5
    a588:	813fc41e 	bne	r16,r4,a49c <__alt_mem_onchip_memory2_0+0xf700a49c>
    a58c:	d9800017 	ldw	r6,0(sp)
    a590:	30bfc21e 	bne	r6,r2,a49c <__alt_mem_onchip_memory2_0+0xf700a49c>
    a594:	003fc206 	br	a4a0 <__alt_mem_onchip_memory2_0+0xf700a4a0>
    a598:	143ff604 	addi	r16,r2,-40
    a59c:	8c20983a 	sll	r16,r17,r16
    a5a0:	002b883a 	mov	r21,zero
    a5a4:	003eb406 	br	a078 <__alt_mem_onchip_memory2_0+0xf700a078>
    a5a8:	d9800215 	stw	r6,8(sp)
    a5ac:	d9c00515 	stw	r7,20(sp)
    a5b0:	da000415 	stw	r8,16(sp)
    a5b4:	000bde40 	call	bde4 <__clzsi2>
    a5b8:	10800804 	addi	r2,r2,32
    a5bc:	da000417 	ldw	r8,16(sp)
    a5c0:	d9c00517 	ldw	r7,20(sp)
    a5c4:	d9800217 	ldw	r6,8(sp)
    a5c8:	003ea106 	br	a050 <__alt_mem_onchip_memory2_0+0xf700a050>
    a5cc:	147ff604 	addi	r17,r2,-40
    a5d0:	3462983a 	sll	r17,r6,r17
    a5d4:	0029883a 	mov	r20,zero
    a5d8:	003ec906 	br	a100 <__alt_mem_onchip_memory2_0+0xf700a100>
    a5dc:	3009883a 	mov	r4,r6
    a5e0:	d9400115 	stw	r5,4(sp)
    a5e4:	d9800215 	stw	r6,8(sp)
    a5e8:	da000415 	stw	r8,16(sp)
    a5ec:	da400315 	stw	r9,12(sp)
    a5f0:	000bde40 	call	bde4 <__clzsi2>
    a5f4:	10800804 	addi	r2,r2,32
    a5f8:	da400317 	ldw	r9,12(sp)
    a5fc:	da000417 	ldw	r8,16(sp)
    a600:	d9800217 	ldw	r6,8(sp)
    a604:	d9400117 	ldw	r5,4(sp)
    a608:	003eb306 	br	a0d8 <__alt_mem_onchip_memory2_0+0xf700a0d8>
    a60c:	d9800017 	ldw	r6,0(sp)
    a610:	a9ab883a 	add	r21,r21,r6
    a614:	a98b803a 	cmpltu	r5,r21,r6
    a618:	2d8b883a 	add	r5,r5,r22
    a61c:	2a11883a 	add	r8,r5,r8
    a620:	897fffc4 	addi	r5,r17,-1
    a624:	b2000c2e 	bgeu	r22,r8,a658 <__divdf3+0x808>
    a628:	41003f36 	bltu	r8,r4,a728 <__divdf3+0x8d8>
    a62c:	22006c26 	beq	r4,r8,a7e0 <__divdf3+0x990>
    a630:	4109c83a 	sub	r4,r8,r4
    a634:	2823883a 	mov	r17,r5
    a638:	003f3b06 	br	a328 <__alt_mem_onchip_memory2_0+0xf700a328>
    a63c:	ad3ed336 	bltu	r21,r20,a18c <__alt_mem_onchip_memory2_0+0xf700a18c>
    a640:	a804d07a 	srli	r2,r21,1
    a644:	802e97fa 	slli	r23,r16,31
    a648:	a82a97fa 	slli	r21,r21,31
    a64c:	8020d07a 	srli	r16,r16,1
    a650:	b8aeb03a 	or	r23,r23,r2
    a654:	003ed006 	br	a198 <__alt_mem_onchip_memory2_0+0xf700a198>
    a658:	b23ff51e 	bne	r22,r8,a630 <__alt_mem_onchip_memory2_0+0xf700a630>
    a65c:	d9800017 	ldw	r6,0(sp)
    a660:	a9bff12e 	bgeu	r21,r6,a628 <__alt_mem_onchip_memory2_0+0xf700a628>
    a664:	b109c83a 	sub	r4,r22,r4
    a668:	2823883a 	mov	r17,r5
    a66c:	003f2e06 	br	a328 <__alt_mem_onchip_memory2_0+0xf700a328>
    a670:	2021883a 	mov	r16,r4
    a674:	003eff06 	br	a274 <__alt_mem_onchip_memory2_0+0xf700a274>
    a678:	2023883a 	mov	r17,r4
    a67c:	003ee406 	br	a210 <__alt_mem_onchip_memory2_0+0xf700a210>
    a680:	a8bfe236 	bltu	r21,r2,a60c <__alt_mem_onchip_memory2_0+0xf700a60c>
    a684:	0009883a 	mov	r4,zero
    a688:	003f2706 	br	a328 <__alt_mem_onchip_memory2_0+0xf700a328>
    a68c:	81002d36 	bltu	r16,r4,a744 <__divdf3+0x8f4>
    a690:	24005626 	beq	r4,r16,a7ec <__divdf3+0x99c>
    a694:	2829883a 	mov	r20,r5
    a698:	003f8006 	br	a49c <__alt_mem_onchip_memory2_0+0xf700a49c>
    a69c:	053fffc4 	movi	r20,-1
    a6a0:	003f7f06 	br	a4a0 <__alt_mem_onchip_memory2_0+0xf700a4a0>
    a6a4:	200f883a 	mov	r7,r4
    a6a8:	003f3c06 	br	a39c <__alt_mem_onchip_memory2_0+0xf700a39c>
    a6ac:	1011883a 	mov	r8,r2
    a6b0:	003f5506 	br	a408 <__alt_mem_onchip_memory2_0+0xf700a408>
    a6b4:	e027883a 	mov	r19,fp
    a6b8:	003f7906 	br	a4a0 <__alt_mem_onchip_memory2_0+0xf700a4a0>
    a6bc:	010007c4 	movi	r4,31
    a6c0:	20c02816 	blt	r4,r3,a764 <__divdf3+0x914>
    a6c4:	00800804 	movi	r2,32
    a6c8:	10c5c83a 	sub	r2,r2,r3
    a6cc:	888a983a 	sll	r5,r17,r2
    a6d0:	a0c8d83a 	srl	r4,r20,r3
    a6d4:	a084983a 	sll	r2,r20,r2
    a6d8:	88e2d83a 	srl	r17,r17,r3
    a6dc:	2906b03a 	or	r3,r5,r4
    a6e0:	1004c03a 	cmpne	r2,r2,zero
    a6e4:	1886b03a 	or	r3,r3,r2
    a6e8:	188001cc 	andi	r2,r3,7
    a6ec:	10000726 	beq	r2,zero,a70c <__divdf3+0x8bc>
    a6f0:	188003cc 	andi	r2,r3,15
    a6f4:	01000104 	movi	r4,4
    a6f8:	11000426 	beq	r2,r4,a70c <__divdf3+0x8bc>
    a6fc:	1805883a 	mov	r2,r3
    a700:	10c00104 	addi	r3,r2,4
    a704:	1885803a 	cmpltu	r2,r3,r2
    a708:	88a3883a 	add	r17,r17,r2
    a70c:	8880202c 	andhi	r2,r17,128
    a710:	10002926 	beq	r2,zero,a7b8 <__divdf3+0x968>
    a714:	9900004c 	andi	r4,r19,1
    a718:	00800044 	movi	r2,1
    a71c:	0021883a 	mov	r16,zero
    a720:	002b883a 	mov	r21,zero
    a724:	003e2906 	br	9fcc <__alt_mem_onchip_memory2_0+0xf7009fcc>
    a728:	d9800017 	ldw	r6,0(sp)
    a72c:	8c7fff84 	addi	r17,r17,-2
    a730:	a9ab883a 	add	r21,r21,r6
    a734:	a98b803a 	cmpltu	r5,r21,r6
    a738:	2d8b883a 	add	r5,r5,r22
    a73c:	2a11883a 	add	r8,r5,r8
    a740:	003ef806 	br	a324 <__alt_mem_onchip_memory2_0+0xf700a324>
    a744:	d9800017 	ldw	r6,0(sp)
    a748:	318f883a 	add	r7,r6,r6
    a74c:	398b803a 	cmpltu	r5,r7,r6
    a750:	2d8d883a 	add	r6,r5,r22
    a754:	81a1883a 	add	r16,r16,r6
    a758:	a17fff84 	addi	r5,r20,-2
    a75c:	d9c00015 	stw	r7,0(sp)
    a760:	003f8806 	br	a584 <__alt_mem_onchip_memory2_0+0xf700a584>
    a764:	013ff844 	movi	r4,-31
    a768:	2085c83a 	sub	r2,r4,r2
    a76c:	8888d83a 	srl	r4,r17,r2
    a770:	00800804 	movi	r2,32
    a774:	18802126 	beq	r3,r2,a7fc <__divdf3+0x9ac>
    a778:	04001004 	movi	r16,64
    a77c:	80c7c83a 	sub	r3,r16,r3
    a780:	88e0983a 	sll	r16,r17,r3
    a784:	8504b03a 	or	r2,r16,r20
    a788:	1004c03a 	cmpne	r2,r2,zero
    a78c:	2084b03a 	or	r2,r4,r2
    a790:	144001cc 	andi	r17,r2,7
    a794:	88000d1e 	bne	r17,zero,a7cc <__divdf3+0x97c>
    a798:	0021883a 	mov	r16,zero
    a79c:	102ad0fa 	srli	r21,r2,3
    a7a0:	9900004c 	andi	r4,r19,1
    a7a4:	0005883a 	mov	r2,zero
    a7a8:	ac6ab03a 	or	r21,r21,r17
    a7ac:	003e0706 	br	9fcc <__alt_mem_onchip_memory2_0+0xf7009fcc>
    a7b0:	1007883a 	mov	r3,r2
    a7b4:	0023883a 	mov	r17,zero
    a7b8:	8820927a 	slli	r16,r17,9
    a7bc:	1805883a 	mov	r2,r3
    a7c0:	8822977a 	slli	r17,r17,29
    a7c4:	8020d33a 	srli	r16,r16,12
    a7c8:	003ff406 	br	a79c <__alt_mem_onchip_memory2_0+0xf700a79c>
    a7cc:	10c003cc 	andi	r3,r2,15
    a7d0:	01000104 	movi	r4,4
    a7d4:	193ff626 	beq	r3,r4,a7b0 <__alt_mem_onchip_memory2_0+0xf700a7b0>
    a7d8:	0023883a 	mov	r17,zero
    a7dc:	003fc806 	br	a700 <__alt_mem_onchip_memory2_0+0xf700a700>
    a7e0:	a8bfd136 	bltu	r21,r2,a728 <__alt_mem_onchip_memory2_0+0xf700a728>
    a7e4:	2823883a 	mov	r17,r5
    a7e8:	003fa606 	br	a684 <__alt_mem_onchip_memory2_0+0xf700a684>
    a7ec:	d9800017 	ldw	r6,0(sp)
    a7f0:	30bfd436 	bltu	r6,r2,a744 <__alt_mem_onchip_memory2_0+0xf700a744>
    a7f4:	2829883a 	mov	r20,r5
    a7f8:	003f6406 	br	a58c <__alt_mem_onchip_memory2_0+0xf700a58c>
    a7fc:	0021883a 	mov	r16,zero
    a800:	003fe006 	br	a784 <__alt_mem_onchip_memory2_0+0xf700a784>
    a804:	00800434 	movhi	r2,16
    a808:	8c000234 	orhi	r16,r17,8
    a80c:	10bfffc4 	addi	r2,r2,-1
    a810:	e009883a 	mov	r4,fp
    a814:	80a0703a 	and	r16,r16,r2
    a818:	a02b883a 	mov	r21,r20
    a81c:	003e4e06 	br	a158 <__alt_mem_onchip_memory2_0+0xf700a158>

0000a820 <__eqdf2>:
    a820:	2804d53a 	srli	r2,r5,20
    a824:	3806d53a 	srli	r3,r7,20
    a828:	02000434 	movhi	r8,16
    a82c:	423fffc4 	addi	r8,r8,-1
    a830:	1081ffcc 	andi	r2,r2,2047
    a834:	0281ffc4 	movi	r10,2047
    a838:	2a12703a 	and	r9,r5,r8
    a83c:	18c1ffcc 	andi	r3,r3,2047
    a840:	3a10703a 	and	r8,r7,r8
    a844:	280ad7fa 	srli	r5,r5,31
    a848:	380ed7fa 	srli	r7,r7,31
    a84c:	12801026 	beq	r2,r10,a890 <__eqdf2+0x70>
    a850:	0281ffc4 	movi	r10,2047
    a854:	1a800a26 	beq	r3,r10,a880 <__eqdf2+0x60>
    a858:	10c00226 	beq	r2,r3,a864 <__eqdf2+0x44>
    a85c:	00800044 	movi	r2,1
    a860:	f800283a 	ret
    a864:	4a3ffd1e 	bne	r9,r8,a85c <__alt_mem_onchip_memory2_0+0xf700a85c>
    a868:	21bffc1e 	bne	r4,r6,a85c <__alt_mem_onchip_memory2_0+0xf700a85c>
    a86c:	29c00c26 	beq	r5,r7,a8a0 <__eqdf2+0x80>
    a870:	103ffa1e 	bne	r2,zero,a85c <__alt_mem_onchip_memory2_0+0xf700a85c>
    a874:	2244b03a 	or	r2,r4,r9
    a878:	1004c03a 	cmpne	r2,r2,zero
    a87c:	f800283a 	ret
    a880:	3214b03a 	or	r10,r6,r8
    a884:	503ff426 	beq	r10,zero,a858 <__alt_mem_onchip_memory2_0+0xf700a858>
    a888:	00800044 	movi	r2,1
    a88c:	f800283a 	ret
    a890:	2254b03a 	or	r10,r4,r9
    a894:	503fee26 	beq	r10,zero,a850 <__alt_mem_onchip_memory2_0+0xf700a850>
    a898:	00800044 	movi	r2,1
    a89c:	f800283a 	ret
    a8a0:	0005883a 	mov	r2,zero
    a8a4:	f800283a 	ret

0000a8a8 <__gedf2>:
    a8a8:	2804d53a 	srli	r2,r5,20
    a8ac:	3806d53a 	srli	r3,r7,20
    a8b0:	02000434 	movhi	r8,16
    a8b4:	423fffc4 	addi	r8,r8,-1
    a8b8:	1081ffcc 	andi	r2,r2,2047
    a8bc:	0241ffc4 	movi	r9,2047
    a8c0:	2a14703a 	and	r10,r5,r8
    a8c4:	18c1ffcc 	andi	r3,r3,2047
    a8c8:	3a10703a 	and	r8,r7,r8
    a8cc:	280ad7fa 	srli	r5,r5,31
    a8d0:	380ed7fa 	srli	r7,r7,31
    a8d4:	12401d26 	beq	r2,r9,a94c <__gedf2+0xa4>
    a8d8:	0241ffc4 	movi	r9,2047
    a8dc:	1a401226 	beq	r3,r9,a928 <__gedf2+0x80>
    a8e0:	1000081e 	bne	r2,zero,a904 <__gedf2+0x5c>
    a8e4:	2296b03a 	or	r11,r4,r10
    a8e8:	5813003a 	cmpeq	r9,r11,zero
    a8ec:	1800091e 	bne	r3,zero,a914 <__gedf2+0x6c>
    a8f0:	3218b03a 	or	r12,r6,r8
    a8f4:	6000071e 	bne	r12,zero,a914 <__gedf2+0x6c>
    a8f8:	0005883a 	mov	r2,zero
    a8fc:	5800101e 	bne	r11,zero,a940 <__gedf2+0x98>
    a900:	f800283a 	ret
    a904:	18000c1e 	bne	r3,zero,a938 <__gedf2+0x90>
    a908:	3212b03a 	or	r9,r6,r8
    a90c:	48000c26 	beq	r9,zero,a940 <__gedf2+0x98>
    a910:	0013883a 	mov	r9,zero
    a914:	39c03fcc 	andi	r7,r7,255
    a918:	48000826 	beq	r9,zero,a93c <__gedf2+0x94>
    a91c:	38000926 	beq	r7,zero,a944 <__gedf2+0x9c>
    a920:	00800044 	movi	r2,1
    a924:	f800283a 	ret
    a928:	3212b03a 	or	r9,r6,r8
    a92c:	483fec26 	beq	r9,zero,a8e0 <__alt_mem_onchip_memory2_0+0xf700a8e0>
    a930:	00bfff84 	movi	r2,-2
    a934:	f800283a 	ret
    a938:	39c03fcc 	andi	r7,r7,255
    a93c:	29c00626 	beq	r5,r7,a958 <__gedf2+0xb0>
    a940:	283ff726 	beq	r5,zero,a920 <__alt_mem_onchip_memory2_0+0xf700a920>
    a944:	00bfffc4 	movi	r2,-1
    a948:	f800283a 	ret
    a94c:	2292b03a 	or	r9,r4,r10
    a950:	483fe126 	beq	r9,zero,a8d8 <__alt_mem_onchip_memory2_0+0xf700a8d8>
    a954:	003ff606 	br	a930 <__alt_mem_onchip_memory2_0+0xf700a930>
    a958:	18bff916 	blt	r3,r2,a940 <__alt_mem_onchip_memory2_0+0xf700a940>
    a95c:	10c00316 	blt	r2,r3,a96c <__gedf2+0xc4>
    a960:	42bff736 	bltu	r8,r10,a940 <__alt_mem_onchip_memory2_0+0xf700a940>
    a964:	52000326 	beq	r10,r8,a974 <__gedf2+0xcc>
    a968:	5200042e 	bgeu	r10,r8,a97c <__gedf2+0xd4>
    a96c:	283fec1e 	bne	r5,zero,a920 <__alt_mem_onchip_memory2_0+0xf700a920>
    a970:	003ff406 	br	a944 <__alt_mem_onchip_memory2_0+0xf700a944>
    a974:	313ff236 	bltu	r6,r4,a940 <__alt_mem_onchip_memory2_0+0xf700a940>
    a978:	21bffc36 	bltu	r4,r6,a96c <__alt_mem_onchip_memory2_0+0xf700a96c>
    a97c:	0005883a 	mov	r2,zero
    a980:	f800283a 	ret

0000a984 <__ledf2>:
    a984:	2804d53a 	srli	r2,r5,20
    a988:	3810d53a 	srli	r8,r7,20
    a98c:	00c00434 	movhi	r3,16
    a990:	18ffffc4 	addi	r3,r3,-1
    a994:	1081ffcc 	andi	r2,r2,2047
    a998:	0241ffc4 	movi	r9,2047
    a99c:	28d4703a 	and	r10,r5,r3
    a9a0:	4201ffcc 	andi	r8,r8,2047
    a9a4:	38c6703a 	and	r3,r7,r3
    a9a8:	280ad7fa 	srli	r5,r5,31
    a9ac:	380ed7fa 	srli	r7,r7,31
    a9b0:	12401f26 	beq	r2,r9,aa30 <__ledf2+0xac>
    a9b4:	0241ffc4 	movi	r9,2047
    a9b8:	42401426 	beq	r8,r9,aa0c <__ledf2+0x88>
    a9bc:	1000091e 	bne	r2,zero,a9e4 <__ledf2+0x60>
    a9c0:	2296b03a 	or	r11,r4,r10
    a9c4:	5813003a 	cmpeq	r9,r11,zero
    a9c8:	29403fcc 	andi	r5,r5,255
    a9cc:	40000a1e 	bne	r8,zero,a9f8 <__ledf2+0x74>
    a9d0:	30d8b03a 	or	r12,r6,r3
    a9d4:	6000081e 	bne	r12,zero,a9f8 <__ledf2+0x74>
    a9d8:	0005883a 	mov	r2,zero
    a9dc:	5800111e 	bne	r11,zero,aa24 <__ledf2+0xa0>
    a9e0:	f800283a 	ret
    a9e4:	29403fcc 	andi	r5,r5,255
    a9e8:	40000c1e 	bne	r8,zero,aa1c <__ledf2+0x98>
    a9ec:	30d2b03a 	or	r9,r6,r3
    a9f0:	48000c26 	beq	r9,zero,aa24 <__ledf2+0xa0>
    a9f4:	0013883a 	mov	r9,zero
    a9f8:	39c03fcc 	andi	r7,r7,255
    a9fc:	48000826 	beq	r9,zero,aa20 <__ledf2+0x9c>
    aa00:	38001126 	beq	r7,zero,aa48 <__ledf2+0xc4>
    aa04:	00800044 	movi	r2,1
    aa08:	f800283a 	ret
    aa0c:	30d2b03a 	or	r9,r6,r3
    aa10:	483fea26 	beq	r9,zero,a9bc <__alt_mem_onchip_memory2_0+0xf700a9bc>
    aa14:	00800084 	movi	r2,2
    aa18:	f800283a 	ret
    aa1c:	39c03fcc 	andi	r7,r7,255
    aa20:	39400726 	beq	r7,r5,aa40 <__ledf2+0xbc>
    aa24:	2800081e 	bne	r5,zero,aa48 <__ledf2+0xc4>
    aa28:	00800044 	movi	r2,1
    aa2c:	f800283a 	ret
    aa30:	2292b03a 	or	r9,r4,r10
    aa34:	483fdf26 	beq	r9,zero,a9b4 <__alt_mem_onchip_memory2_0+0xf700a9b4>
    aa38:	00800084 	movi	r2,2
    aa3c:	f800283a 	ret
    aa40:	4080030e 	bge	r8,r2,aa50 <__ledf2+0xcc>
    aa44:	383fef26 	beq	r7,zero,aa04 <__alt_mem_onchip_memory2_0+0xf700aa04>
    aa48:	00bfffc4 	movi	r2,-1
    aa4c:	f800283a 	ret
    aa50:	123feb16 	blt	r2,r8,aa00 <__alt_mem_onchip_memory2_0+0xf700aa00>
    aa54:	1abff336 	bltu	r3,r10,aa24 <__alt_mem_onchip_memory2_0+0xf700aa24>
    aa58:	50c00326 	beq	r10,r3,aa68 <__ledf2+0xe4>
    aa5c:	50c0042e 	bgeu	r10,r3,aa70 <__ledf2+0xec>
    aa60:	283fe81e 	bne	r5,zero,aa04 <__alt_mem_onchip_memory2_0+0xf700aa04>
    aa64:	003ff806 	br	aa48 <__alt_mem_onchip_memory2_0+0xf700aa48>
    aa68:	313fee36 	bltu	r6,r4,aa24 <__alt_mem_onchip_memory2_0+0xf700aa24>
    aa6c:	21bffc36 	bltu	r4,r6,aa60 <__alt_mem_onchip_memory2_0+0xf700aa60>
    aa70:	0005883a 	mov	r2,zero
    aa74:	f800283a 	ret

0000aa78 <__muldf3>:
    aa78:	deffee04 	addi	sp,sp,-72
    aa7c:	dd000c15 	stw	r20,48(sp)
    aa80:	2828d53a 	srli	r20,r5,20
    aa84:	ddc00f15 	stw	r23,60(sp)
    aa88:	282ed7fa 	srli	r23,r5,31
    aa8c:	dc000815 	stw	r16,32(sp)
    aa90:	04000434 	movhi	r16,16
    aa94:	dcc00b15 	stw	r19,44(sp)
    aa98:	843fffc4 	addi	r16,r16,-1
    aa9c:	dfc01115 	stw	ra,68(sp)
    aaa0:	df001015 	stw	fp,64(sp)
    aaa4:	dd800e15 	stw	r22,56(sp)
    aaa8:	dd400d15 	stw	r21,52(sp)
    aaac:	dc800a15 	stw	r18,40(sp)
    aab0:	dc400915 	stw	r17,36(sp)
    aab4:	a501ffcc 	andi	r20,r20,2047
    aab8:	2c20703a 	and	r16,r5,r16
    aabc:	b827883a 	mov	r19,r23
    aac0:	ba403fcc 	andi	r9,r23,255
    aac4:	a0006026 	beq	r20,zero,ac48 <__muldf3+0x1d0>
    aac8:	0081ffc4 	movi	r2,2047
    aacc:	202d883a 	mov	r22,r4
    aad0:	a0803626 	beq	r20,r2,abac <__muldf3+0x134>
    aad4:	84000434 	orhi	r16,r16,16
    aad8:	200ad77a 	srli	r5,r4,29
    aadc:	800490fa 	slli	r2,r16,3
    aae0:	202c90fa 	slli	r22,r4,3
    aae4:	a53f0044 	addi	r20,r20,-1023
    aae8:	28a0b03a 	or	r16,r5,r2
    aaec:	002b883a 	mov	r21,zero
    aaf0:	000b883a 	mov	r5,zero
    aaf4:	3804d53a 	srli	r2,r7,20
    aaf8:	3838d7fa 	srli	fp,r7,31
    aafc:	04400434 	movhi	r17,16
    ab00:	8c7fffc4 	addi	r17,r17,-1
    ab04:	1081ffcc 	andi	r2,r2,2047
    ab08:	3025883a 	mov	r18,r6
    ab0c:	3c62703a 	and	r17,r7,r17
    ab10:	e2803fcc 	andi	r10,fp,255
    ab14:	10006d26 	beq	r2,zero,accc <__muldf3+0x254>
    ab18:	00c1ffc4 	movi	r3,2047
    ab1c:	10c06526 	beq	r2,r3,acb4 <__muldf3+0x23c>
    ab20:	8c400434 	orhi	r17,r17,16
    ab24:	300ed77a 	srli	r7,r6,29
    ab28:	880690fa 	slli	r3,r17,3
    ab2c:	302490fa 	slli	r18,r6,3
    ab30:	10bf0044 	addi	r2,r2,-1023
    ab34:	38e2b03a 	or	r17,r7,r3
    ab38:	000f883a 	mov	r7,zero
    ab3c:	a087883a 	add	r3,r20,r2
    ab40:	010003c4 	movi	r4,15
    ab44:	3d44b03a 	or	r2,r7,r21
    ab48:	e5ccf03a 	xor	r6,fp,r23
    ab4c:	1a000044 	addi	r8,r3,1
    ab50:	20809b36 	bltu	r4,r2,adc0 <__muldf3+0x348>
    ab54:	100490ba 	slli	r2,r2,2
    ab58:	01000074 	movhi	r4,1
    ab5c:	212adb04 	addi	r4,r4,-21652
    ab60:	1105883a 	add	r2,r2,r4
    ab64:	10800017 	ldw	r2,0(r2)
    ab68:	1000683a 	jmp	r2
    ab6c:	0000adc0 	call	adc <__udivsi3+0x4>
    ab70:	0000abcc 	andi	zero,zero,687
    ab74:	0000abcc 	andi	zero,zero,687
    ab78:	0000abc8 	cmpgei	zero,zero,687
    ab7c:	0000ad9c 	xori	zero,zero,694
    ab80:	0000ad9c 	xori	zero,zero,694
    ab84:	0000ad84 	movi	zero,694
    ab88:	0000abc8 	cmpgei	zero,zero,687
    ab8c:	0000ad9c 	xori	zero,zero,694
    ab90:	0000ad84 	movi	zero,694
    ab94:	0000ad9c 	xori	zero,zero,694
    ab98:	0000abc8 	cmpgei	zero,zero,687
    ab9c:	0000adac 	andhi	zero,zero,694
    aba0:	0000adac 	andhi	zero,zero,694
    aba4:	0000adac 	andhi	zero,zero,694
    aba8:	0000b10c 	andi	zero,zero,708
    abac:	2404b03a 	or	r2,r4,r16
    abb0:	1000711e 	bne	r2,zero,ad78 <__muldf3+0x300>
    abb4:	05400204 	movi	r21,8
    abb8:	0021883a 	mov	r16,zero
    abbc:	002d883a 	mov	r22,zero
    abc0:	01400084 	movi	r5,2
    abc4:	003fcb06 	br	aaf4 <__alt_mem_onchip_memory2_0+0xf700aaf4>
    abc8:	500d883a 	mov	r6,r10
    abcc:	00800084 	movi	r2,2
    abd0:	38805926 	beq	r7,r2,ad38 <__muldf3+0x2c0>
    abd4:	008000c4 	movi	r2,3
    abd8:	3881bb26 	beq	r7,r2,b2c8 <__muldf3+0x850>
    abdc:	00800044 	movi	r2,1
    abe0:	3881961e 	bne	r7,r2,b23c <__muldf3+0x7c4>
    abe4:	3027883a 	mov	r19,r6
    abe8:	0005883a 	mov	r2,zero
    abec:	0021883a 	mov	r16,zero
    abf0:	002d883a 	mov	r22,zero
    abf4:	1004953a 	slli	r2,r2,20
    abf8:	98c03fcc 	andi	r3,r19,255
    abfc:	04400434 	movhi	r17,16
    ac00:	8c7fffc4 	addi	r17,r17,-1
    ac04:	180697fa 	slli	r3,r3,31
    ac08:	8460703a 	and	r16,r16,r17
    ac0c:	80a0b03a 	or	r16,r16,r2
    ac10:	80c6b03a 	or	r3,r16,r3
    ac14:	b005883a 	mov	r2,r22
    ac18:	dfc01117 	ldw	ra,68(sp)
    ac1c:	df001017 	ldw	fp,64(sp)
    ac20:	ddc00f17 	ldw	r23,60(sp)
    ac24:	dd800e17 	ldw	r22,56(sp)
    ac28:	dd400d17 	ldw	r21,52(sp)
    ac2c:	dd000c17 	ldw	r20,48(sp)
    ac30:	dcc00b17 	ldw	r19,44(sp)
    ac34:	dc800a17 	ldw	r18,40(sp)
    ac38:	dc400917 	ldw	r17,36(sp)
    ac3c:	dc000817 	ldw	r16,32(sp)
    ac40:	dec01204 	addi	sp,sp,72
    ac44:	f800283a 	ret
    ac48:	2404b03a 	or	r2,r4,r16
    ac4c:	202b883a 	mov	r21,r4
    ac50:	10004426 	beq	r2,zero,ad64 <__muldf3+0x2ec>
    ac54:	80015126 	beq	r16,zero,b19c <__muldf3+0x724>
    ac58:	8009883a 	mov	r4,r16
    ac5c:	d9800715 	stw	r6,28(sp)
    ac60:	d9c00215 	stw	r7,8(sp)
    ac64:	da400415 	stw	r9,16(sp)
    ac68:	000bde40 	call	bde4 <__clzsi2>
    ac6c:	d9800717 	ldw	r6,28(sp)
    ac70:	d9c00217 	ldw	r7,8(sp)
    ac74:	da400417 	ldw	r9,16(sp)
    ac78:	113ffd44 	addi	r4,r2,-11
    ac7c:	00c00704 	movi	r3,28
    ac80:	19014216 	blt	r3,r4,b18c <__muldf3+0x714>
    ac84:	00c00744 	movi	r3,29
    ac88:	15bffe04 	addi	r22,r2,-8
    ac8c:	1907c83a 	sub	r3,r3,r4
    ac90:	85a0983a 	sll	r16,r16,r22
    ac94:	a8c6d83a 	srl	r3,r21,r3
    ac98:	adac983a 	sll	r22,r21,r22
    ac9c:	1c20b03a 	or	r16,r3,r16
    aca0:	1080fcc4 	addi	r2,r2,1011
    aca4:	00a9c83a 	sub	r20,zero,r2
    aca8:	002b883a 	mov	r21,zero
    acac:	000b883a 	mov	r5,zero
    acb0:	003f9006 	br	aaf4 <__alt_mem_onchip_memory2_0+0xf700aaf4>
    acb4:	3446b03a 	or	r3,r6,r17
    acb8:	1800281e 	bne	r3,zero,ad5c <__muldf3+0x2e4>
    acbc:	0023883a 	mov	r17,zero
    acc0:	0025883a 	mov	r18,zero
    acc4:	01c00084 	movi	r7,2
    acc8:	003f9c06 	br	ab3c <__alt_mem_onchip_memory2_0+0xf700ab3c>
    accc:	3446b03a 	or	r3,r6,r17
    acd0:	18001e26 	beq	r3,zero,ad4c <__muldf3+0x2d4>
    acd4:	88012126 	beq	r17,zero,b15c <__muldf3+0x6e4>
    acd8:	8809883a 	mov	r4,r17
    acdc:	d9400215 	stw	r5,8(sp)
    ace0:	d9800715 	stw	r6,28(sp)
    ace4:	da400415 	stw	r9,16(sp)
    ace8:	da800315 	stw	r10,12(sp)
    acec:	000bde40 	call	bde4 <__clzsi2>
    acf0:	d9400217 	ldw	r5,8(sp)
    acf4:	d9800717 	ldw	r6,28(sp)
    acf8:	da400417 	ldw	r9,16(sp)
    acfc:	da800317 	ldw	r10,12(sp)
    ad00:	113ffd44 	addi	r4,r2,-11
    ad04:	00c00704 	movi	r3,28
    ad08:	19011016 	blt	r3,r4,b14c <__muldf3+0x6d4>
    ad0c:	00c00744 	movi	r3,29
    ad10:	14bffe04 	addi	r18,r2,-8
    ad14:	1907c83a 	sub	r3,r3,r4
    ad18:	8ca2983a 	sll	r17,r17,r18
    ad1c:	30c6d83a 	srl	r3,r6,r3
    ad20:	34a4983a 	sll	r18,r6,r18
    ad24:	1c62b03a 	or	r17,r3,r17
    ad28:	1080fcc4 	addi	r2,r2,1011
    ad2c:	0085c83a 	sub	r2,zero,r2
    ad30:	000f883a 	mov	r7,zero
    ad34:	003f8106 	br	ab3c <__alt_mem_onchip_memory2_0+0xf700ab3c>
    ad38:	3027883a 	mov	r19,r6
    ad3c:	0081ffc4 	movi	r2,2047
    ad40:	0021883a 	mov	r16,zero
    ad44:	002d883a 	mov	r22,zero
    ad48:	003faa06 	br	abf4 <__alt_mem_onchip_memory2_0+0xf700abf4>
    ad4c:	0023883a 	mov	r17,zero
    ad50:	0025883a 	mov	r18,zero
    ad54:	01c00044 	movi	r7,1
    ad58:	003f7806 	br	ab3c <__alt_mem_onchip_memory2_0+0xf700ab3c>
    ad5c:	01c000c4 	movi	r7,3
    ad60:	003f7606 	br	ab3c <__alt_mem_onchip_memory2_0+0xf700ab3c>
    ad64:	05400104 	movi	r21,4
    ad68:	0021883a 	mov	r16,zero
    ad6c:	002d883a 	mov	r22,zero
    ad70:	01400044 	movi	r5,1
    ad74:	003f5f06 	br	aaf4 <__alt_mem_onchip_memory2_0+0xf700aaf4>
    ad78:	05400304 	movi	r21,12
    ad7c:	014000c4 	movi	r5,3
    ad80:	003f5c06 	br	aaf4 <__alt_mem_onchip_memory2_0+0xf700aaf4>
    ad84:	04000434 	movhi	r16,16
    ad88:	0027883a 	mov	r19,zero
    ad8c:	843fffc4 	addi	r16,r16,-1
    ad90:	05bfffc4 	movi	r22,-1
    ad94:	0081ffc4 	movi	r2,2047
    ad98:	003f9606 	br	abf4 <__alt_mem_onchip_memory2_0+0xf700abf4>
    ad9c:	8023883a 	mov	r17,r16
    ada0:	b025883a 	mov	r18,r22
    ada4:	280f883a 	mov	r7,r5
    ada8:	003f8806 	br	abcc <__alt_mem_onchip_memory2_0+0xf700abcc>
    adac:	8023883a 	mov	r17,r16
    adb0:	b025883a 	mov	r18,r22
    adb4:	480d883a 	mov	r6,r9
    adb8:	280f883a 	mov	r7,r5
    adbc:	003f8306 	br	abcc <__alt_mem_onchip_memory2_0+0xf700abcc>
    adc0:	b026d43a 	srli	r19,r22,16
    adc4:	902ed43a 	srli	r23,r18,16
    adc8:	b5bfffcc 	andi	r22,r22,65535
    adcc:	94bfffcc 	andi	r18,r18,65535
    add0:	b00b883a 	mov	r5,r22
    add4:	9009883a 	mov	r4,r18
    add8:	d8c00515 	stw	r3,20(sp)
    addc:	d9800715 	stw	r6,28(sp)
    ade0:	da000615 	stw	r8,24(sp)
    ade4:	0000b940 	call	b94 <__mulsi3>
    ade8:	980b883a 	mov	r5,r19
    adec:	9009883a 	mov	r4,r18
    adf0:	1029883a 	mov	r20,r2
    adf4:	0000b940 	call	b94 <__mulsi3>
    adf8:	b80b883a 	mov	r5,r23
    adfc:	9809883a 	mov	r4,r19
    ae00:	102b883a 	mov	r21,r2
    ae04:	0000b940 	call	b94 <__mulsi3>
    ae08:	b809883a 	mov	r4,r23
    ae0c:	b00b883a 	mov	r5,r22
    ae10:	1039883a 	mov	fp,r2
    ae14:	0000b940 	call	b94 <__mulsi3>
    ae18:	a008d43a 	srli	r4,r20,16
    ae1c:	1545883a 	add	r2,r2,r21
    ae20:	d8c00517 	ldw	r3,20(sp)
    ae24:	2085883a 	add	r2,r4,r2
    ae28:	d9800717 	ldw	r6,28(sp)
    ae2c:	da000617 	ldw	r8,24(sp)
    ae30:	1540022e 	bgeu	r2,r21,ae3c <__muldf3+0x3c4>
    ae34:	01000074 	movhi	r4,1
    ae38:	e139883a 	add	fp,fp,r4
    ae3c:	100e943a 	slli	r7,r2,16
    ae40:	1004d43a 	srli	r2,r2,16
    ae44:	882ad43a 	srli	r21,r17,16
    ae48:	a53fffcc 	andi	r20,r20,65535
    ae4c:	8c7fffcc 	andi	r17,r17,65535
    ae50:	3d29883a 	add	r20,r7,r20
    ae54:	b00b883a 	mov	r5,r22
    ae58:	8809883a 	mov	r4,r17
    ae5c:	d8c00515 	stw	r3,20(sp)
    ae60:	d9800715 	stw	r6,28(sp)
    ae64:	da000615 	stw	r8,24(sp)
    ae68:	dd000115 	stw	r20,4(sp)
    ae6c:	d8800015 	stw	r2,0(sp)
    ae70:	0000b940 	call	b94 <__mulsi3>
    ae74:	980b883a 	mov	r5,r19
    ae78:	8809883a 	mov	r4,r17
    ae7c:	d8800215 	stw	r2,8(sp)
    ae80:	0000b940 	call	b94 <__mulsi3>
    ae84:	9809883a 	mov	r4,r19
    ae88:	a80b883a 	mov	r5,r21
    ae8c:	1029883a 	mov	r20,r2
    ae90:	0000b940 	call	b94 <__mulsi3>
    ae94:	b00b883a 	mov	r5,r22
    ae98:	a809883a 	mov	r4,r21
    ae9c:	d8800415 	stw	r2,16(sp)
    aea0:	0000b940 	call	b94 <__mulsi3>
    aea4:	d9c00217 	ldw	r7,8(sp)
    aea8:	1505883a 	add	r2,r2,r20
    aeac:	d8c00517 	ldw	r3,20(sp)
    aeb0:	3826d43a 	srli	r19,r7,16
    aeb4:	d9800717 	ldw	r6,28(sp)
    aeb8:	da000617 	ldw	r8,24(sp)
    aebc:	9885883a 	add	r2,r19,r2
    aec0:	da400417 	ldw	r9,16(sp)
    aec4:	1500022e 	bgeu	r2,r20,aed0 <__muldf3+0x458>
    aec8:	01000074 	movhi	r4,1
    aecc:	4913883a 	add	r9,r9,r4
    aed0:	1028d43a 	srli	r20,r2,16
    aed4:	1004943a 	slli	r2,r2,16
    aed8:	802cd43a 	srli	r22,r16,16
    aedc:	843fffcc 	andi	r16,r16,65535
    aee0:	3cffffcc 	andi	r19,r7,65535
    aee4:	9009883a 	mov	r4,r18
    aee8:	800b883a 	mov	r5,r16
    aeec:	a269883a 	add	r20,r20,r9
    aef0:	d8c00515 	stw	r3,20(sp)
    aef4:	d9800715 	stw	r6,28(sp)
    aef8:	da000615 	stw	r8,24(sp)
    aefc:	14e7883a 	add	r19,r2,r19
    af00:	0000b940 	call	b94 <__mulsi3>
    af04:	9009883a 	mov	r4,r18
    af08:	b00b883a 	mov	r5,r22
    af0c:	d8800315 	stw	r2,12(sp)
    af10:	0000b940 	call	b94 <__mulsi3>
    af14:	b809883a 	mov	r4,r23
    af18:	b00b883a 	mov	r5,r22
    af1c:	d8800215 	stw	r2,8(sp)
    af20:	0000b940 	call	b94 <__mulsi3>
    af24:	b80b883a 	mov	r5,r23
    af28:	8009883a 	mov	r4,r16
    af2c:	d8800415 	stw	r2,16(sp)
    af30:	0000b940 	call	b94 <__mulsi3>
    af34:	da800317 	ldw	r10,12(sp)
    af38:	d9c00217 	ldw	r7,8(sp)
    af3c:	d9000017 	ldw	r4,0(sp)
    af40:	502ed43a 	srli	r23,r10,16
    af44:	11c5883a 	add	r2,r2,r7
    af48:	24e5883a 	add	r18,r4,r19
    af4c:	b885883a 	add	r2,r23,r2
    af50:	d8c00517 	ldw	r3,20(sp)
    af54:	d9800717 	ldw	r6,28(sp)
    af58:	da000617 	ldw	r8,24(sp)
    af5c:	da400417 	ldw	r9,16(sp)
    af60:	11c0022e 	bgeu	r2,r7,af6c <__muldf3+0x4f4>
    af64:	01000074 	movhi	r4,1
    af68:	4913883a 	add	r9,r9,r4
    af6c:	100ed43a 	srli	r7,r2,16
    af70:	1004943a 	slli	r2,r2,16
    af74:	55ffffcc 	andi	r23,r10,65535
    af78:	3a53883a 	add	r9,r7,r9
    af7c:	8809883a 	mov	r4,r17
    af80:	800b883a 	mov	r5,r16
    af84:	d8c00515 	stw	r3,20(sp)
    af88:	d9800715 	stw	r6,28(sp)
    af8c:	da000615 	stw	r8,24(sp)
    af90:	da400415 	stw	r9,16(sp)
    af94:	15ef883a 	add	r23,r2,r23
    af98:	0000b940 	call	b94 <__mulsi3>
    af9c:	8809883a 	mov	r4,r17
    afa0:	b00b883a 	mov	r5,r22
    afa4:	d8800215 	stw	r2,8(sp)
    afa8:	0000b940 	call	b94 <__mulsi3>
    afac:	b00b883a 	mov	r5,r22
    afb0:	a809883a 	mov	r4,r21
    afb4:	d8800315 	stw	r2,12(sp)
    afb8:	0000b940 	call	b94 <__mulsi3>
    afbc:	8009883a 	mov	r4,r16
    afc0:	a80b883a 	mov	r5,r21
    afc4:	1023883a 	mov	r17,r2
    afc8:	0000b940 	call	b94 <__mulsi3>
    afcc:	d9c00217 	ldw	r7,8(sp)
    afd0:	da800317 	ldw	r10,12(sp)
    afd4:	d8c00517 	ldw	r3,20(sp)
    afd8:	3808d43a 	srli	r4,r7,16
    afdc:	1285883a 	add	r2,r2,r10
    afe0:	d9800717 	ldw	r6,28(sp)
    afe4:	2085883a 	add	r2,r4,r2
    afe8:	da000617 	ldw	r8,24(sp)
    afec:	da400417 	ldw	r9,16(sp)
    aff0:	1280022e 	bgeu	r2,r10,affc <__muldf3+0x584>
    aff4:	01000074 	movhi	r4,1
    aff8:	8923883a 	add	r17,r17,r4
    affc:	1008943a 	slli	r4,r2,16
    b000:	39ffffcc 	andi	r7,r7,65535
    b004:	e4b9883a 	add	fp,fp,r18
    b008:	21cf883a 	add	r7,r4,r7
    b00c:	e4e7803a 	cmpltu	r19,fp,r19
    b010:	3d0f883a 	add	r7,r7,r20
    b014:	bf39883a 	add	fp,r23,fp
    b018:	99c9883a 	add	r4,r19,r7
    b01c:	e5ef803a 	cmpltu	r23,fp,r23
    b020:	490b883a 	add	r5,r9,r4
    b024:	1004d43a 	srli	r2,r2,16
    b028:	b965883a 	add	r18,r23,r5
    b02c:	24c9803a 	cmpltu	r4,r4,r19
    b030:	3d29803a 	cmpltu	r20,r7,r20
    b034:	a128b03a 	or	r20,r20,r4
    b038:	95ef803a 	cmpltu	r23,r18,r23
    b03c:	2a53803a 	cmpltu	r9,r5,r9
    b040:	a0a9883a 	add	r20,r20,r2
    b044:	4deeb03a 	or	r23,r9,r23
    b048:	a5ef883a 	add	r23,r20,r23
    b04c:	bc63883a 	add	r17,r23,r17
    b050:	e004927a 	slli	r2,fp,9
    b054:	d9000117 	ldw	r4,4(sp)
    b058:	882e927a 	slli	r23,r17,9
    b05c:	9022d5fa 	srli	r17,r18,23
    b060:	e038d5fa 	srli	fp,fp,23
    b064:	1104b03a 	or	r2,r2,r4
    b068:	9024927a 	slli	r18,r18,9
    b06c:	1004c03a 	cmpne	r2,r2,zero
    b070:	bc62b03a 	or	r17,r23,r17
    b074:	1738b03a 	or	fp,r2,fp
    b078:	8880402c 	andhi	r2,r17,256
    b07c:	e4a4b03a 	or	r18,fp,r18
    b080:	10000726 	beq	r2,zero,b0a0 <__muldf3+0x628>
    b084:	9006d07a 	srli	r3,r18,1
    b088:	880497fa 	slli	r2,r17,31
    b08c:	9480004c 	andi	r18,r18,1
    b090:	8822d07a 	srli	r17,r17,1
    b094:	1ca4b03a 	or	r18,r3,r18
    b098:	14a4b03a 	or	r18,r2,r18
    b09c:	4007883a 	mov	r3,r8
    b0a0:	1880ffc4 	addi	r2,r3,1023
    b0a4:	0080460e 	bge	zero,r2,b1c0 <__muldf3+0x748>
    b0a8:	910001cc 	andi	r4,r18,7
    b0ac:	20000726 	beq	r4,zero,b0cc <__muldf3+0x654>
    b0b0:	910003cc 	andi	r4,r18,15
    b0b4:	01400104 	movi	r5,4
    b0b8:	21400426 	beq	r4,r5,b0cc <__muldf3+0x654>
    b0bc:	9149883a 	add	r4,r18,r5
    b0c0:	24a5803a 	cmpltu	r18,r4,r18
    b0c4:	8ca3883a 	add	r17,r17,r18
    b0c8:	2025883a 	mov	r18,r4
    b0cc:	8900402c 	andhi	r4,r17,256
    b0d0:	20000426 	beq	r4,zero,b0e4 <__muldf3+0x66c>
    b0d4:	18810004 	addi	r2,r3,1024
    b0d8:	00ffc034 	movhi	r3,65280
    b0dc:	18ffffc4 	addi	r3,r3,-1
    b0e0:	88e2703a 	and	r17,r17,r3
    b0e4:	00c1ff84 	movi	r3,2046
    b0e8:	18bf1316 	blt	r3,r2,ad38 <__alt_mem_onchip_memory2_0+0xf700ad38>
    b0ec:	882c977a 	slli	r22,r17,29
    b0f0:	9024d0fa 	srli	r18,r18,3
    b0f4:	8822927a 	slli	r17,r17,9
    b0f8:	1081ffcc 	andi	r2,r2,2047
    b0fc:	b4acb03a 	or	r22,r22,r18
    b100:	8820d33a 	srli	r16,r17,12
    b104:	3027883a 	mov	r19,r6
    b108:	003eba06 	br	abf4 <__alt_mem_onchip_memory2_0+0xf700abf4>
    b10c:	8080022c 	andhi	r2,r16,8
    b110:	10000926 	beq	r2,zero,b138 <__muldf3+0x6c0>
    b114:	8880022c 	andhi	r2,r17,8
    b118:	1000071e 	bne	r2,zero,b138 <__muldf3+0x6c0>
    b11c:	00800434 	movhi	r2,16
    b120:	8c000234 	orhi	r16,r17,8
    b124:	10bfffc4 	addi	r2,r2,-1
    b128:	e027883a 	mov	r19,fp
    b12c:	80a0703a 	and	r16,r16,r2
    b130:	902d883a 	mov	r22,r18
    b134:	003f1706 	br	ad94 <__alt_mem_onchip_memory2_0+0xf700ad94>
    b138:	00800434 	movhi	r2,16
    b13c:	84000234 	orhi	r16,r16,8
    b140:	10bfffc4 	addi	r2,r2,-1
    b144:	80a0703a 	and	r16,r16,r2
    b148:	003f1206 	br	ad94 <__alt_mem_onchip_memory2_0+0xf700ad94>
    b14c:	147ff604 	addi	r17,r2,-40
    b150:	3462983a 	sll	r17,r6,r17
    b154:	0025883a 	mov	r18,zero
    b158:	003ef306 	br	ad28 <__alt_mem_onchip_memory2_0+0xf700ad28>
    b15c:	3009883a 	mov	r4,r6
    b160:	d9400215 	stw	r5,8(sp)
    b164:	d9800715 	stw	r6,28(sp)
    b168:	da400415 	stw	r9,16(sp)
    b16c:	da800315 	stw	r10,12(sp)
    b170:	000bde40 	call	bde4 <__clzsi2>
    b174:	10800804 	addi	r2,r2,32
    b178:	da800317 	ldw	r10,12(sp)
    b17c:	da400417 	ldw	r9,16(sp)
    b180:	d9800717 	ldw	r6,28(sp)
    b184:	d9400217 	ldw	r5,8(sp)
    b188:	003edd06 	br	ad00 <__alt_mem_onchip_memory2_0+0xf700ad00>
    b18c:	143ff604 	addi	r16,r2,-40
    b190:	ac20983a 	sll	r16,r21,r16
    b194:	002d883a 	mov	r22,zero
    b198:	003ec106 	br	aca0 <__alt_mem_onchip_memory2_0+0xf700aca0>
    b19c:	d9800715 	stw	r6,28(sp)
    b1a0:	d9c00215 	stw	r7,8(sp)
    b1a4:	da400415 	stw	r9,16(sp)
    b1a8:	000bde40 	call	bde4 <__clzsi2>
    b1ac:	10800804 	addi	r2,r2,32
    b1b0:	da400417 	ldw	r9,16(sp)
    b1b4:	d9c00217 	ldw	r7,8(sp)
    b1b8:	d9800717 	ldw	r6,28(sp)
    b1bc:	003eae06 	br	ac78 <__alt_mem_onchip_memory2_0+0xf700ac78>
    b1c0:	00c00044 	movi	r3,1
    b1c4:	1887c83a 	sub	r3,r3,r2
    b1c8:	01000e04 	movi	r4,56
    b1cc:	20fe8516 	blt	r4,r3,abe4 <__alt_mem_onchip_memory2_0+0xf700abe4>
    b1d0:	010007c4 	movi	r4,31
    b1d4:	20c01b16 	blt	r4,r3,b244 <__muldf3+0x7cc>
    b1d8:	00800804 	movi	r2,32
    b1dc:	10c5c83a 	sub	r2,r2,r3
    b1e0:	888a983a 	sll	r5,r17,r2
    b1e4:	90c8d83a 	srl	r4,r18,r3
    b1e8:	9084983a 	sll	r2,r18,r2
    b1ec:	88e2d83a 	srl	r17,r17,r3
    b1f0:	2906b03a 	or	r3,r5,r4
    b1f4:	1004c03a 	cmpne	r2,r2,zero
    b1f8:	1886b03a 	or	r3,r3,r2
    b1fc:	188001cc 	andi	r2,r3,7
    b200:	10000726 	beq	r2,zero,b220 <__muldf3+0x7a8>
    b204:	188003cc 	andi	r2,r3,15
    b208:	01000104 	movi	r4,4
    b20c:	11000426 	beq	r2,r4,b220 <__muldf3+0x7a8>
    b210:	1805883a 	mov	r2,r3
    b214:	10c00104 	addi	r3,r2,4
    b218:	1885803a 	cmpltu	r2,r3,r2
    b21c:	88a3883a 	add	r17,r17,r2
    b220:	8880202c 	andhi	r2,r17,128
    b224:	10001c26 	beq	r2,zero,b298 <__muldf3+0x820>
    b228:	3027883a 	mov	r19,r6
    b22c:	00800044 	movi	r2,1
    b230:	0021883a 	mov	r16,zero
    b234:	002d883a 	mov	r22,zero
    b238:	003e6e06 	br	abf4 <__alt_mem_onchip_memory2_0+0xf700abf4>
    b23c:	4007883a 	mov	r3,r8
    b240:	003f9706 	br	b0a0 <__alt_mem_onchip_memory2_0+0xf700b0a0>
    b244:	017ff844 	movi	r5,-31
    b248:	2885c83a 	sub	r2,r5,r2
    b24c:	888ad83a 	srl	r5,r17,r2
    b250:	00800804 	movi	r2,32
    b254:	18801a26 	beq	r3,r2,b2c0 <__muldf3+0x848>
    b258:	01001004 	movi	r4,64
    b25c:	20c7c83a 	sub	r3,r4,r3
    b260:	88e2983a 	sll	r17,r17,r3
    b264:	8ca4b03a 	or	r18,r17,r18
    b268:	9004c03a 	cmpne	r2,r18,zero
    b26c:	2884b03a 	or	r2,r5,r2
    b270:	144001cc 	andi	r17,r2,7
    b274:	88000d1e 	bne	r17,zero,b2ac <__muldf3+0x834>
    b278:	0021883a 	mov	r16,zero
    b27c:	102cd0fa 	srli	r22,r2,3
    b280:	3027883a 	mov	r19,r6
    b284:	0005883a 	mov	r2,zero
    b288:	b46cb03a 	or	r22,r22,r17
    b28c:	003e5906 	br	abf4 <__alt_mem_onchip_memory2_0+0xf700abf4>
    b290:	1007883a 	mov	r3,r2
    b294:	0023883a 	mov	r17,zero
    b298:	8820927a 	slli	r16,r17,9
    b29c:	1805883a 	mov	r2,r3
    b2a0:	8822977a 	slli	r17,r17,29
    b2a4:	8020d33a 	srli	r16,r16,12
    b2a8:	003ff406 	br	b27c <__alt_mem_onchip_memory2_0+0xf700b27c>
    b2ac:	10c003cc 	andi	r3,r2,15
    b2b0:	01000104 	movi	r4,4
    b2b4:	193ff626 	beq	r3,r4,b290 <__alt_mem_onchip_memory2_0+0xf700b290>
    b2b8:	0023883a 	mov	r17,zero
    b2bc:	003fd506 	br	b214 <__alt_mem_onchip_memory2_0+0xf700b214>
    b2c0:	0023883a 	mov	r17,zero
    b2c4:	003fe706 	br	b264 <__alt_mem_onchip_memory2_0+0xf700b264>
    b2c8:	00800434 	movhi	r2,16
    b2cc:	8c000234 	orhi	r16,r17,8
    b2d0:	10bfffc4 	addi	r2,r2,-1
    b2d4:	3027883a 	mov	r19,r6
    b2d8:	80a0703a 	and	r16,r16,r2
    b2dc:	902d883a 	mov	r22,r18
    b2e0:	003eac06 	br	ad94 <__alt_mem_onchip_memory2_0+0xf700ad94>

0000b2e4 <__subdf3>:
    b2e4:	02000434 	movhi	r8,16
    b2e8:	423fffc4 	addi	r8,r8,-1
    b2ec:	defffb04 	addi	sp,sp,-20
    b2f0:	2a14703a 	and	r10,r5,r8
    b2f4:	3812d53a 	srli	r9,r7,20
    b2f8:	3a10703a 	and	r8,r7,r8
    b2fc:	2006d77a 	srli	r3,r4,29
    b300:	3004d77a 	srli	r2,r6,29
    b304:	dc000015 	stw	r16,0(sp)
    b308:	501490fa 	slli	r10,r10,3
    b30c:	2820d53a 	srli	r16,r5,20
    b310:	401090fa 	slli	r8,r8,3
    b314:	dc800215 	stw	r18,8(sp)
    b318:	dc400115 	stw	r17,4(sp)
    b31c:	dfc00415 	stw	ra,16(sp)
    b320:	202290fa 	slli	r17,r4,3
    b324:	dcc00315 	stw	r19,12(sp)
    b328:	4a41ffcc 	andi	r9,r9,2047
    b32c:	0101ffc4 	movi	r4,2047
    b330:	2824d7fa 	srli	r18,r5,31
    b334:	8401ffcc 	andi	r16,r16,2047
    b338:	50c6b03a 	or	r3,r10,r3
    b33c:	380ed7fa 	srli	r7,r7,31
    b340:	408ab03a 	or	r5,r8,r2
    b344:	300c90fa 	slli	r6,r6,3
    b348:	49009626 	beq	r9,r4,b5a4 <__subdf3+0x2c0>
    b34c:	39c0005c 	xori	r7,r7,1
    b350:	8245c83a 	sub	r2,r16,r9
    b354:	3c807426 	beq	r7,r18,b528 <__subdf3+0x244>
    b358:	0080af0e 	bge	zero,r2,b618 <__subdf3+0x334>
    b35c:	48002a1e 	bne	r9,zero,b408 <__subdf3+0x124>
    b360:	2988b03a 	or	r4,r5,r6
    b364:	20009a1e 	bne	r4,zero,b5d0 <__subdf3+0x2ec>
    b368:	888001cc 	andi	r2,r17,7
    b36c:	10000726 	beq	r2,zero,b38c <__subdf3+0xa8>
    b370:	888003cc 	andi	r2,r17,15
    b374:	01000104 	movi	r4,4
    b378:	11000426 	beq	r2,r4,b38c <__subdf3+0xa8>
    b37c:	890b883a 	add	r5,r17,r4
    b380:	2c63803a 	cmpltu	r17,r5,r17
    b384:	1c47883a 	add	r3,r3,r17
    b388:	2823883a 	mov	r17,r5
    b38c:	1880202c 	andhi	r2,r3,128
    b390:	10005926 	beq	r2,zero,b4f8 <__subdf3+0x214>
    b394:	84000044 	addi	r16,r16,1
    b398:	0081ffc4 	movi	r2,2047
    b39c:	8080be26 	beq	r16,r2,b698 <__subdf3+0x3b4>
    b3a0:	017fe034 	movhi	r5,65408
    b3a4:	297fffc4 	addi	r5,r5,-1
    b3a8:	1946703a 	and	r3,r3,r5
    b3ac:	1804977a 	slli	r2,r3,29
    b3b0:	1806927a 	slli	r3,r3,9
    b3b4:	8822d0fa 	srli	r17,r17,3
    b3b8:	8401ffcc 	andi	r16,r16,2047
    b3bc:	180ad33a 	srli	r5,r3,12
    b3c0:	9100004c 	andi	r4,r18,1
    b3c4:	1444b03a 	or	r2,r2,r17
    b3c8:	80c1ffcc 	andi	r3,r16,2047
    b3cc:	1820953a 	slli	r16,r3,20
    b3d0:	20c03fcc 	andi	r3,r4,255
    b3d4:	180897fa 	slli	r4,r3,31
    b3d8:	00c00434 	movhi	r3,16
    b3dc:	18ffffc4 	addi	r3,r3,-1
    b3e0:	28c6703a 	and	r3,r5,r3
    b3e4:	1c06b03a 	or	r3,r3,r16
    b3e8:	1906b03a 	or	r3,r3,r4
    b3ec:	dfc00417 	ldw	ra,16(sp)
    b3f0:	dcc00317 	ldw	r19,12(sp)
    b3f4:	dc800217 	ldw	r18,8(sp)
    b3f8:	dc400117 	ldw	r17,4(sp)
    b3fc:	dc000017 	ldw	r16,0(sp)
    b400:	dec00504 	addi	sp,sp,20
    b404:	f800283a 	ret
    b408:	0101ffc4 	movi	r4,2047
    b40c:	813fd626 	beq	r16,r4,b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b410:	29402034 	orhi	r5,r5,128
    b414:	01000e04 	movi	r4,56
    b418:	2080a316 	blt	r4,r2,b6a8 <__subdf3+0x3c4>
    b41c:	010007c4 	movi	r4,31
    b420:	2080c616 	blt	r4,r2,b73c <__subdf3+0x458>
    b424:	01000804 	movi	r4,32
    b428:	2089c83a 	sub	r4,r4,r2
    b42c:	2910983a 	sll	r8,r5,r4
    b430:	308ed83a 	srl	r7,r6,r2
    b434:	3108983a 	sll	r4,r6,r4
    b438:	2884d83a 	srl	r2,r5,r2
    b43c:	41ccb03a 	or	r6,r8,r7
    b440:	2008c03a 	cmpne	r4,r4,zero
    b444:	310cb03a 	or	r6,r6,r4
    b448:	898dc83a 	sub	r6,r17,r6
    b44c:	89a3803a 	cmpltu	r17,r17,r6
    b450:	1887c83a 	sub	r3,r3,r2
    b454:	1c47c83a 	sub	r3,r3,r17
    b458:	3023883a 	mov	r17,r6
    b45c:	1880202c 	andhi	r2,r3,128
    b460:	10002326 	beq	r2,zero,b4f0 <__subdf3+0x20c>
    b464:	04c02034 	movhi	r19,128
    b468:	9cffffc4 	addi	r19,r19,-1
    b46c:	1ce6703a 	and	r19,r3,r19
    b470:	98007a26 	beq	r19,zero,b65c <__subdf3+0x378>
    b474:	9809883a 	mov	r4,r19
    b478:	000bde40 	call	bde4 <__clzsi2>
    b47c:	113ffe04 	addi	r4,r2,-8
    b480:	00c007c4 	movi	r3,31
    b484:	19007b16 	blt	r3,r4,b674 <__subdf3+0x390>
    b488:	00800804 	movi	r2,32
    b48c:	1105c83a 	sub	r2,r2,r4
    b490:	8884d83a 	srl	r2,r17,r2
    b494:	9906983a 	sll	r3,r19,r4
    b498:	8922983a 	sll	r17,r17,r4
    b49c:	10c4b03a 	or	r2,r2,r3
    b4a0:	24007816 	blt	r4,r16,b684 <__subdf3+0x3a0>
    b4a4:	2421c83a 	sub	r16,r4,r16
    b4a8:	80c00044 	addi	r3,r16,1
    b4ac:	010007c4 	movi	r4,31
    b4b0:	20c09516 	blt	r4,r3,b708 <__subdf3+0x424>
    b4b4:	01400804 	movi	r5,32
    b4b8:	28cbc83a 	sub	r5,r5,r3
    b4bc:	88c8d83a 	srl	r4,r17,r3
    b4c0:	8962983a 	sll	r17,r17,r5
    b4c4:	114a983a 	sll	r5,r2,r5
    b4c8:	10c6d83a 	srl	r3,r2,r3
    b4cc:	8804c03a 	cmpne	r2,r17,zero
    b4d0:	290ab03a 	or	r5,r5,r4
    b4d4:	28a2b03a 	or	r17,r5,r2
    b4d8:	0021883a 	mov	r16,zero
    b4dc:	003fa206 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b4e0:	2090b03a 	or	r8,r4,r2
    b4e4:	40018e26 	beq	r8,zero,bb20 <__subdf3+0x83c>
    b4e8:	1007883a 	mov	r3,r2
    b4ec:	2023883a 	mov	r17,r4
    b4f0:	888001cc 	andi	r2,r17,7
    b4f4:	103f9e1e 	bne	r2,zero,b370 <__alt_mem_onchip_memory2_0+0xf700b370>
    b4f8:	1804977a 	slli	r2,r3,29
    b4fc:	8822d0fa 	srli	r17,r17,3
    b500:	1810d0fa 	srli	r8,r3,3
    b504:	9100004c 	andi	r4,r18,1
    b508:	1444b03a 	or	r2,r2,r17
    b50c:	00c1ffc4 	movi	r3,2047
    b510:	80c02826 	beq	r16,r3,b5b4 <__subdf3+0x2d0>
    b514:	01400434 	movhi	r5,16
    b518:	297fffc4 	addi	r5,r5,-1
    b51c:	80e0703a 	and	r16,r16,r3
    b520:	414a703a 	and	r5,r8,r5
    b524:	003fa806 	br	b3c8 <__alt_mem_onchip_memory2_0+0xf700b3c8>
    b528:	0080630e 	bge	zero,r2,b6b8 <__subdf3+0x3d4>
    b52c:	48003026 	beq	r9,zero,b5f0 <__subdf3+0x30c>
    b530:	0101ffc4 	movi	r4,2047
    b534:	813f8c26 	beq	r16,r4,b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b538:	29402034 	orhi	r5,r5,128
    b53c:	01000e04 	movi	r4,56
    b540:	2080a90e 	bge	r4,r2,b7e8 <__subdf3+0x504>
    b544:	298cb03a 	or	r6,r5,r6
    b548:	3012c03a 	cmpne	r9,r6,zero
    b54c:	0005883a 	mov	r2,zero
    b550:	4c53883a 	add	r9,r9,r17
    b554:	4c63803a 	cmpltu	r17,r9,r17
    b558:	10c7883a 	add	r3,r2,r3
    b55c:	88c7883a 	add	r3,r17,r3
    b560:	4823883a 	mov	r17,r9
    b564:	1880202c 	andhi	r2,r3,128
    b568:	1000d026 	beq	r2,zero,b8ac <__subdf3+0x5c8>
    b56c:	84000044 	addi	r16,r16,1
    b570:	0081ffc4 	movi	r2,2047
    b574:	8080fe26 	beq	r16,r2,b970 <__subdf3+0x68c>
    b578:	00bfe034 	movhi	r2,65408
    b57c:	10bfffc4 	addi	r2,r2,-1
    b580:	1886703a 	and	r3,r3,r2
    b584:	880ad07a 	srli	r5,r17,1
    b588:	180497fa 	slli	r2,r3,31
    b58c:	8900004c 	andi	r4,r17,1
    b590:	2922b03a 	or	r17,r5,r4
    b594:	1806d07a 	srli	r3,r3,1
    b598:	1462b03a 	or	r17,r2,r17
    b59c:	3825883a 	mov	r18,r7
    b5a0:	003f7106 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b5a4:	2984b03a 	or	r2,r5,r6
    b5a8:	103f6826 	beq	r2,zero,b34c <__alt_mem_onchip_memory2_0+0xf700b34c>
    b5ac:	39c03fcc 	andi	r7,r7,255
    b5b0:	003f6706 	br	b350 <__alt_mem_onchip_memory2_0+0xf700b350>
    b5b4:	4086b03a 	or	r3,r8,r2
    b5b8:	18015226 	beq	r3,zero,bb04 <__subdf3+0x820>
    b5bc:	00c00434 	movhi	r3,16
    b5c0:	41400234 	orhi	r5,r8,8
    b5c4:	18ffffc4 	addi	r3,r3,-1
    b5c8:	28ca703a 	and	r5,r5,r3
    b5cc:	003f7e06 	br	b3c8 <__alt_mem_onchip_memory2_0+0xf700b3c8>
    b5d0:	10bfffc4 	addi	r2,r2,-1
    b5d4:	1000491e 	bne	r2,zero,b6fc <__subdf3+0x418>
    b5d8:	898fc83a 	sub	r7,r17,r6
    b5dc:	89e3803a 	cmpltu	r17,r17,r7
    b5e0:	1947c83a 	sub	r3,r3,r5
    b5e4:	1c47c83a 	sub	r3,r3,r17
    b5e8:	3823883a 	mov	r17,r7
    b5ec:	003f9b06 	br	b45c <__alt_mem_onchip_memory2_0+0xf700b45c>
    b5f0:	2988b03a 	or	r4,r5,r6
    b5f4:	203f5c26 	beq	r4,zero,b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b5f8:	10bfffc4 	addi	r2,r2,-1
    b5fc:	1000931e 	bne	r2,zero,b84c <__subdf3+0x568>
    b600:	898d883a 	add	r6,r17,r6
    b604:	3463803a 	cmpltu	r17,r6,r17
    b608:	1947883a 	add	r3,r3,r5
    b60c:	88c7883a 	add	r3,r17,r3
    b610:	3023883a 	mov	r17,r6
    b614:	003fd306 	br	b564 <__alt_mem_onchip_memory2_0+0xf700b564>
    b618:	1000541e 	bne	r2,zero,b76c <__subdf3+0x488>
    b61c:	80800044 	addi	r2,r16,1
    b620:	1081ffcc 	andi	r2,r2,2047
    b624:	01000044 	movi	r4,1
    b628:	2080a20e 	bge	r4,r2,b8b4 <__subdf3+0x5d0>
    b62c:	8989c83a 	sub	r4,r17,r6
    b630:	8905803a 	cmpltu	r2,r17,r4
    b634:	1967c83a 	sub	r19,r3,r5
    b638:	98a7c83a 	sub	r19,r19,r2
    b63c:	9880202c 	andhi	r2,r19,128
    b640:	10006326 	beq	r2,zero,b7d0 <__subdf3+0x4ec>
    b644:	3463c83a 	sub	r17,r6,r17
    b648:	28c7c83a 	sub	r3,r5,r3
    b64c:	344d803a 	cmpltu	r6,r6,r17
    b650:	19a7c83a 	sub	r19,r3,r6
    b654:	3825883a 	mov	r18,r7
    b658:	983f861e 	bne	r19,zero,b474 <__alt_mem_onchip_memory2_0+0xf700b474>
    b65c:	8809883a 	mov	r4,r17
    b660:	000bde40 	call	bde4 <__clzsi2>
    b664:	10800804 	addi	r2,r2,32
    b668:	113ffe04 	addi	r4,r2,-8
    b66c:	00c007c4 	movi	r3,31
    b670:	193f850e 	bge	r3,r4,b488 <__alt_mem_onchip_memory2_0+0xf700b488>
    b674:	10bff604 	addi	r2,r2,-40
    b678:	8884983a 	sll	r2,r17,r2
    b67c:	0023883a 	mov	r17,zero
    b680:	243f880e 	bge	r4,r16,b4a4 <__alt_mem_onchip_memory2_0+0xf700b4a4>
    b684:	00ffe034 	movhi	r3,65408
    b688:	18ffffc4 	addi	r3,r3,-1
    b68c:	8121c83a 	sub	r16,r16,r4
    b690:	10c6703a 	and	r3,r2,r3
    b694:	003f3406 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b698:	9100004c 	andi	r4,r18,1
    b69c:	000b883a 	mov	r5,zero
    b6a0:	0005883a 	mov	r2,zero
    b6a4:	003f4806 	br	b3c8 <__alt_mem_onchip_memory2_0+0xf700b3c8>
    b6a8:	298cb03a 	or	r6,r5,r6
    b6ac:	300cc03a 	cmpne	r6,r6,zero
    b6b0:	0005883a 	mov	r2,zero
    b6b4:	003f6406 	br	b448 <__alt_mem_onchip_memory2_0+0xf700b448>
    b6b8:	10009a1e 	bne	r2,zero,b924 <__subdf3+0x640>
    b6bc:	82400044 	addi	r9,r16,1
    b6c0:	4881ffcc 	andi	r2,r9,2047
    b6c4:	02800044 	movi	r10,1
    b6c8:	5080670e 	bge	r10,r2,b868 <__subdf3+0x584>
    b6cc:	0081ffc4 	movi	r2,2047
    b6d0:	4880af26 	beq	r9,r2,b990 <__subdf3+0x6ac>
    b6d4:	898d883a 	add	r6,r17,r6
    b6d8:	1945883a 	add	r2,r3,r5
    b6dc:	3447803a 	cmpltu	r3,r6,r17
    b6e0:	1887883a 	add	r3,r3,r2
    b6e4:	182297fa 	slli	r17,r3,31
    b6e8:	300cd07a 	srli	r6,r6,1
    b6ec:	1806d07a 	srli	r3,r3,1
    b6f0:	4821883a 	mov	r16,r9
    b6f4:	89a2b03a 	or	r17,r17,r6
    b6f8:	003f1b06 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b6fc:	0101ffc4 	movi	r4,2047
    b700:	813f441e 	bne	r16,r4,b414 <__alt_mem_onchip_memory2_0+0xf700b414>
    b704:	003f1806 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b708:	843ff844 	addi	r16,r16,-31
    b70c:	01400804 	movi	r5,32
    b710:	1408d83a 	srl	r4,r2,r16
    b714:	19405026 	beq	r3,r5,b858 <__subdf3+0x574>
    b718:	01401004 	movi	r5,64
    b71c:	28c7c83a 	sub	r3,r5,r3
    b720:	10c4983a 	sll	r2,r2,r3
    b724:	88a2b03a 	or	r17,r17,r2
    b728:	8822c03a 	cmpne	r17,r17,zero
    b72c:	2462b03a 	or	r17,r4,r17
    b730:	0007883a 	mov	r3,zero
    b734:	0021883a 	mov	r16,zero
    b738:	003f6d06 	br	b4f0 <__alt_mem_onchip_memory2_0+0xf700b4f0>
    b73c:	11fff804 	addi	r7,r2,-32
    b740:	01000804 	movi	r4,32
    b744:	29ced83a 	srl	r7,r5,r7
    b748:	11004526 	beq	r2,r4,b860 <__subdf3+0x57c>
    b74c:	01001004 	movi	r4,64
    b750:	2089c83a 	sub	r4,r4,r2
    b754:	2904983a 	sll	r2,r5,r4
    b758:	118cb03a 	or	r6,r2,r6
    b75c:	300cc03a 	cmpne	r6,r6,zero
    b760:	398cb03a 	or	r6,r7,r6
    b764:	0005883a 	mov	r2,zero
    b768:	003f3706 	br	b448 <__alt_mem_onchip_memory2_0+0xf700b448>
    b76c:	80002a26 	beq	r16,zero,b818 <__subdf3+0x534>
    b770:	0101ffc4 	movi	r4,2047
    b774:	49006626 	beq	r9,r4,b910 <__subdf3+0x62c>
    b778:	0085c83a 	sub	r2,zero,r2
    b77c:	18c02034 	orhi	r3,r3,128
    b780:	01000e04 	movi	r4,56
    b784:	20807e16 	blt	r4,r2,b980 <__subdf3+0x69c>
    b788:	010007c4 	movi	r4,31
    b78c:	2080e716 	blt	r4,r2,bb2c <__subdf3+0x848>
    b790:	01000804 	movi	r4,32
    b794:	2089c83a 	sub	r4,r4,r2
    b798:	1914983a 	sll	r10,r3,r4
    b79c:	8890d83a 	srl	r8,r17,r2
    b7a0:	8908983a 	sll	r4,r17,r4
    b7a4:	1884d83a 	srl	r2,r3,r2
    b7a8:	5222b03a 	or	r17,r10,r8
    b7ac:	2006c03a 	cmpne	r3,r4,zero
    b7b0:	88e2b03a 	or	r17,r17,r3
    b7b4:	3463c83a 	sub	r17,r6,r17
    b7b8:	2885c83a 	sub	r2,r5,r2
    b7bc:	344d803a 	cmpltu	r6,r6,r17
    b7c0:	1187c83a 	sub	r3,r2,r6
    b7c4:	4821883a 	mov	r16,r9
    b7c8:	3825883a 	mov	r18,r7
    b7cc:	003f2306 	br	b45c <__alt_mem_onchip_memory2_0+0xf700b45c>
    b7d0:	24d0b03a 	or	r8,r4,r19
    b7d4:	40001b1e 	bne	r8,zero,b844 <__subdf3+0x560>
    b7d8:	0005883a 	mov	r2,zero
    b7dc:	0009883a 	mov	r4,zero
    b7e0:	0021883a 	mov	r16,zero
    b7e4:	003f4906 	br	b50c <__alt_mem_onchip_memory2_0+0xf700b50c>
    b7e8:	010007c4 	movi	r4,31
    b7ec:	20803a16 	blt	r4,r2,b8d8 <__subdf3+0x5f4>
    b7f0:	01000804 	movi	r4,32
    b7f4:	2089c83a 	sub	r4,r4,r2
    b7f8:	2912983a 	sll	r9,r5,r4
    b7fc:	3090d83a 	srl	r8,r6,r2
    b800:	3108983a 	sll	r4,r6,r4
    b804:	2884d83a 	srl	r2,r5,r2
    b808:	4a12b03a 	or	r9,r9,r8
    b80c:	2008c03a 	cmpne	r4,r4,zero
    b810:	4912b03a 	or	r9,r9,r4
    b814:	003f4e06 	br	b550 <__alt_mem_onchip_memory2_0+0xf700b550>
    b818:	1c48b03a 	or	r4,r3,r17
    b81c:	20003c26 	beq	r4,zero,b910 <__subdf3+0x62c>
    b820:	0084303a 	nor	r2,zero,r2
    b824:	1000381e 	bne	r2,zero,b908 <__subdf3+0x624>
    b828:	3463c83a 	sub	r17,r6,r17
    b82c:	28c5c83a 	sub	r2,r5,r3
    b830:	344d803a 	cmpltu	r6,r6,r17
    b834:	1187c83a 	sub	r3,r2,r6
    b838:	4821883a 	mov	r16,r9
    b83c:	3825883a 	mov	r18,r7
    b840:	003f0606 	br	b45c <__alt_mem_onchip_memory2_0+0xf700b45c>
    b844:	2023883a 	mov	r17,r4
    b848:	003f0906 	br	b470 <__alt_mem_onchip_memory2_0+0xf700b470>
    b84c:	0101ffc4 	movi	r4,2047
    b850:	813f3a1e 	bne	r16,r4,b53c <__alt_mem_onchip_memory2_0+0xf700b53c>
    b854:	003ec406 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b858:	0005883a 	mov	r2,zero
    b85c:	003fb106 	br	b724 <__alt_mem_onchip_memory2_0+0xf700b724>
    b860:	0005883a 	mov	r2,zero
    b864:	003fbc06 	br	b758 <__alt_mem_onchip_memory2_0+0xf700b758>
    b868:	1c44b03a 	or	r2,r3,r17
    b86c:	80008e1e 	bne	r16,zero,baa8 <__subdf3+0x7c4>
    b870:	1000c826 	beq	r2,zero,bb94 <__subdf3+0x8b0>
    b874:	2984b03a 	or	r2,r5,r6
    b878:	103ebb26 	beq	r2,zero,b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b87c:	8989883a 	add	r4,r17,r6
    b880:	1945883a 	add	r2,r3,r5
    b884:	2447803a 	cmpltu	r3,r4,r17
    b888:	1887883a 	add	r3,r3,r2
    b88c:	1880202c 	andhi	r2,r3,128
    b890:	2023883a 	mov	r17,r4
    b894:	103f1626 	beq	r2,zero,b4f0 <__alt_mem_onchip_memory2_0+0xf700b4f0>
    b898:	00bfe034 	movhi	r2,65408
    b89c:	10bfffc4 	addi	r2,r2,-1
    b8a0:	5021883a 	mov	r16,r10
    b8a4:	1886703a 	and	r3,r3,r2
    b8a8:	003eaf06 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b8ac:	3825883a 	mov	r18,r7
    b8b0:	003f0f06 	br	b4f0 <__alt_mem_onchip_memory2_0+0xf700b4f0>
    b8b4:	1c44b03a 	or	r2,r3,r17
    b8b8:	8000251e 	bne	r16,zero,b950 <__subdf3+0x66c>
    b8bc:	1000661e 	bne	r2,zero,ba58 <__subdf3+0x774>
    b8c0:	2990b03a 	or	r8,r5,r6
    b8c4:	40009626 	beq	r8,zero,bb20 <__subdf3+0x83c>
    b8c8:	2807883a 	mov	r3,r5
    b8cc:	3023883a 	mov	r17,r6
    b8d0:	3825883a 	mov	r18,r7
    b8d4:	003ea406 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b8d8:	127ff804 	addi	r9,r2,-32
    b8dc:	01000804 	movi	r4,32
    b8e0:	2a52d83a 	srl	r9,r5,r9
    b8e4:	11008c26 	beq	r2,r4,bb18 <__subdf3+0x834>
    b8e8:	01001004 	movi	r4,64
    b8ec:	2085c83a 	sub	r2,r4,r2
    b8f0:	2884983a 	sll	r2,r5,r2
    b8f4:	118cb03a 	or	r6,r2,r6
    b8f8:	300cc03a 	cmpne	r6,r6,zero
    b8fc:	4992b03a 	or	r9,r9,r6
    b900:	0005883a 	mov	r2,zero
    b904:	003f1206 	br	b550 <__alt_mem_onchip_memory2_0+0xf700b550>
    b908:	0101ffc4 	movi	r4,2047
    b90c:	493f9c1e 	bne	r9,r4,b780 <__alt_mem_onchip_memory2_0+0xf700b780>
    b910:	2807883a 	mov	r3,r5
    b914:	3023883a 	mov	r17,r6
    b918:	4821883a 	mov	r16,r9
    b91c:	3825883a 	mov	r18,r7
    b920:	003e9106 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b924:	80001f1e 	bne	r16,zero,b9a4 <__subdf3+0x6c0>
    b928:	1c48b03a 	or	r4,r3,r17
    b92c:	20005a26 	beq	r4,zero,ba98 <__subdf3+0x7b4>
    b930:	0084303a 	nor	r2,zero,r2
    b934:	1000561e 	bne	r2,zero,ba90 <__subdf3+0x7ac>
    b938:	89a3883a 	add	r17,r17,r6
    b93c:	1945883a 	add	r2,r3,r5
    b940:	898d803a 	cmpltu	r6,r17,r6
    b944:	3087883a 	add	r3,r6,r2
    b948:	4821883a 	mov	r16,r9
    b94c:	003f0506 	br	b564 <__alt_mem_onchip_memory2_0+0xf700b564>
    b950:	10002b1e 	bne	r2,zero,ba00 <__subdf3+0x71c>
    b954:	2984b03a 	or	r2,r5,r6
    b958:	10008026 	beq	r2,zero,bb5c <__subdf3+0x878>
    b95c:	2807883a 	mov	r3,r5
    b960:	3023883a 	mov	r17,r6
    b964:	3825883a 	mov	r18,r7
    b968:	0401ffc4 	movi	r16,2047
    b96c:	003e7e06 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    b970:	3809883a 	mov	r4,r7
    b974:	0011883a 	mov	r8,zero
    b978:	0005883a 	mov	r2,zero
    b97c:	003ee306 	br	b50c <__alt_mem_onchip_memory2_0+0xf700b50c>
    b980:	1c62b03a 	or	r17,r3,r17
    b984:	8822c03a 	cmpne	r17,r17,zero
    b988:	0005883a 	mov	r2,zero
    b98c:	003f8906 	br	b7b4 <__alt_mem_onchip_memory2_0+0xf700b7b4>
    b990:	3809883a 	mov	r4,r7
    b994:	4821883a 	mov	r16,r9
    b998:	0011883a 	mov	r8,zero
    b99c:	0005883a 	mov	r2,zero
    b9a0:	003eda06 	br	b50c <__alt_mem_onchip_memory2_0+0xf700b50c>
    b9a4:	0101ffc4 	movi	r4,2047
    b9a8:	49003b26 	beq	r9,r4,ba98 <__subdf3+0x7b4>
    b9ac:	0085c83a 	sub	r2,zero,r2
    b9b0:	18c02034 	orhi	r3,r3,128
    b9b4:	01000e04 	movi	r4,56
    b9b8:	20806e16 	blt	r4,r2,bb74 <__subdf3+0x890>
    b9bc:	010007c4 	movi	r4,31
    b9c0:	20807716 	blt	r4,r2,bba0 <__subdf3+0x8bc>
    b9c4:	01000804 	movi	r4,32
    b9c8:	2089c83a 	sub	r4,r4,r2
    b9cc:	1914983a 	sll	r10,r3,r4
    b9d0:	8890d83a 	srl	r8,r17,r2
    b9d4:	8908983a 	sll	r4,r17,r4
    b9d8:	1884d83a 	srl	r2,r3,r2
    b9dc:	5222b03a 	or	r17,r10,r8
    b9e0:	2006c03a 	cmpne	r3,r4,zero
    b9e4:	88e2b03a 	or	r17,r17,r3
    b9e8:	89a3883a 	add	r17,r17,r6
    b9ec:	1145883a 	add	r2,r2,r5
    b9f0:	898d803a 	cmpltu	r6,r17,r6
    b9f4:	3087883a 	add	r3,r6,r2
    b9f8:	4821883a 	mov	r16,r9
    b9fc:	003ed906 	br	b564 <__alt_mem_onchip_memory2_0+0xf700b564>
    ba00:	2984b03a 	or	r2,r5,r6
    ba04:	10004226 	beq	r2,zero,bb10 <__subdf3+0x82c>
    ba08:	1808d0fa 	srli	r4,r3,3
    ba0c:	8822d0fa 	srli	r17,r17,3
    ba10:	1806977a 	slli	r3,r3,29
    ba14:	2080022c 	andhi	r2,r4,8
    ba18:	1c62b03a 	or	r17,r3,r17
    ba1c:	10000826 	beq	r2,zero,ba40 <__subdf3+0x75c>
    ba20:	2812d0fa 	srli	r9,r5,3
    ba24:	4880022c 	andhi	r2,r9,8
    ba28:	1000051e 	bne	r2,zero,ba40 <__subdf3+0x75c>
    ba2c:	300cd0fa 	srli	r6,r6,3
    ba30:	2804977a 	slli	r2,r5,29
    ba34:	4809883a 	mov	r4,r9
    ba38:	3825883a 	mov	r18,r7
    ba3c:	11a2b03a 	or	r17,r2,r6
    ba40:	8806d77a 	srli	r3,r17,29
    ba44:	200890fa 	slli	r4,r4,3
    ba48:	882290fa 	slli	r17,r17,3
    ba4c:	0401ffc4 	movi	r16,2047
    ba50:	1906b03a 	or	r3,r3,r4
    ba54:	003e4406 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    ba58:	2984b03a 	or	r2,r5,r6
    ba5c:	103e4226 	beq	r2,zero,b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    ba60:	8989c83a 	sub	r4,r17,r6
    ba64:	8911803a 	cmpltu	r8,r17,r4
    ba68:	1945c83a 	sub	r2,r3,r5
    ba6c:	1205c83a 	sub	r2,r2,r8
    ba70:	1200202c 	andhi	r8,r2,128
    ba74:	403e9a26 	beq	r8,zero,b4e0 <__alt_mem_onchip_memory2_0+0xf700b4e0>
    ba78:	3463c83a 	sub	r17,r6,r17
    ba7c:	28c5c83a 	sub	r2,r5,r3
    ba80:	344d803a 	cmpltu	r6,r6,r17
    ba84:	1187c83a 	sub	r3,r2,r6
    ba88:	3825883a 	mov	r18,r7
    ba8c:	003e3606 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    ba90:	0101ffc4 	movi	r4,2047
    ba94:	493fc71e 	bne	r9,r4,b9b4 <__alt_mem_onchip_memory2_0+0xf700b9b4>
    ba98:	2807883a 	mov	r3,r5
    ba9c:	3023883a 	mov	r17,r6
    baa0:	4821883a 	mov	r16,r9
    baa4:	003e3006 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    baa8:	10003626 	beq	r2,zero,bb84 <__subdf3+0x8a0>
    baac:	2984b03a 	or	r2,r5,r6
    bab0:	10001726 	beq	r2,zero,bb10 <__subdf3+0x82c>
    bab4:	1808d0fa 	srli	r4,r3,3
    bab8:	8822d0fa 	srli	r17,r17,3
    babc:	1806977a 	slli	r3,r3,29
    bac0:	2080022c 	andhi	r2,r4,8
    bac4:	1c62b03a 	or	r17,r3,r17
    bac8:	10000726 	beq	r2,zero,bae8 <__subdf3+0x804>
    bacc:	2812d0fa 	srli	r9,r5,3
    bad0:	4880022c 	andhi	r2,r9,8
    bad4:	1000041e 	bne	r2,zero,bae8 <__subdf3+0x804>
    bad8:	300cd0fa 	srli	r6,r6,3
    badc:	2804977a 	slli	r2,r5,29
    bae0:	4809883a 	mov	r4,r9
    bae4:	11a2b03a 	or	r17,r2,r6
    bae8:	8806d77a 	srli	r3,r17,29
    baec:	200890fa 	slli	r4,r4,3
    baf0:	882290fa 	slli	r17,r17,3
    baf4:	3825883a 	mov	r18,r7
    baf8:	1906b03a 	or	r3,r3,r4
    bafc:	0401ffc4 	movi	r16,2047
    bb00:	003e1906 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    bb04:	000b883a 	mov	r5,zero
    bb08:	0005883a 	mov	r2,zero
    bb0c:	003e2e06 	br	b3c8 <__alt_mem_onchip_memory2_0+0xf700b3c8>
    bb10:	0401ffc4 	movi	r16,2047
    bb14:	003e1406 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    bb18:	0005883a 	mov	r2,zero
    bb1c:	003f7506 	br	b8f4 <__alt_mem_onchip_memory2_0+0xf700b8f4>
    bb20:	0005883a 	mov	r2,zero
    bb24:	0009883a 	mov	r4,zero
    bb28:	003e7806 	br	b50c <__alt_mem_onchip_memory2_0+0xf700b50c>
    bb2c:	123ff804 	addi	r8,r2,-32
    bb30:	01000804 	movi	r4,32
    bb34:	1a10d83a 	srl	r8,r3,r8
    bb38:	11002526 	beq	r2,r4,bbd0 <__subdf3+0x8ec>
    bb3c:	01001004 	movi	r4,64
    bb40:	2085c83a 	sub	r2,r4,r2
    bb44:	1884983a 	sll	r2,r3,r2
    bb48:	1444b03a 	or	r2,r2,r17
    bb4c:	1004c03a 	cmpne	r2,r2,zero
    bb50:	40a2b03a 	or	r17,r8,r2
    bb54:	0005883a 	mov	r2,zero
    bb58:	003f1606 	br	b7b4 <__alt_mem_onchip_memory2_0+0xf700b7b4>
    bb5c:	02000434 	movhi	r8,16
    bb60:	0009883a 	mov	r4,zero
    bb64:	423fffc4 	addi	r8,r8,-1
    bb68:	00bfffc4 	movi	r2,-1
    bb6c:	0401ffc4 	movi	r16,2047
    bb70:	003e6606 	br	b50c <__alt_mem_onchip_memory2_0+0xf700b50c>
    bb74:	1c62b03a 	or	r17,r3,r17
    bb78:	8822c03a 	cmpne	r17,r17,zero
    bb7c:	0005883a 	mov	r2,zero
    bb80:	003f9906 	br	b9e8 <__alt_mem_onchip_memory2_0+0xf700b9e8>
    bb84:	2807883a 	mov	r3,r5
    bb88:	3023883a 	mov	r17,r6
    bb8c:	0401ffc4 	movi	r16,2047
    bb90:	003df506 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    bb94:	2807883a 	mov	r3,r5
    bb98:	3023883a 	mov	r17,r6
    bb9c:	003df206 	br	b368 <__alt_mem_onchip_memory2_0+0xf700b368>
    bba0:	123ff804 	addi	r8,r2,-32
    bba4:	01000804 	movi	r4,32
    bba8:	1a10d83a 	srl	r8,r3,r8
    bbac:	11000a26 	beq	r2,r4,bbd8 <__subdf3+0x8f4>
    bbb0:	01001004 	movi	r4,64
    bbb4:	2085c83a 	sub	r2,r4,r2
    bbb8:	1884983a 	sll	r2,r3,r2
    bbbc:	1444b03a 	or	r2,r2,r17
    bbc0:	1004c03a 	cmpne	r2,r2,zero
    bbc4:	40a2b03a 	or	r17,r8,r2
    bbc8:	0005883a 	mov	r2,zero
    bbcc:	003f8606 	br	b9e8 <__alt_mem_onchip_memory2_0+0xf700b9e8>
    bbd0:	0005883a 	mov	r2,zero
    bbd4:	003fdc06 	br	bb48 <__alt_mem_onchip_memory2_0+0xf700bb48>
    bbd8:	0005883a 	mov	r2,zero
    bbdc:	003ff706 	br	bbbc <__alt_mem_onchip_memory2_0+0xf700bbbc>

0000bbe0 <__fixdfsi>:
    bbe0:	280cd53a 	srli	r6,r5,20
    bbe4:	00c00434 	movhi	r3,16
    bbe8:	18ffffc4 	addi	r3,r3,-1
    bbec:	3181ffcc 	andi	r6,r6,2047
    bbf0:	01c0ff84 	movi	r7,1022
    bbf4:	28c6703a 	and	r3,r5,r3
    bbf8:	280ad7fa 	srli	r5,r5,31
    bbfc:	3980120e 	bge	r7,r6,bc48 <__fixdfsi+0x68>
    bc00:	00810744 	movi	r2,1053
    bc04:	11800c16 	blt	r2,r6,bc38 <__fixdfsi+0x58>
    bc08:	00810cc4 	movi	r2,1075
    bc0c:	1185c83a 	sub	r2,r2,r6
    bc10:	01c007c4 	movi	r7,31
    bc14:	18c00434 	orhi	r3,r3,16
    bc18:	38800d16 	blt	r7,r2,bc50 <__fixdfsi+0x70>
    bc1c:	31befb44 	addi	r6,r6,-1043
    bc20:	2084d83a 	srl	r2,r4,r2
    bc24:	1986983a 	sll	r3,r3,r6
    bc28:	1884b03a 	or	r2,r3,r2
    bc2c:	28000726 	beq	r5,zero,bc4c <__fixdfsi+0x6c>
    bc30:	0085c83a 	sub	r2,zero,r2
    bc34:	f800283a 	ret
    bc38:	00a00034 	movhi	r2,32768
    bc3c:	10bfffc4 	addi	r2,r2,-1
    bc40:	2885883a 	add	r2,r5,r2
    bc44:	f800283a 	ret
    bc48:	0005883a 	mov	r2,zero
    bc4c:	f800283a 	ret
    bc50:	008104c4 	movi	r2,1043
    bc54:	1185c83a 	sub	r2,r2,r6
    bc58:	1884d83a 	srl	r2,r3,r2
    bc5c:	003ff306 	br	bc2c <__alt_mem_onchip_memory2_0+0xf700bc2c>

0000bc60 <__floatsidf>:
    bc60:	defffd04 	addi	sp,sp,-12
    bc64:	dfc00215 	stw	ra,8(sp)
    bc68:	dc400115 	stw	r17,4(sp)
    bc6c:	dc000015 	stw	r16,0(sp)
    bc70:	20002b26 	beq	r4,zero,bd20 <__floatsidf+0xc0>
    bc74:	2023883a 	mov	r17,r4
    bc78:	2020d7fa 	srli	r16,r4,31
    bc7c:	20002d16 	blt	r4,zero,bd34 <__floatsidf+0xd4>
    bc80:	8809883a 	mov	r4,r17
    bc84:	000bde40 	call	bde4 <__clzsi2>
    bc88:	01410784 	movi	r5,1054
    bc8c:	288bc83a 	sub	r5,r5,r2
    bc90:	01010cc4 	movi	r4,1075
    bc94:	2149c83a 	sub	r4,r4,r5
    bc98:	00c007c4 	movi	r3,31
    bc9c:	1900160e 	bge	r3,r4,bcf8 <__floatsidf+0x98>
    bca0:	00c104c4 	movi	r3,1043
    bca4:	1947c83a 	sub	r3,r3,r5
    bca8:	88c6983a 	sll	r3,r17,r3
    bcac:	00800434 	movhi	r2,16
    bcb0:	10bfffc4 	addi	r2,r2,-1
    bcb4:	1886703a 	and	r3,r3,r2
    bcb8:	2941ffcc 	andi	r5,r5,2047
    bcbc:	800d883a 	mov	r6,r16
    bcc0:	0005883a 	mov	r2,zero
    bcc4:	280a953a 	slli	r5,r5,20
    bcc8:	31803fcc 	andi	r6,r6,255
    bccc:	01000434 	movhi	r4,16
    bcd0:	300c97fa 	slli	r6,r6,31
    bcd4:	213fffc4 	addi	r4,r4,-1
    bcd8:	1906703a 	and	r3,r3,r4
    bcdc:	1946b03a 	or	r3,r3,r5
    bce0:	1986b03a 	or	r3,r3,r6
    bce4:	dfc00217 	ldw	ra,8(sp)
    bce8:	dc400117 	ldw	r17,4(sp)
    bcec:	dc000017 	ldw	r16,0(sp)
    bcf0:	dec00304 	addi	sp,sp,12
    bcf4:	f800283a 	ret
    bcf8:	00c002c4 	movi	r3,11
    bcfc:	1887c83a 	sub	r3,r3,r2
    bd00:	88c6d83a 	srl	r3,r17,r3
    bd04:	8904983a 	sll	r2,r17,r4
    bd08:	01000434 	movhi	r4,16
    bd0c:	213fffc4 	addi	r4,r4,-1
    bd10:	2941ffcc 	andi	r5,r5,2047
    bd14:	1906703a 	and	r3,r3,r4
    bd18:	800d883a 	mov	r6,r16
    bd1c:	003fe906 	br	bcc4 <__alt_mem_onchip_memory2_0+0xf700bcc4>
    bd20:	000d883a 	mov	r6,zero
    bd24:	000b883a 	mov	r5,zero
    bd28:	0007883a 	mov	r3,zero
    bd2c:	0005883a 	mov	r2,zero
    bd30:	003fe406 	br	bcc4 <__alt_mem_onchip_memory2_0+0xf700bcc4>
    bd34:	0123c83a 	sub	r17,zero,r4
    bd38:	003fd106 	br	bc80 <__alt_mem_onchip_memory2_0+0xf700bc80>

0000bd3c <__floatunsidf>:
    bd3c:	defffe04 	addi	sp,sp,-8
    bd40:	dc000015 	stw	r16,0(sp)
    bd44:	dfc00115 	stw	ra,4(sp)
    bd48:	2021883a 	mov	r16,r4
    bd4c:	20002226 	beq	r4,zero,bdd8 <__floatunsidf+0x9c>
    bd50:	000bde40 	call	bde4 <__clzsi2>
    bd54:	01010784 	movi	r4,1054
    bd58:	2089c83a 	sub	r4,r4,r2
    bd5c:	01810cc4 	movi	r6,1075
    bd60:	310dc83a 	sub	r6,r6,r4
    bd64:	00c007c4 	movi	r3,31
    bd68:	1980120e 	bge	r3,r6,bdb4 <__floatunsidf+0x78>
    bd6c:	00c104c4 	movi	r3,1043
    bd70:	1907c83a 	sub	r3,r3,r4
    bd74:	80ca983a 	sll	r5,r16,r3
    bd78:	00800434 	movhi	r2,16
    bd7c:	10bfffc4 	addi	r2,r2,-1
    bd80:	2101ffcc 	andi	r4,r4,2047
    bd84:	0021883a 	mov	r16,zero
    bd88:	288a703a 	and	r5,r5,r2
    bd8c:	2008953a 	slli	r4,r4,20
    bd90:	00c00434 	movhi	r3,16
    bd94:	18ffffc4 	addi	r3,r3,-1
    bd98:	28c6703a 	and	r3,r5,r3
    bd9c:	8005883a 	mov	r2,r16
    bda0:	1906b03a 	or	r3,r3,r4
    bda4:	dfc00117 	ldw	ra,4(sp)
    bda8:	dc000017 	ldw	r16,0(sp)
    bdac:	dec00204 	addi	sp,sp,8
    bdb0:	f800283a 	ret
    bdb4:	00c002c4 	movi	r3,11
    bdb8:	188bc83a 	sub	r5,r3,r2
    bdbc:	814ad83a 	srl	r5,r16,r5
    bdc0:	00c00434 	movhi	r3,16
    bdc4:	18ffffc4 	addi	r3,r3,-1
    bdc8:	81a0983a 	sll	r16,r16,r6
    bdcc:	2101ffcc 	andi	r4,r4,2047
    bdd0:	28ca703a 	and	r5,r5,r3
    bdd4:	003fed06 	br	bd8c <__alt_mem_onchip_memory2_0+0xf700bd8c>
    bdd8:	0009883a 	mov	r4,zero
    bddc:	000b883a 	mov	r5,zero
    bde0:	003fea06 	br	bd8c <__alt_mem_onchip_memory2_0+0xf700bd8c>

0000bde4 <__clzsi2>:
    bde4:	00bfffd4 	movui	r2,65535
    bde8:	11000536 	bltu	r2,r4,be00 <__clzsi2+0x1c>
    bdec:	00803fc4 	movi	r2,255
    bdf0:	11000f36 	bltu	r2,r4,be30 <__clzsi2+0x4c>
    bdf4:	00800804 	movi	r2,32
    bdf8:	0007883a 	mov	r3,zero
    bdfc:	00000506 	br	be14 <__clzsi2+0x30>
    be00:	00804034 	movhi	r2,256
    be04:	10bfffc4 	addi	r2,r2,-1
    be08:	11000c2e 	bgeu	r2,r4,be3c <__clzsi2+0x58>
    be0c:	00800204 	movi	r2,8
    be10:	00c00604 	movi	r3,24
    be14:	20c8d83a 	srl	r4,r4,r3
    be18:	00c00074 	movhi	r3,1
    be1c:	18f8c504 	addi	r3,r3,-7404
    be20:	1909883a 	add	r4,r3,r4
    be24:	20c00003 	ldbu	r3,0(r4)
    be28:	10c5c83a 	sub	r2,r2,r3
    be2c:	f800283a 	ret
    be30:	00800604 	movi	r2,24
    be34:	00c00204 	movi	r3,8
    be38:	003ff606 	br	be14 <__alt_mem_onchip_memory2_0+0xf700be14>
    be3c:	00800404 	movi	r2,16
    be40:	1007883a 	mov	r3,r2
    be44:	003ff306 	br	be14 <__alt_mem_onchip_memory2_0+0xf700be14>

0000be48 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    be48:	defffc04 	addi	sp,sp,-16
    be4c:	df000315 	stw	fp,12(sp)
    be50:	df000304 	addi	fp,sp,12
    be54:	e13ffd15 	stw	r4,-12(fp)
    be58:	e17ffe15 	stw	r5,-8(fp)
    be5c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    be60:	e0fffe17 	ldw	r3,-8(fp)
    be64:	e0bffd17 	ldw	r2,-12(fp)
    be68:	18800c26 	beq	r3,r2,be9c <alt_load_section+0x54>
  {
    while( to != end )
    be6c:	00000806 	br	be90 <alt_load_section+0x48>
    {
      *to++ = *from++;
    be70:	e0bffe17 	ldw	r2,-8(fp)
    be74:	10c00104 	addi	r3,r2,4
    be78:	e0fffe15 	stw	r3,-8(fp)
    be7c:	e0fffd17 	ldw	r3,-12(fp)
    be80:	19000104 	addi	r4,r3,4
    be84:	e13ffd15 	stw	r4,-12(fp)
    be88:	18c00017 	ldw	r3,0(r3)
    be8c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    be90:	e0fffe17 	ldw	r3,-8(fp)
    be94:	e0bfff17 	ldw	r2,-4(fp)
    be98:	18bff51e 	bne	r3,r2,be70 <__alt_mem_onchip_memory2_0+0xf700be70>
    {
      *to++ = *from++;
    }
  }
}
    be9c:	0001883a 	nop
    bea0:	e037883a 	mov	sp,fp
    bea4:	df000017 	ldw	fp,0(sp)
    bea8:	dec00104 	addi	sp,sp,4
    beac:	f800283a 	ret

0000beb0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    beb0:	defffe04 	addi	sp,sp,-8
    beb4:	dfc00115 	stw	ra,4(sp)
    beb8:	df000015 	stw	fp,0(sp)
    bebc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    bec0:	01800074 	movhi	r6,1
    bec4:	3180e304 	addi	r6,r6,908
    bec8:	01400074 	movhi	r5,1
    becc:	29791204 	addi	r5,r5,-7096
    bed0:	01000074 	movhi	r4,1
    bed4:	2100e304 	addi	r4,r4,908
    bed8:	000be480 	call	be48 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    bedc:	01800034 	movhi	r6,0
    bee0:	31808c04 	addi	r6,r6,560
    bee4:	01400034 	movhi	r5,0
    bee8:	29400804 	addi	r5,r5,32
    beec:	01000034 	movhi	r4,0
    bef0:	21000804 	addi	r4,r4,32
    bef4:	000be480 	call	be48 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    bef8:	01800074 	movhi	r6,1
    befc:	31b91204 	addi	r6,r6,-7096
    bf00:	01400074 	movhi	r5,1
    bf04:	29783e04 	addi	r5,r5,-7944
    bf08:	01000074 	movhi	r4,1
    bf0c:	21383e04 	addi	r4,r4,-7944
    bf10:	000be480 	call	be48 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    bf14:	000cf900 	call	cf90 <alt_dcache_flush_all>
  alt_icache_flush_all();
    bf18:	000d17c0 	call	d17c <alt_icache_flush_all>
}
    bf1c:	0001883a 	nop
    bf20:	e037883a 	mov	sp,fp
    bf24:	dfc00117 	ldw	ra,4(sp)
    bf28:	df000017 	ldw	fp,0(sp)
    bf2c:	dec00204 	addi	sp,sp,8
    bf30:	f800283a 	ret

0000bf34 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    bf34:	defffd04 	addi	sp,sp,-12
    bf38:	dfc00215 	stw	ra,8(sp)
    bf3c:	df000115 	stw	fp,4(sp)
    bf40:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    bf44:	0009883a 	mov	r4,zero
    bf48:	000c10c0 	call	c10c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    bf4c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    bf50:	000c1440 	call	c144 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    bf54:	01800074 	movhi	r6,1
    bf58:	31b90504 	addi	r6,r6,-7148
    bf5c:	01400074 	movhi	r5,1
    bf60:	29790504 	addi	r5,r5,-7148
    bf64:	01000074 	movhi	r4,1
    bf68:	21390504 	addi	r4,r4,-7148
    bf6c:	000d5200 	call	d520 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    bf70:	000d0bc0 	call	d0bc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    bf74:	01000074 	movhi	r4,1
    bf78:	21344704 	addi	r4,r4,-12004
    bf7c:	000dd640 	call	dd64 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    bf80:	d0a7ea17 	ldw	r2,-24664(gp)
    bf84:	d0e7eb17 	ldw	r3,-24660(gp)
    bf88:	d127ec17 	ldw	r4,-24656(gp)
    bf8c:	200d883a 	mov	r6,r4
    bf90:	180b883a 	mov	r5,r3
    bf94:	1009883a 	mov	r4,r2
    bf98:	000026c0 	call	26c <main>
    bf9c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    bfa0:	01000044 	movi	r4,1
    bfa4:	000ceb80 	call	ceb8 <close>
  exit (result);
    bfa8:	e13fff17 	ldw	r4,-4(fp)
    bfac:	000dd780 	call	dd78 <exit>

0000bfb0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    bfb0:	defffe04 	addi	sp,sp,-8
    bfb4:	df000115 	stw	fp,4(sp)
    bfb8:	df000104 	addi	fp,sp,4
    bfbc:	e13fff15 	stw	r4,-4(fp)
}
    bfc0:	0001883a 	nop
    bfc4:	e037883a 	mov	sp,fp
    bfc8:	df000017 	ldw	fp,0(sp)
    bfcc:	dec00104 	addi	sp,sp,4
    bfd0:	f800283a 	ret

0000bfd4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    bfd4:	defffe04 	addi	sp,sp,-8
    bfd8:	df000115 	stw	fp,4(sp)
    bfdc:	df000104 	addi	fp,sp,4
    bfe0:	e13fff15 	stw	r4,-4(fp)
}
    bfe4:	0001883a 	nop
    bfe8:	e037883a 	mov	sp,fp
    bfec:	df000017 	ldw	fp,0(sp)
    bff0:	dec00104 	addi	sp,sp,4
    bff4:	f800283a 	ret

0000bff8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    bff8:	defff904 	addi	sp,sp,-28
    bffc:	df000615 	stw	fp,24(sp)
    c000:	df000604 	addi	fp,sp,24
    c004:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    c008:	0005303a 	rdctl	r2,status
    c00c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    c010:	e0fffe17 	ldw	r3,-8(fp)
    c014:	00bfff84 	movi	r2,-2
    c018:	1884703a 	and	r2,r3,r2
    c01c:	1001703a 	wrctl	status,r2
  
  return context;
    c020:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    c024:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    c028:	d0a00817 	ldw	r2,-32736(gp)
    c02c:	10c000c4 	addi	r3,r2,3
    c030:	00bfff04 	movi	r2,-4
    c034:	1884703a 	and	r2,r3,r2
    c038:	d0a00815 	stw	r2,-32736(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    c03c:	d0e00817 	ldw	r3,-32736(gp)
    c040:	e0bfff17 	ldw	r2,-4(fp)
    c044:	1887883a 	add	r3,r3,r2
    c048:	00820034 	movhi	r2,2048
    c04c:	10800004 	addi	r2,r2,0
    c050:	10c0062e 	bgeu	r2,r3,c06c <sbrk+0x74>
    c054:	e0bffb17 	ldw	r2,-20(fp)
    c058:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    c05c:	e0bffa17 	ldw	r2,-24(fp)
    c060:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    c064:	00bfffc4 	movi	r2,-1
    c068:	00000b06 	br	c098 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    c06c:	d0a00817 	ldw	r2,-32736(gp)
    c070:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    c074:	d0e00817 	ldw	r3,-32736(gp)
    c078:	e0bfff17 	ldw	r2,-4(fp)
    c07c:	1885883a 	add	r2,r3,r2
    c080:	d0a00815 	stw	r2,-32736(gp)
    c084:	e0bffb17 	ldw	r2,-20(fp)
    c088:	e0bffc15 	stw	r2,-16(fp)
    c08c:	e0bffc17 	ldw	r2,-16(fp)
    c090:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    c094:	e0bffd17 	ldw	r2,-12(fp)
} 
    c098:	e037883a 	mov	sp,fp
    c09c:	df000017 	ldw	fp,0(sp)
    c0a0:	dec00104 	addi	sp,sp,4
    c0a4:	f800283a 	ret

0000c0a8 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
    c0a8:	defffd04 	addi	sp,sp,-12
    c0ac:	dfc00215 	stw	ra,8(sp)
    c0b0:	df000115 	stw	fp,4(sp)
    c0b4:	df000104 	addi	fp,sp,4
    c0b8:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
    c0bc:	e13fff17 	ldw	r4,-4(fp)
    c0c0:	000cd240 	call	cd24 <alt_busy_sleep>
}
    c0c4:	e037883a 	mov	sp,fp
    c0c8:	dfc00117 	ldw	ra,4(sp)
    c0cc:	df000017 	ldw	fp,0(sp)
    c0d0:	dec00204 	addi	sp,sp,8
    c0d4:	f800283a 	ret

0000c0d8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    c0d8:	defffd04 	addi	sp,sp,-12
    c0dc:	dfc00215 	stw	ra,8(sp)
    c0e0:	df000115 	stw	fp,4(sp)
    c0e4:	df000104 	addi	fp,sp,4
    c0e8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    c0ec:	d1600b04 	addi	r5,gp,-32724
    c0f0:	e13fff17 	ldw	r4,-4(fp)
    c0f4:	000d0180 	call	d018 <alt_dev_llist_insert>
}
    c0f8:	e037883a 	mov	sp,fp
    c0fc:	dfc00117 	ldw	ra,4(sp)
    c100:	df000017 	ldw	fp,0(sp)
    c104:	dec00204 	addi	sp,sp,8
    c108:	f800283a 	ret

0000c10c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    c10c:	defffd04 	addi	sp,sp,-12
    c110:	dfc00215 	stw	ra,8(sp)
    c114:	df000115 	stw	fp,4(sp)
    c118:	df000104 	addi	fp,sp,4
    c11c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    c120:	000da480 	call	da48 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    c124:	00800044 	movi	r2,1
    c128:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    c12c:	0001883a 	nop
    c130:	e037883a 	mov	sp,fp
    c134:	dfc00117 	ldw	ra,4(sp)
    c138:	df000017 	ldw	fp,0(sp)
    c13c:	dec00204 	addi	sp,sp,8
    c140:	f800283a 	ret

0000c144 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    c144:	defffe04 	addi	sp,sp,-8
    c148:	dfc00115 	stw	ra,4(sp)
    c14c:	df000015 	stw	fp,0(sp)
    c150:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    c154:	01800144 	movi	r6,5
    c158:	000b883a 	mov	r5,zero
    c15c:	01000074 	movhi	r4,1
    c160:	213c5904 	addi	r4,r4,-3740
    c164:	000c2f40 	call	c2f4 <altera_avalon_jtag_uart_init>
    c168:	01000074 	movhi	r4,1
    c16c:	213c4f04 	addi	r4,r4,-3780
    c170:	000c0d80 	call	c0d8 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
    c174:	0001883a 	nop
}
    c178:	0001883a 	nop
    c17c:	e037883a 	mov	sp,fp
    c180:	dfc00117 	ldw	ra,4(sp)
    c184:	df000017 	ldw	fp,0(sp)
    c188:	dec00204 	addi	sp,sp,8
    c18c:	f800283a 	ret

0000c190 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    c190:	defffa04 	addi	sp,sp,-24
    c194:	dfc00515 	stw	ra,20(sp)
    c198:	df000415 	stw	fp,16(sp)
    c19c:	df000404 	addi	fp,sp,16
    c1a0:	e13ffd15 	stw	r4,-12(fp)
    c1a4:	e17ffe15 	stw	r5,-8(fp)
    c1a8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    c1ac:	e0bffd17 	ldw	r2,-12(fp)
    c1b0:	10800017 	ldw	r2,0(r2)
    c1b4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    c1b8:	e0bffc17 	ldw	r2,-16(fp)
    c1bc:	10c00a04 	addi	r3,r2,40
    c1c0:	e0bffd17 	ldw	r2,-12(fp)
    c1c4:	10800217 	ldw	r2,8(r2)
    c1c8:	100f883a 	mov	r7,r2
    c1cc:	e1bfff17 	ldw	r6,-4(fp)
    c1d0:	e17ffe17 	ldw	r5,-8(fp)
    c1d4:	1809883a 	mov	r4,r3
    c1d8:	000c7b80 	call	c7b8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    c1dc:	e037883a 	mov	sp,fp
    c1e0:	dfc00117 	ldw	ra,4(sp)
    c1e4:	df000017 	ldw	fp,0(sp)
    c1e8:	dec00204 	addi	sp,sp,8
    c1ec:	f800283a 	ret

0000c1f0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    c1f0:	defffa04 	addi	sp,sp,-24
    c1f4:	dfc00515 	stw	ra,20(sp)
    c1f8:	df000415 	stw	fp,16(sp)
    c1fc:	df000404 	addi	fp,sp,16
    c200:	e13ffd15 	stw	r4,-12(fp)
    c204:	e17ffe15 	stw	r5,-8(fp)
    c208:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    c20c:	e0bffd17 	ldw	r2,-12(fp)
    c210:	10800017 	ldw	r2,0(r2)
    c214:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    c218:	e0bffc17 	ldw	r2,-16(fp)
    c21c:	10c00a04 	addi	r3,r2,40
    c220:	e0bffd17 	ldw	r2,-12(fp)
    c224:	10800217 	ldw	r2,8(r2)
    c228:	100f883a 	mov	r7,r2
    c22c:	e1bfff17 	ldw	r6,-4(fp)
    c230:	e17ffe17 	ldw	r5,-8(fp)
    c234:	1809883a 	mov	r4,r3
    c238:	000c9d40 	call	c9d4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    c23c:	e037883a 	mov	sp,fp
    c240:	dfc00117 	ldw	ra,4(sp)
    c244:	df000017 	ldw	fp,0(sp)
    c248:	dec00204 	addi	sp,sp,8
    c24c:	f800283a 	ret

0000c250 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    c250:	defffc04 	addi	sp,sp,-16
    c254:	dfc00315 	stw	ra,12(sp)
    c258:	df000215 	stw	fp,8(sp)
    c25c:	df000204 	addi	fp,sp,8
    c260:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    c264:	e0bfff17 	ldw	r2,-4(fp)
    c268:	10800017 	ldw	r2,0(r2)
    c26c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    c270:	e0bffe17 	ldw	r2,-8(fp)
    c274:	10c00a04 	addi	r3,r2,40
    c278:	e0bfff17 	ldw	r2,-4(fp)
    c27c:	10800217 	ldw	r2,8(r2)
    c280:	100b883a 	mov	r5,r2
    c284:	1809883a 	mov	r4,r3
    c288:	000c6600 	call	c660 <altera_avalon_jtag_uart_close>
}
    c28c:	e037883a 	mov	sp,fp
    c290:	dfc00117 	ldw	ra,4(sp)
    c294:	df000017 	ldw	fp,0(sp)
    c298:	dec00204 	addi	sp,sp,8
    c29c:	f800283a 	ret

0000c2a0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    c2a0:	defffa04 	addi	sp,sp,-24
    c2a4:	dfc00515 	stw	ra,20(sp)
    c2a8:	df000415 	stw	fp,16(sp)
    c2ac:	df000404 	addi	fp,sp,16
    c2b0:	e13ffd15 	stw	r4,-12(fp)
    c2b4:	e17ffe15 	stw	r5,-8(fp)
    c2b8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    c2bc:	e0bffd17 	ldw	r2,-12(fp)
    c2c0:	10800017 	ldw	r2,0(r2)
    c2c4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    c2c8:	e0bffc17 	ldw	r2,-16(fp)
    c2cc:	10800a04 	addi	r2,r2,40
    c2d0:	e1bfff17 	ldw	r6,-4(fp)
    c2d4:	e17ffe17 	ldw	r5,-8(fp)
    c2d8:	1009883a 	mov	r4,r2
    c2dc:	000c6c80 	call	c6c8 <altera_avalon_jtag_uart_ioctl>
}
    c2e0:	e037883a 	mov	sp,fp
    c2e4:	dfc00117 	ldw	ra,4(sp)
    c2e8:	df000017 	ldw	fp,0(sp)
    c2ec:	dec00204 	addi	sp,sp,8
    c2f0:	f800283a 	ret

0000c2f4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    c2f4:	defffa04 	addi	sp,sp,-24
    c2f8:	dfc00515 	stw	ra,20(sp)
    c2fc:	df000415 	stw	fp,16(sp)
    c300:	df000404 	addi	fp,sp,16
    c304:	e13ffd15 	stw	r4,-12(fp)
    c308:	e17ffe15 	stw	r5,-8(fp)
    c30c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    c310:	e0bffd17 	ldw	r2,-12(fp)
    c314:	00c00044 	movi	r3,1
    c318:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    c31c:	e0bffd17 	ldw	r2,-12(fp)
    c320:	10800017 	ldw	r2,0(r2)
    c324:	10800104 	addi	r2,r2,4
    c328:	1007883a 	mov	r3,r2
    c32c:	e0bffd17 	ldw	r2,-12(fp)
    c330:	10800817 	ldw	r2,32(r2)
    c334:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    c338:	e0bffe17 	ldw	r2,-8(fp)
    c33c:	e0ffff17 	ldw	r3,-4(fp)
    c340:	d8000015 	stw	zero,0(sp)
    c344:	e1fffd17 	ldw	r7,-12(fp)
    c348:	01800074 	movhi	r6,1
    c34c:	31b0ed04 	addi	r6,r6,-15436
    c350:	180b883a 	mov	r5,r3
    c354:	1009883a 	mov	r4,r2
    c358:	000d19c0 	call	d19c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    c35c:	e0bffd17 	ldw	r2,-12(fp)
    c360:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    c364:	e0bffd17 	ldw	r2,-12(fp)
    c368:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    c36c:	d0e7ee17 	ldw	r3,-24648(gp)
    c370:	e1fffd17 	ldw	r7,-12(fp)
    c374:	01800074 	movhi	r6,1
    c378:	31b17004 	addi	r6,r6,-14912
    c37c:	180b883a 	mov	r5,r3
    c380:	1009883a 	mov	r4,r2
    c384:	000cbf80 	call	cbf8 <alt_alarm_start>
    c388:	1000040e 	bge	r2,zero,c39c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    c38c:	e0fffd17 	ldw	r3,-12(fp)
    c390:	00a00034 	movhi	r2,32768
    c394:	10bfffc4 	addi	r2,r2,-1
    c398:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    c39c:	0001883a 	nop
    c3a0:	e037883a 	mov	sp,fp
    c3a4:	dfc00117 	ldw	ra,4(sp)
    c3a8:	df000017 	ldw	fp,0(sp)
    c3ac:	dec00204 	addi	sp,sp,8
    c3b0:	f800283a 	ret

0000c3b4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    c3b4:	defff804 	addi	sp,sp,-32
    c3b8:	df000715 	stw	fp,28(sp)
    c3bc:	df000704 	addi	fp,sp,28
    c3c0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    c3c4:	e0bfff17 	ldw	r2,-4(fp)
    c3c8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    c3cc:	e0bffb17 	ldw	r2,-20(fp)
    c3d0:	10800017 	ldw	r2,0(r2)
    c3d4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    c3d8:	e0bffc17 	ldw	r2,-16(fp)
    c3dc:	10800104 	addi	r2,r2,4
    c3e0:	10800037 	ldwio	r2,0(r2)
    c3e4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    c3e8:	e0bffd17 	ldw	r2,-12(fp)
    c3ec:	1080c00c 	andi	r2,r2,768
    c3f0:	10006d26 	beq	r2,zero,c5a8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    c3f4:	e0bffd17 	ldw	r2,-12(fp)
    c3f8:	1080400c 	andi	r2,r2,256
    c3fc:	10003526 	beq	r2,zero,c4d4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    c400:	00800074 	movhi	r2,1
    c404:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    c408:	e0bffb17 	ldw	r2,-20(fp)
    c40c:	10800a17 	ldw	r2,40(r2)
    c410:	10800044 	addi	r2,r2,1
    c414:	1081ffcc 	andi	r2,r2,2047
    c418:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    c41c:	e0bffb17 	ldw	r2,-20(fp)
    c420:	10c00b17 	ldw	r3,44(r2)
    c424:	e0bffe17 	ldw	r2,-8(fp)
    c428:	18801526 	beq	r3,r2,c480 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    c42c:	e0bffc17 	ldw	r2,-16(fp)
    c430:	10800037 	ldwio	r2,0(r2)
    c434:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    c438:	e0bff917 	ldw	r2,-28(fp)
    c43c:	10a0000c 	andi	r2,r2,32768
    c440:	10001126 	beq	r2,zero,c488 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    c444:	e0bffb17 	ldw	r2,-20(fp)
    c448:	10800a17 	ldw	r2,40(r2)
    c44c:	e0fff917 	ldw	r3,-28(fp)
    c450:	1809883a 	mov	r4,r3
    c454:	e0fffb17 	ldw	r3,-20(fp)
    c458:	1885883a 	add	r2,r3,r2
    c45c:	10800e04 	addi	r2,r2,56
    c460:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    c464:	e0bffb17 	ldw	r2,-20(fp)
    c468:	10800a17 	ldw	r2,40(r2)
    c46c:	10800044 	addi	r2,r2,1
    c470:	10c1ffcc 	andi	r3,r2,2047
    c474:	e0bffb17 	ldw	r2,-20(fp)
    c478:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    c47c:	003fe206 	br	c408 <__alt_mem_onchip_memory2_0+0xf700c408>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    c480:	0001883a 	nop
    c484:	00000106 	br	c48c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    c488:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    c48c:	e0bff917 	ldw	r2,-28(fp)
    c490:	10bfffec 	andhi	r2,r2,65535
    c494:	10000f26 	beq	r2,zero,c4d4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    c498:	e0bffb17 	ldw	r2,-20(fp)
    c49c:	10c00817 	ldw	r3,32(r2)
    c4a0:	00bfff84 	movi	r2,-2
    c4a4:	1886703a 	and	r3,r3,r2
    c4a8:	e0bffb17 	ldw	r2,-20(fp)
    c4ac:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    c4b0:	e0bffc17 	ldw	r2,-16(fp)
    c4b4:	10800104 	addi	r2,r2,4
    c4b8:	1007883a 	mov	r3,r2
    c4bc:	e0bffb17 	ldw	r2,-20(fp)
    c4c0:	10800817 	ldw	r2,32(r2)
    c4c4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    c4c8:	e0bffc17 	ldw	r2,-16(fp)
    c4cc:	10800104 	addi	r2,r2,4
    c4d0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    c4d4:	e0bffd17 	ldw	r2,-12(fp)
    c4d8:	1080800c 	andi	r2,r2,512
    c4dc:	103fbe26 	beq	r2,zero,c3d8 <__alt_mem_onchip_memory2_0+0xf700c3d8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    c4e0:	e0bffd17 	ldw	r2,-12(fp)
    c4e4:	1004d43a 	srli	r2,r2,16
    c4e8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    c4ec:	00001406 	br	c540 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    c4f0:	e0bffc17 	ldw	r2,-16(fp)
    c4f4:	e0fffb17 	ldw	r3,-20(fp)
    c4f8:	18c00d17 	ldw	r3,52(r3)
    c4fc:	e13ffb17 	ldw	r4,-20(fp)
    c500:	20c7883a 	add	r3,r4,r3
    c504:	18c20e04 	addi	r3,r3,2104
    c508:	18c00003 	ldbu	r3,0(r3)
    c50c:	18c03fcc 	andi	r3,r3,255
    c510:	18c0201c 	xori	r3,r3,128
    c514:	18ffe004 	addi	r3,r3,-128
    c518:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    c51c:	e0bffb17 	ldw	r2,-20(fp)
    c520:	10800d17 	ldw	r2,52(r2)
    c524:	10800044 	addi	r2,r2,1
    c528:	10c1ffcc 	andi	r3,r2,2047
    c52c:	e0bffb17 	ldw	r2,-20(fp)
    c530:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    c534:	e0bffa17 	ldw	r2,-24(fp)
    c538:	10bfffc4 	addi	r2,r2,-1
    c53c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    c540:	e0bffa17 	ldw	r2,-24(fp)
    c544:	10000526 	beq	r2,zero,c55c <altera_avalon_jtag_uart_irq+0x1a8>
    c548:	e0bffb17 	ldw	r2,-20(fp)
    c54c:	10c00d17 	ldw	r3,52(r2)
    c550:	e0bffb17 	ldw	r2,-20(fp)
    c554:	10800c17 	ldw	r2,48(r2)
    c558:	18bfe51e 	bne	r3,r2,c4f0 <__alt_mem_onchip_memory2_0+0xf700c4f0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    c55c:	e0bffa17 	ldw	r2,-24(fp)
    c560:	103f9d26 	beq	r2,zero,c3d8 <__alt_mem_onchip_memory2_0+0xf700c3d8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    c564:	e0bffb17 	ldw	r2,-20(fp)
    c568:	10c00817 	ldw	r3,32(r2)
    c56c:	00bfff44 	movi	r2,-3
    c570:	1886703a 	and	r3,r3,r2
    c574:	e0bffb17 	ldw	r2,-20(fp)
    c578:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    c57c:	e0bffb17 	ldw	r2,-20(fp)
    c580:	10800017 	ldw	r2,0(r2)
    c584:	10800104 	addi	r2,r2,4
    c588:	1007883a 	mov	r3,r2
    c58c:	e0bffb17 	ldw	r2,-20(fp)
    c590:	10800817 	ldw	r2,32(r2)
    c594:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    c598:	e0bffc17 	ldw	r2,-16(fp)
    c59c:	10800104 	addi	r2,r2,4
    c5a0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    c5a4:	003f8c06 	br	c3d8 <__alt_mem_onchip_memory2_0+0xf700c3d8>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    c5a8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    c5ac:	0001883a 	nop
    c5b0:	e037883a 	mov	sp,fp
    c5b4:	df000017 	ldw	fp,0(sp)
    c5b8:	dec00104 	addi	sp,sp,4
    c5bc:	f800283a 	ret

0000c5c0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    c5c0:	defff804 	addi	sp,sp,-32
    c5c4:	df000715 	stw	fp,28(sp)
    c5c8:	df000704 	addi	fp,sp,28
    c5cc:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    c5d0:	e0bffb17 	ldw	r2,-20(fp)
    c5d4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    c5d8:	e0bff917 	ldw	r2,-28(fp)
    c5dc:	10800017 	ldw	r2,0(r2)
    c5e0:	10800104 	addi	r2,r2,4
    c5e4:	10800037 	ldwio	r2,0(r2)
    c5e8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    c5ec:	e0bffa17 	ldw	r2,-24(fp)
    c5f0:	1081000c 	andi	r2,r2,1024
    c5f4:	10000b26 	beq	r2,zero,c624 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    c5f8:	e0bff917 	ldw	r2,-28(fp)
    c5fc:	10800017 	ldw	r2,0(r2)
    c600:	10800104 	addi	r2,r2,4
    c604:	1007883a 	mov	r3,r2
    c608:	e0bff917 	ldw	r2,-28(fp)
    c60c:	10800817 	ldw	r2,32(r2)
    c610:	10810014 	ori	r2,r2,1024
    c614:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    c618:	e0bff917 	ldw	r2,-28(fp)
    c61c:	10000915 	stw	zero,36(r2)
    c620:	00000a06 	br	c64c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    c624:	e0bff917 	ldw	r2,-28(fp)
    c628:	10c00917 	ldw	r3,36(r2)
    c62c:	00a00034 	movhi	r2,32768
    c630:	10bfff04 	addi	r2,r2,-4
    c634:	10c00536 	bltu	r2,r3,c64c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    c638:	e0bff917 	ldw	r2,-28(fp)
    c63c:	10800917 	ldw	r2,36(r2)
    c640:	10c00044 	addi	r3,r2,1
    c644:	e0bff917 	ldw	r2,-28(fp)
    c648:	10c00915 	stw	r3,36(r2)
    c64c:	d0a7ee17 	ldw	r2,-24648(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    c650:	e037883a 	mov	sp,fp
    c654:	df000017 	ldw	fp,0(sp)
    c658:	dec00104 	addi	sp,sp,4
    c65c:	f800283a 	ret

0000c660 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    c660:	defffd04 	addi	sp,sp,-12
    c664:	df000215 	stw	fp,8(sp)
    c668:	df000204 	addi	fp,sp,8
    c66c:	e13ffe15 	stw	r4,-8(fp)
    c670:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    c674:	00000506 	br	c68c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    c678:	e0bfff17 	ldw	r2,-4(fp)
    c67c:	1090000c 	andi	r2,r2,16384
    c680:	10000226 	beq	r2,zero,c68c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    c684:	00bffd44 	movi	r2,-11
    c688:	00000b06 	br	c6b8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    c68c:	e0bffe17 	ldw	r2,-8(fp)
    c690:	10c00d17 	ldw	r3,52(r2)
    c694:	e0bffe17 	ldw	r2,-8(fp)
    c698:	10800c17 	ldw	r2,48(r2)
    c69c:	18800526 	beq	r3,r2,c6b4 <altera_avalon_jtag_uart_close+0x54>
    c6a0:	e0bffe17 	ldw	r2,-8(fp)
    c6a4:	10c00917 	ldw	r3,36(r2)
    c6a8:	e0bffe17 	ldw	r2,-8(fp)
    c6ac:	10800117 	ldw	r2,4(r2)
    c6b0:	18bff136 	bltu	r3,r2,c678 <__alt_mem_onchip_memory2_0+0xf700c678>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    c6b4:	0005883a 	mov	r2,zero
}
    c6b8:	e037883a 	mov	sp,fp
    c6bc:	df000017 	ldw	fp,0(sp)
    c6c0:	dec00104 	addi	sp,sp,4
    c6c4:	f800283a 	ret

0000c6c8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    c6c8:	defffa04 	addi	sp,sp,-24
    c6cc:	df000515 	stw	fp,20(sp)
    c6d0:	df000504 	addi	fp,sp,20
    c6d4:	e13ffd15 	stw	r4,-12(fp)
    c6d8:	e17ffe15 	stw	r5,-8(fp)
    c6dc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    c6e0:	00bff9c4 	movi	r2,-25
    c6e4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    c6e8:	e0bffe17 	ldw	r2,-8(fp)
    c6ec:	10da8060 	cmpeqi	r3,r2,27137
    c6f0:	1800031e 	bne	r3,zero,c700 <altera_avalon_jtag_uart_ioctl+0x38>
    c6f4:	109a80a0 	cmpeqi	r2,r2,27138
    c6f8:	1000181e 	bne	r2,zero,c75c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    c6fc:	00002906 	br	c7a4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    c700:	e0bffd17 	ldw	r2,-12(fp)
    c704:	10c00117 	ldw	r3,4(r2)
    c708:	00a00034 	movhi	r2,32768
    c70c:	10bfffc4 	addi	r2,r2,-1
    c710:	18802126 	beq	r3,r2,c798 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    c714:	e0bfff17 	ldw	r2,-4(fp)
    c718:	10800017 	ldw	r2,0(r2)
    c71c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    c720:	e0bffc17 	ldw	r2,-16(fp)
    c724:	10800090 	cmplti	r2,r2,2
    c728:	1000061e 	bne	r2,zero,c744 <altera_avalon_jtag_uart_ioctl+0x7c>
    c72c:	e0fffc17 	ldw	r3,-16(fp)
    c730:	00a00034 	movhi	r2,32768
    c734:	10bfffc4 	addi	r2,r2,-1
    c738:	18800226 	beq	r3,r2,c744 <altera_avalon_jtag_uart_ioctl+0x7c>
    c73c:	e0bffc17 	ldw	r2,-16(fp)
    c740:	00000206 	br	c74c <altera_avalon_jtag_uart_ioctl+0x84>
    c744:	00a00034 	movhi	r2,32768
    c748:	10bfff84 	addi	r2,r2,-2
    c74c:	e0fffd17 	ldw	r3,-12(fp)
    c750:	18800115 	stw	r2,4(r3)
      rc = 0;
    c754:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    c758:	00000f06 	br	c798 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    c75c:	e0bffd17 	ldw	r2,-12(fp)
    c760:	10c00117 	ldw	r3,4(r2)
    c764:	00a00034 	movhi	r2,32768
    c768:	10bfffc4 	addi	r2,r2,-1
    c76c:	18800c26 	beq	r3,r2,c7a0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    c770:	e0bffd17 	ldw	r2,-12(fp)
    c774:	10c00917 	ldw	r3,36(r2)
    c778:	e0bffd17 	ldw	r2,-12(fp)
    c77c:	10800117 	ldw	r2,4(r2)
    c780:	1885803a 	cmpltu	r2,r3,r2
    c784:	10c03fcc 	andi	r3,r2,255
    c788:	e0bfff17 	ldw	r2,-4(fp)
    c78c:	10c00015 	stw	r3,0(r2)
      rc = 0;
    c790:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    c794:	00000206 	br	c7a0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    c798:	0001883a 	nop
    c79c:	00000106 	br	c7a4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    c7a0:	0001883a 	nop

  default:
    break;
  }

  return rc;
    c7a4:	e0bffb17 	ldw	r2,-20(fp)
}
    c7a8:	e037883a 	mov	sp,fp
    c7ac:	df000017 	ldw	fp,0(sp)
    c7b0:	dec00104 	addi	sp,sp,4
    c7b4:	f800283a 	ret

0000c7b8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    c7b8:	defff304 	addi	sp,sp,-52
    c7bc:	dfc00c15 	stw	ra,48(sp)
    c7c0:	df000b15 	stw	fp,44(sp)
    c7c4:	df000b04 	addi	fp,sp,44
    c7c8:	e13ffc15 	stw	r4,-16(fp)
    c7cc:	e17ffd15 	stw	r5,-12(fp)
    c7d0:	e1bffe15 	stw	r6,-8(fp)
    c7d4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    c7d8:	e0bffd17 	ldw	r2,-12(fp)
    c7dc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    c7e0:	00004706 	br	c900 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    c7e4:	e0bffc17 	ldw	r2,-16(fp)
    c7e8:	10800a17 	ldw	r2,40(r2)
    c7ec:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    c7f0:	e0bffc17 	ldw	r2,-16(fp)
    c7f4:	10800b17 	ldw	r2,44(r2)
    c7f8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    c7fc:	e0fff717 	ldw	r3,-36(fp)
    c800:	e0bff817 	ldw	r2,-32(fp)
    c804:	18800536 	bltu	r3,r2,c81c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    c808:	e0fff717 	ldw	r3,-36(fp)
    c80c:	e0bff817 	ldw	r2,-32(fp)
    c810:	1885c83a 	sub	r2,r3,r2
    c814:	e0bff615 	stw	r2,-40(fp)
    c818:	00000406 	br	c82c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    c81c:	00c20004 	movi	r3,2048
    c820:	e0bff817 	ldw	r2,-32(fp)
    c824:	1885c83a 	sub	r2,r3,r2
    c828:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    c82c:	e0bff617 	ldw	r2,-40(fp)
    c830:	10001e26 	beq	r2,zero,c8ac <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    c834:	e0fffe17 	ldw	r3,-8(fp)
    c838:	e0bff617 	ldw	r2,-40(fp)
    c83c:	1880022e 	bgeu	r3,r2,c848 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    c840:	e0bffe17 	ldw	r2,-8(fp)
    c844:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    c848:	e0bffc17 	ldw	r2,-16(fp)
    c84c:	10c00e04 	addi	r3,r2,56
    c850:	e0bff817 	ldw	r2,-32(fp)
    c854:	1885883a 	add	r2,r3,r2
    c858:	e1bff617 	ldw	r6,-40(fp)
    c85c:	100b883a 	mov	r5,r2
    c860:	e13ff517 	ldw	r4,-44(fp)
    c864:	00052cc0 	call	52cc <memcpy>
      ptr   += n;
    c868:	e0fff517 	ldw	r3,-44(fp)
    c86c:	e0bff617 	ldw	r2,-40(fp)
    c870:	1885883a 	add	r2,r3,r2
    c874:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    c878:	e0fffe17 	ldw	r3,-8(fp)
    c87c:	e0bff617 	ldw	r2,-40(fp)
    c880:	1885c83a 	sub	r2,r3,r2
    c884:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    c888:	e0fff817 	ldw	r3,-32(fp)
    c88c:	e0bff617 	ldw	r2,-40(fp)
    c890:	1885883a 	add	r2,r3,r2
    c894:	10c1ffcc 	andi	r3,r2,2047
    c898:	e0bffc17 	ldw	r2,-16(fp)
    c89c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    c8a0:	e0bffe17 	ldw	r2,-8(fp)
    c8a4:	00bfcf16 	blt	zero,r2,c7e4 <__alt_mem_onchip_memory2_0+0xf700c7e4>
    c8a8:	00000106 	br	c8b0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    c8ac:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    c8b0:	e0fff517 	ldw	r3,-44(fp)
    c8b4:	e0bffd17 	ldw	r2,-12(fp)
    c8b8:	1880141e 	bne	r3,r2,c90c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    c8bc:	e0bfff17 	ldw	r2,-4(fp)
    c8c0:	1090000c 	andi	r2,r2,16384
    c8c4:	1000131e 	bne	r2,zero,c914 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    c8c8:	0001883a 	nop
    c8cc:	e0bffc17 	ldw	r2,-16(fp)
    c8d0:	10c00a17 	ldw	r3,40(r2)
    c8d4:	e0bff717 	ldw	r2,-36(fp)
    c8d8:	1880051e 	bne	r3,r2,c8f0 <altera_avalon_jtag_uart_read+0x138>
    c8dc:	e0bffc17 	ldw	r2,-16(fp)
    c8e0:	10c00917 	ldw	r3,36(r2)
    c8e4:	e0bffc17 	ldw	r2,-16(fp)
    c8e8:	10800117 	ldw	r2,4(r2)
    c8ec:	18bff736 	bltu	r3,r2,c8cc <__alt_mem_onchip_memory2_0+0xf700c8cc>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    c8f0:	e0bffc17 	ldw	r2,-16(fp)
    c8f4:	10c00a17 	ldw	r3,40(r2)
    c8f8:	e0bff717 	ldw	r2,-36(fp)
    c8fc:	18800726 	beq	r3,r2,c91c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    c900:	e0bffe17 	ldw	r2,-8(fp)
    c904:	00bfb716 	blt	zero,r2,c7e4 <__alt_mem_onchip_memory2_0+0xf700c7e4>
    c908:	00000506 	br	c920 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    c90c:	0001883a 	nop
    c910:	00000306 	br	c920 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    c914:	0001883a 	nop
    c918:	00000106 	br	c920 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    c91c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    c920:	e0fff517 	ldw	r3,-44(fp)
    c924:	e0bffd17 	ldw	r2,-12(fp)
    c928:	18801826 	beq	r3,r2,c98c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    c92c:	0005303a 	rdctl	r2,status
    c930:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    c934:	e0fffb17 	ldw	r3,-20(fp)
    c938:	00bfff84 	movi	r2,-2
    c93c:	1884703a 	and	r2,r3,r2
    c940:	1001703a 	wrctl	status,r2
  
  return context;
    c944:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    c948:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    c94c:	e0bffc17 	ldw	r2,-16(fp)
    c950:	10800817 	ldw	r2,32(r2)
    c954:	10c00054 	ori	r3,r2,1
    c958:	e0bffc17 	ldw	r2,-16(fp)
    c95c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    c960:	e0bffc17 	ldw	r2,-16(fp)
    c964:	10800017 	ldw	r2,0(r2)
    c968:	10800104 	addi	r2,r2,4
    c96c:	1007883a 	mov	r3,r2
    c970:	e0bffc17 	ldw	r2,-16(fp)
    c974:	10800817 	ldw	r2,32(r2)
    c978:	18800035 	stwio	r2,0(r3)
    c97c:	e0bffa17 	ldw	r2,-24(fp)
    c980:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    c984:	e0bff917 	ldw	r2,-28(fp)
    c988:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    c98c:	e0fff517 	ldw	r3,-44(fp)
    c990:	e0bffd17 	ldw	r2,-12(fp)
    c994:	18800426 	beq	r3,r2,c9a8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    c998:	e0fff517 	ldw	r3,-44(fp)
    c99c:	e0bffd17 	ldw	r2,-12(fp)
    c9a0:	1885c83a 	sub	r2,r3,r2
    c9a4:	00000606 	br	c9c0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    c9a8:	e0bfff17 	ldw	r2,-4(fp)
    c9ac:	1090000c 	andi	r2,r2,16384
    c9b0:	10000226 	beq	r2,zero,c9bc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    c9b4:	00bffd44 	movi	r2,-11
    c9b8:	00000106 	br	c9c0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    c9bc:	00bffec4 	movi	r2,-5
}
    c9c0:	e037883a 	mov	sp,fp
    c9c4:	dfc00117 	ldw	ra,4(sp)
    c9c8:	df000017 	ldw	fp,0(sp)
    c9cc:	dec00204 	addi	sp,sp,8
    c9d0:	f800283a 	ret

0000c9d4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    c9d4:	defff304 	addi	sp,sp,-52
    c9d8:	dfc00c15 	stw	ra,48(sp)
    c9dc:	df000b15 	stw	fp,44(sp)
    c9e0:	df000b04 	addi	fp,sp,44
    c9e4:	e13ffc15 	stw	r4,-16(fp)
    c9e8:	e17ffd15 	stw	r5,-12(fp)
    c9ec:	e1bffe15 	stw	r6,-8(fp)
    c9f0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    c9f4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    c9f8:	e0bffd17 	ldw	r2,-12(fp)
    c9fc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ca00:	00003706 	br	cae0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    ca04:	e0bffc17 	ldw	r2,-16(fp)
    ca08:	10800c17 	ldw	r2,48(r2)
    ca0c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    ca10:	e0bffc17 	ldw	r2,-16(fp)
    ca14:	10800d17 	ldw	r2,52(r2)
    ca18:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    ca1c:	e0fff917 	ldw	r3,-28(fp)
    ca20:	e0bff517 	ldw	r2,-44(fp)
    ca24:	1880062e 	bgeu	r3,r2,ca40 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    ca28:	e0fff517 	ldw	r3,-44(fp)
    ca2c:	e0bff917 	ldw	r2,-28(fp)
    ca30:	1885c83a 	sub	r2,r3,r2
    ca34:	10bfffc4 	addi	r2,r2,-1
    ca38:	e0bff615 	stw	r2,-40(fp)
    ca3c:	00000b06 	br	ca6c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    ca40:	e0bff517 	ldw	r2,-44(fp)
    ca44:	10000526 	beq	r2,zero,ca5c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    ca48:	00c20004 	movi	r3,2048
    ca4c:	e0bff917 	ldw	r2,-28(fp)
    ca50:	1885c83a 	sub	r2,r3,r2
    ca54:	e0bff615 	stw	r2,-40(fp)
    ca58:	00000406 	br	ca6c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    ca5c:	00c1ffc4 	movi	r3,2047
    ca60:	e0bff917 	ldw	r2,-28(fp)
    ca64:	1885c83a 	sub	r2,r3,r2
    ca68:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ca6c:	e0bff617 	ldw	r2,-40(fp)
    ca70:	10001e26 	beq	r2,zero,caec <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    ca74:	e0fffe17 	ldw	r3,-8(fp)
    ca78:	e0bff617 	ldw	r2,-40(fp)
    ca7c:	1880022e 	bgeu	r3,r2,ca88 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    ca80:	e0bffe17 	ldw	r2,-8(fp)
    ca84:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    ca88:	e0bffc17 	ldw	r2,-16(fp)
    ca8c:	10c20e04 	addi	r3,r2,2104
    ca90:	e0bff917 	ldw	r2,-28(fp)
    ca94:	1885883a 	add	r2,r3,r2
    ca98:	e1bff617 	ldw	r6,-40(fp)
    ca9c:	e17ffd17 	ldw	r5,-12(fp)
    caa0:	1009883a 	mov	r4,r2
    caa4:	00052cc0 	call	52cc <memcpy>
      ptr   += n;
    caa8:	e0fffd17 	ldw	r3,-12(fp)
    caac:	e0bff617 	ldw	r2,-40(fp)
    cab0:	1885883a 	add	r2,r3,r2
    cab4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    cab8:	e0fffe17 	ldw	r3,-8(fp)
    cabc:	e0bff617 	ldw	r2,-40(fp)
    cac0:	1885c83a 	sub	r2,r3,r2
    cac4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    cac8:	e0fff917 	ldw	r3,-28(fp)
    cacc:	e0bff617 	ldw	r2,-40(fp)
    cad0:	1885883a 	add	r2,r3,r2
    cad4:	10c1ffcc 	andi	r3,r2,2047
    cad8:	e0bffc17 	ldw	r2,-16(fp)
    cadc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    cae0:	e0bffe17 	ldw	r2,-8(fp)
    cae4:	00bfc716 	blt	zero,r2,ca04 <__alt_mem_onchip_memory2_0+0xf700ca04>
    cae8:	00000106 	br	caf0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    caec:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    caf0:	0005303a 	rdctl	r2,status
    caf4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    caf8:	e0fffb17 	ldw	r3,-20(fp)
    cafc:	00bfff84 	movi	r2,-2
    cb00:	1884703a 	and	r2,r3,r2
    cb04:	1001703a 	wrctl	status,r2
  
  return context;
    cb08:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    cb0c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    cb10:	e0bffc17 	ldw	r2,-16(fp)
    cb14:	10800817 	ldw	r2,32(r2)
    cb18:	10c00094 	ori	r3,r2,2
    cb1c:	e0bffc17 	ldw	r2,-16(fp)
    cb20:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    cb24:	e0bffc17 	ldw	r2,-16(fp)
    cb28:	10800017 	ldw	r2,0(r2)
    cb2c:	10800104 	addi	r2,r2,4
    cb30:	1007883a 	mov	r3,r2
    cb34:	e0bffc17 	ldw	r2,-16(fp)
    cb38:	10800817 	ldw	r2,32(r2)
    cb3c:	18800035 	stwio	r2,0(r3)
    cb40:	e0bffa17 	ldw	r2,-24(fp)
    cb44:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    cb48:	e0bff817 	ldw	r2,-32(fp)
    cb4c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    cb50:	e0bffe17 	ldw	r2,-8(fp)
    cb54:	0080100e 	bge	zero,r2,cb98 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    cb58:	e0bfff17 	ldw	r2,-4(fp)
    cb5c:	1090000c 	andi	r2,r2,16384
    cb60:	1000101e 	bne	r2,zero,cba4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    cb64:	0001883a 	nop
    cb68:	e0bffc17 	ldw	r2,-16(fp)
    cb6c:	10c00d17 	ldw	r3,52(r2)
    cb70:	e0bff517 	ldw	r2,-44(fp)
    cb74:	1880051e 	bne	r3,r2,cb8c <altera_avalon_jtag_uart_write+0x1b8>
    cb78:	e0bffc17 	ldw	r2,-16(fp)
    cb7c:	10c00917 	ldw	r3,36(r2)
    cb80:	e0bffc17 	ldw	r2,-16(fp)
    cb84:	10800117 	ldw	r2,4(r2)
    cb88:	18bff736 	bltu	r3,r2,cb68 <__alt_mem_onchip_memory2_0+0xf700cb68>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    cb8c:	e0bffc17 	ldw	r2,-16(fp)
    cb90:	10800917 	ldw	r2,36(r2)
    cb94:	1000051e 	bne	r2,zero,cbac <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    cb98:	e0bffe17 	ldw	r2,-8(fp)
    cb9c:	00bfd016 	blt	zero,r2,cae0 <__alt_mem_onchip_memory2_0+0xf700cae0>
    cba0:	00000306 	br	cbb0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    cba4:	0001883a 	nop
    cba8:	00000106 	br	cbb0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    cbac:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    cbb0:	e0fffd17 	ldw	r3,-12(fp)
    cbb4:	e0bff717 	ldw	r2,-36(fp)
    cbb8:	18800426 	beq	r3,r2,cbcc <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    cbbc:	e0fffd17 	ldw	r3,-12(fp)
    cbc0:	e0bff717 	ldw	r2,-36(fp)
    cbc4:	1885c83a 	sub	r2,r3,r2
    cbc8:	00000606 	br	cbe4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    cbcc:	e0bfff17 	ldw	r2,-4(fp)
    cbd0:	1090000c 	andi	r2,r2,16384
    cbd4:	10000226 	beq	r2,zero,cbe0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    cbd8:	00bffd44 	movi	r2,-11
    cbdc:	00000106 	br	cbe4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    cbe0:	00bffec4 	movi	r2,-5
}
    cbe4:	e037883a 	mov	sp,fp
    cbe8:	dfc00117 	ldw	ra,4(sp)
    cbec:	df000017 	ldw	fp,0(sp)
    cbf0:	dec00204 	addi	sp,sp,8
    cbf4:	f800283a 	ret

0000cbf8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    cbf8:	defff504 	addi	sp,sp,-44
    cbfc:	df000a15 	stw	fp,40(sp)
    cc00:	df000a04 	addi	fp,sp,40
    cc04:	e13ffc15 	stw	r4,-16(fp)
    cc08:	e17ffd15 	stw	r5,-12(fp)
    cc0c:	e1bffe15 	stw	r6,-8(fp)
    cc10:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    cc14:	e03ff615 	stw	zero,-40(fp)
    cc18:	d0a7ee17 	ldw	r2,-24648(gp)
  
  if (alt_ticks_per_second ())
    cc1c:	10003c26 	beq	r2,zero,cd10 <alt_alarm_start+0x118>
  {
    if (alarm)
    cc20:	e0bffc17 	ldw	r2,-16(fp)
    cc24:	10003826 	beq	r2,zero,cd08 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    cc28:	e0bffc17 	ldw	r2,-16(fp)
    cc2c:	e0fffe17 	ldw	r3,-8(fp)
    cc30:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    cc34:	e0bffc17 	ldw	r2,-16(fp)
    cc38:	e0ffff17 	ldw	r3,-4(fp)
    cc3c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    cc40:	0005303a 	rdctl	r2,status
    cc44:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    cc48:	e0fff917 	ldw	r3,-28(fp)
    cc4c:	00bfff84 	movi	r2,-2
    cc50:	1884703a 	and	r2,r3,r2
    cc54:	1001703a 	wrctl	status,r2
  
  return context;
    cc58:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    cc5c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    cc60:	d0a7ef17 	ldw	r2,-24644(gp)
      
      current_nticks = alt_nticks();
    cc64:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    cc68:	e0fffd17 	ldw	r3,-12(fp)
    cc6c:	e0bff617 	ldw	r2,-40(fp)
    cc70:	1885883a 	add	r2,r3,r2
    cc74:	10c00044 	addi	r3,r2,1
    cc78:	e0bffc17 	ldw	r2,-16(fp)
    cc7c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    cc80:	e0bffc17 	ldw	r2,-16(fp)
    cc84:	10c00217 	ldw	r3,8(r2)
    cc88:	e0bff617 	ldw	r2,-40(fp)
    cc8c:	1880042e 	bgeu	r3,r2,cca0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    cc90:	e0bffc17 	ldw	r2,-16(fp)
    cc94:	00c00044 	movi	r3,1
    cc98:	10c00405 	stb	r3,16(r2)
    cc9c:	00000206 	br	cca8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    cca0:	e0bffc17 	ldw	r2,-16(fp)
    cca4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    cca8:	e0bffc17 	ldw	r2,-16(fp)
    ccac:	d0e01004 	addi	r3,gp,-32704
    ccb0:	e0fffa15 	stw	r3,-24(fp)
    ccb4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    ccb8:	e0bffb17 	ldw	r2,-20(fp)
    ccbc:	e0fffa17 	ldw	r3,-24(fp)
    ccc0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    ccc4:	e0bffa17 	ldw	r2,-24(fp)
    ccc8:	10c00017 	ldw	r3,0(r2)
    cccc:	e0bffb17 	ldw	r2,-20(fp)
    ccd0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    ccd4:	e0bffa17 	ldw	r2,-24(fp)
    ccd8:	10800017 	ldw	r2,0(r2)
    ccdc:	e0fffb17 	ldw	r3,-20(fp)
    cce0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    cce4:	e0bffa17 	ldw	r2,-24(fp)
    cce8:	e0fffb17 	ldw	r3,-20(fp)
    ccec:	10c00015 	stw	r3,0(r2)
    ccf0:	e0bff817 	ldw	r2,-32(fp)
    ccf4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ccf8:	e0bff717 	ldw	r2,-36(fp)
    ccfc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    cd00:	0005883a 	mov	r2,zero
    cd04:	00000306 	br	cd14 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    cd08:	00bffa84 	movi	r2,-22
    cd0c:	00000106 	br	cd14 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    cd10:	00bfde84 	movi	r2,-134
  }
}
    cd14:	e037883a 	mov	sp,fp
    cd18:	df000017 	ldw	fp,0(sp)
    cd1c:	dec00104 	addi	sp,sp,4
    cd20:	f800283a 	ret

0000cd24 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
    cd24:	defffa04 	addi	sp,sp,-24
    cd28:	dfc00515 	stw	ra,20(sp)
    cd2c:	df000415 	stw	fp,16(sp)
    cd30:	df000404 	addi	fp,sp,16
    cd34:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
    cd38:	00800244 	movi	r2,9
    cd3c:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
    cd40:	014003f4 	movhi	r5,15
    cd44:	29509004 	addi	r5,r5,16960
    cd48:	e13ffd17 	ldw	r4,-12(fp)
    cd4c:	0000b940 	call	b94 <__mulsi3>
    cd50:	100b883a 	mov	r5,r2
    cd54:	0100bef4 	movhi	r4,763
    cd58:	213c2004 	addi	r4,r4,-3968
    cd5c:	0000ad80 	call	ad8 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
    cd60:	100b883a 	mov	r5,r2
    cd64:	01200034 	movhi	r4,32768
    cd68:	213fffc4 	addi	r4,r4,-1
    cd6c:	0000ad80 	call	ad8 <__udivsi3>
    cd70:	100b883a 	mov	r5,r2
    cd74:	e13fff17 	ldw	r4,-4(fp)
    cd78:	0000ad80 	call	ad8 <__udivsi3>
    cd7c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
    cd80:	e0bffe17 	ldw	r2,-8(fp)
    cd84:	10002a26 	beq	r2,zero,ce30 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
    cd88:	e03ffc15 	stw	zero,-16(fp)
    cd8c:	00001706 	br	cdec <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
    cd90:	00a00034 	movhi	r2,32768
    cd94:	10bfffc4 	addi	r2,r2,-1
    cd98:	10bfffc4 	addi	r2,r2,-1
    cd9c:	103ffe1e 	bne	r2,zero,cd98 <__alt_mem_onchip_memory2_0+0xf700cd98>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
    cda0:	014003f4 	movhi	r5,15
    cda4:	29509004 	addi	r5,r5,16960
    cda8:	e13ffd17 	ldw	r4,-12(fp)
    cdac:	0000b940 	call	b94 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
    cdb0:	100b883a 	mov	r5,r2
    cdb4:	0100bef4 	movhi	r4,763
    cdb8:	213c2004 	addi	r4,r4,-3968
    cdbc:	0000ad80 	call	ad8 <__udivsi3>
    cdc0:	100b883a 	mov	r5,r2
    cdc4:	01200034 	movhi	r4,32768
    cdc8:	213fffc4 	addi	r4,r4,-1
    cdcc:	0000ad80 	call	ad8 <__udivsi3>
    cdd0:	1007883a 	mov	r3,r2
    cdd4:	e0bfff17 	ldw	r2,-4(fp)
    cdd8:	10c5c83a 	sub	r2,r2,r3
    cddc:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
    cde0:	e0bffc17 	ldw	r2,-16(fp)
    cde4:	10800044 	addi	r2,r2,1
    cde8:	e0bffc15 	stw	r2,-16(fp)
    cdec:	e0fffc17 	ldw	r3,-16(fp)
    cdf0:	e0bffe17 	ldw	r2,-8(fp)
    cdf4:	18bfe616 	blt	r3,r2,cd90 <__alt_mem_onchip_memory2_0+0xf700cd90>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
    cdf8:	014003f4 	movhi	r5,15
    cdfc:	29509004 	addi	r5,r5,16960
    ce00:	e13ffd17 	ldw	r4,-12(fp)
    ce04:	0000b940 	call	b94 <__mulsi3>
    ce08:	100b883a 	mov	r5,r2
    ce0c:	0100bef4 	movhi	r4,763
    ce10:	213c2004 	addi	r4,r4,-3968
    ce14:	0000ad80 	call	ad8 <__udivsi3>
    ce18:	e17fff17 	ldw	r5,-4(fp)
    ce1c:	1009883a 	mov	r4,r2
    ce20:	0000b940 	call	b94 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
    ce24:	10bfffc4 	addi	r2,r2,-1
    ce28:	103ffe1e 	bne	r2,zero,ce24 <__alt_mem_onchip_memory2_0+0xf700ce24>
    ce2c:	00000d06 	br	ce64 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
    ce30:	014003f4 	movhi	r5,15
    ce34:	29509004 	addi	r5,r5,16960
    ce38:	e13ffd17 	ldw	r4,-12(fp)
    ce3c:	0000b940 	call	b94 <__mulsi3>
    ce40:	100b883a 	mov	r5,r2
    ce44:	0100bef4 	movhi	r4,763
    ce48:	213c2004 	addi	r4,r4,-3968
    ce4c:	0000ad80 	call	ad8 <__udivsi3>
    ce50:	e17fff17 	ldw	r5,-4(fp)
    ce54:	1009883a 	mov	r4,r2
    ce58:	0000b940 	call	b94 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
    ce5c:	10bfffc4 	addi	r2,r2,-1
    ce60:	00bffe16 	blt	zero,r2,ce5c <__alt_mem_onchip_memory2_0+0xf700ce5c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
    ce64:	0005883a 	mov	r2,zero
}
    ce68:	e037883a 	mov	sp,fp
    ce6c:	dfc00117 	ldw	ra,4(sp)
    ce70:	df000017 	ldw	fp,0(sp)
    ce74:	dec00204 	addi	sp,sp,8
    ce78:	f800283a 	ret

0000ce7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ce7c:	defffe04 	addi	sp,sp,-8
    ce80:	dfc00115 	stw	ra,4(sp)
    ce84:	df000015 	stw	fp,0(sp)
    ce88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ce8c:	d0a00e17 	ldw	r2,-32712(gp)
    ce90:	10000326 	beq	r2,zero,cea0 <alt_get_errno+0x24>
    ce94:	d0a00e17 	ldw	r2,-32712(gp)
    ce98:	103ee83a 	callr	r2
    ce9c:	00000106 	br	cea4 <alt_get_errno+0x28>
    cea0:	d0a7e904 	addi	r2,gp,-24668
}
    cea4:	e037883a 	mov	sp,fp
    cea8:	dfc00117 	ldw	ra,4(sp)
    ceac:	df000017 	ldw	fp,0(sp)
    ceb0:	dec00204 	addi	sp,sp,8
    ceb4:	f800283a 	ret

0000ceb8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    ceb8:	defffb04 	addi	sp,sp,-20
    cebc:	dfc00415 	stw	ra,16(sp)
    cec0:	df000315 	stw	fp,12(sp)
    cec4:	df000304 	addi	fp,sp,12
    cec8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    cecc:	e0bfff17 	ldw	r2,-4(fp)
    ced0:	10000816 	blt	r2,zero,cef4 <close+0x3c>
    ced4:	01400304 	movi	r5,12
    ced8:	e13fff17 	ldw	r4,-4(fp)
    cedc:	0000b940 	call	b94 <__mulsi3>
    cee0:	1007883a 	mov	r3,r2
    cee4:	00800074 	movhi	r2,1
    cee8:	10807104 	addi	r2,r2,452
    ceec:	1885883a 	add	r2,r3,r2
    cef0:	00000106 	br	cef8 <close+0x40>
    cef4:	0005883a 	mov	r2,zero
    cef8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    cefc:	e0bffd17 	ldw	r2,-12(fp)
    cf00:	10001926 	beq	r2,zero,cf68 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    cf04:	e0bffd17 	ldw	r2,-12(fp)
    cf08:	10800017 	ldw	r2,0(r2)
    cf0c:	10800417 	ldw	r2,16(r2)
    cf10:	10000626 	beq	r2,zero,cf2c <close+0x74>
    cf14:	e0bffd17 	ldw	r2,-12(fp)
    cf18:	10800017 	ldw	r2,0(r2)
    cf1c:	10800417 	ldw	r2,16(r2)
    cf20:	e13ffd17 	ldw	r4,-12(fp)
    cf24:	103ee83a 	callr	r2
    cf28:	00000106 	br	cf30 <close+0x78>
    cf2c:	0005883a 	mov	r2,zero
    cf30:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    cf34:	e13fff17 	ldw	r4,-4(fp)
    cf38:	000d8200 	call	d820 <alt_release_fd>
    if (rval < 0)
    cf3c:	e0bffe17 	ldw	r2,-8(fp)
    cf40:	1000070e 	bge	r2,zero,cf60 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    cf44:	000ce7c0 	call	ce7c <alt_get_errno>
    cf48:	1007883a 	mov	r3,r2
    cf4c:	e0bffe17 	ldw	r2,-8(fp)
    cf50:	0085c83a 	sub	r2,zero,r2
    cf54:	18800015 	stw	r2,0(r3)
      return -1;
    cf58:	00bfffc4 	movi	r2,-1
    cf5c:	00000706 	br	cf7c <close+0xc4>
    }
    return 0;
    cf60:	0005883a 	mov	r2,zero
    cf64:	00000506 	br	cf7c <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    cf68:	000ce7c0 	call	ce7c <alt_get_errno>
    cf6c:	1007883a 	mov	r3,r2
    cf70:	00801444 	movi	r2,81
    cf74:	18800015 	stw	r2,0(r3)
    return -1;
    cf78:	00bfffc4 	movi	r2,-1
  }
}
    cf7c:	e037883a 	mov	sp,fp
    cf80:	dfc00117 	ldw	ra,4(sp)
    cf84:	df000017 	ldw	fp,0(sp)
    cf88:	dec00204 	addi	sp,sp,8
    cf8c:	f800283a 	ret

0000cf90 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    cf90:	deffff04 	addi	sp,sp,-4
    cf94:	df000015 	stw	fp,0(sp)
    cf98:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    cf9c:	0001883a 	nop
    cfa0:	e037883a 	mov	sp,fp
    cfa4:	df000017 	ldw	fp,0(sp)
    cfa8:	dec00104 	addi	sp,sp,4
    cfac:	f800283a 	ret

0000cfb0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    cfb0:	defffc04 	addi	sp,sp,-16
    cfb4:	df000315 	stw	fp,12(sp)
    cfb8:	df000304 	addi	fp,sp,12
    cfbc:	e13ffd15 	stw	r4,-12(fp)
    cfc0:	e17ffe15 	stw	r5,-8(fp)
    cfc4:	e1bfff15 	stw	r6,-4(fp)
  return len;
    cfc8:	e0bfff17 	ldw	r2,-4(fp)
}
    cfcc:	e037883a 	mov	sp,fp
    cfd0:	df000017 	ldw	fp,0(sp)
    cfd4:	dec00104 	addi	sp,sp,4
    cfd8:	f800283a 	ret

0000cfdc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cfdc:	defffe04 	addi	sp,sp,-8
    cfe0:	dfc00115 	stw	ra,4(sp)
    cfe4:	df000015 	stw	fp,0(sp)
    cfe8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cfec:	d0a00e17 	ldw	r2,-32712(gp)
    cff0:	10000326 	beq	r2,zero,d000 <alt_get_errno+0x24>
    cff4:	d0a00e17 	ldw	r2,-32712(gp)
    cff8:	103ee83a 	callr	r2
    cffc:	00000106 	br	d004 <alt_get_errno+0x28>
    d000:	d0a7e904 	addi	r2,gp,-24668
}
    d004:	e037883a 	mov	sp,fp
    d008:	dfc00117 	ldw	ra,4(sp)
    d00c:	df000017 	ldw	fp,0(sp)
    d010:	dec00204 	addi	sp,sp,8
    d014:	f800283a 	ret

0000d018 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    d018:	defffa04 	addi	sp,sp,-24
    d01c:	dfc00515 	stw	ra,20(sp)
    d020:	df000415 	stw	fp,16(sp)
    d024:	df000404 	addi	fp,sp,16
    d028:	e13ffe15 	stw	r4,-8(fp)
    d02c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    d030:	e0bffe17 	ldw	r2,-8(fp)
    d034:	10000326 	beq	r2,zero,d044 <alt_dev_llist_insert+0x2c>
    d038:	e0bffe17 	ldw	r2,-8(fp)
    d03c:	10800217 	ldw	r2,8(r2)
    d040:	1000061e 	bne	r2,zero,d05c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    d044:	000cfdc0 	call	cfdc <alt_get_errno>
    d048:	1007883a 	mov	r3,r2
    d04c:	00800584 	movi	r2,22
    d050:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    d054:	00bffa84 	movi	r2,-22
    d058:	00001306 	br	d0a8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    d05c:	e0bffe17 	ldw	r2,-8(fp)
    d060:	e0ffff17 	ldw	r3,-4(fp)
    d064:	e0fffc15 	stw	r3,-16(fp)
    d068:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    d06c:	e0bffd17 	ldw	r2,-12(fp)
    d070:	e0fffc17 	ldw	r3,-16(fp)
    d074:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    d078:	e0bffc17 	ldw	r2,-16(fp)
    d07c:	10c00017 	ldw	r3,0(r2)
    d080:	e0bffd17 	ldw	r2,-12(fp)
    d084:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    d088:	e0bffc17 	ldw	r2,-16(fp)
    d08c:	10800017 	ldw	r2,0(r2)
    d090:	e0fffd17 	ldw	r3,-12(fp)
    d094:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    d098:	e0bffc17 	ldw	r2,-16(fp)
    d09c:	e0fffd17 	ldw	r3,-12(fp)
    d0a0:	10c00015 	stw	r3,0(r2)

  return 0;  
    d0a4:	0005883a 	mov	r2,zero
}
    d0a8:	e037883a 	mov	sp,fp
    d0ac:	dfc00117 	ldw	ra,4(sp)
    d0b0:	df000017 	ldw	fp,0(sp)
    d0b4:	dec00204 	addi	sp,sp,8
    d0b8:	f800283a 	ret

0000d0bc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    d0bc:	defffd04 	addi	sp,sp,-12
    d0c0:	dfc00215 	stw	ra,8(sp)
    d0c4:	df000115 	stw	fp,4(sp)
    d0c8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    d0cc:	00800074 	movhi	r2,1
    d0d0:	10b83d04 	addi	r2,r2,-7948
    d0d4:	e0bfff15 	stw	r2,-4(fp)
    d0d8:	00000606 	br	d0f4 <_do_ctors+0x38>
        (*ctor) (); 
    d0dc:	e0bfff17 	ldw	r2,-4(fp)
    d0e0:	10800017 	ldw	r2,0(r2)
    d0e4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    d0e8:	e0bfff17 	ldw	r2,-4(fp)
    d0ec:	10bfff04 	addi	r2,r2,-4
    d0f0:	e0bfff15 	stw	r2,-4(fp)
    d0f4:	e0ffff17 	ldw	r3,-4(fp)
    d0f8:	00800074 	movhi	r2,1
    d0fc:	10b83e04 	addi	r2,r2,-7944
    d100:	18bff62e 	bgeu	r3,r2,d0dc <__alt_mem_onchip_memory2_0+0xf700d0dc>
        (*ctor) (); 
}
    d104:	0001883a 	nop
    d108:	e037883a 	mov	sp,fp
    d10c:	dfc00117 	ldw	ra,4(sp)
    d110:	df000017 	ldw	fp,0(sp)
    d114:	dec00204 	addi	sp,sp,8
    d118:	f800283a 	ret

0000d11c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    d11c:	defffd04 	addi	sp,sp,-12
    d120:	dfc00215 	stw	ra,8(sp)
    d124:	df000115 	stw	fp,4(sp)
    d128:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    d12c:	00800074 	movhi	r2,1
    d130:	10b83d04 	addi	r2,r2,-7948
    d134:	e0bfff15 	stw	r2,-4(fp)
    d138:	00000606 	br	d154 <_do_dtors+0x38>
        (*dtor) (); 
    d13c:	e0bfff17 	ldw	r2,-4(fp)
    d140:	10800017 	ldw	r2,0(r2)
    d144:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    d148:	e0bfff17 	ldw	r2,-4(fp)
    d14c:	10bfff04 	addi	r2,r2,-4
    d150:	e0bfff15 	stw	r2,-4(fp)
    d154:	e0ffff17 	ldw	r3,-4(fp)
    d158:	00800074 	movhi	r2,1
    d15c:	10b83e04 	addi	r2,r2,-7944
    d160:	18bff62e 	bgeu	r3,r2,d13c <__alt_mem_onchip_memory2_0+0xf700d13c>
        (*dtor) (); 
}
    d164:	0001883a 	nop
    d168:	e037883a 	mov	sp,fp
    d16c:	dfc00117 	ldw	ra,4(sp)
    d170:	df000017 	ldw	fp,0(sp)
    d174:	dec00204 	addi	sp,sp,8
    d178:	f800283a 	ret

0000d17c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    d17c:	deffff04 	addi	sp,sp,-4
    d180:	df000015 	stw	fp,0(sp)
    d184:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    d188:	0001883a 	nop
    d18c:	e037883a 	mov	sp,fp
    d190:	df000017 	ldw	fp,0(sp)
    d194:	dec00104 	addi	sp,sp,4
    d198:	f800283a 	ret

0000d19c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    d19c:	defff904 	addi	sp,sp,-28
    d1a0:	dfc00615 	stw	ra,24(sp)
    d1a4:	df000515 	stw	fp,20(sp)
    d1a8:	df000504 	addi	fp,sp,20
    d1ac:	e13ffc15 	stw	r4,-16(fp)
    d1b0:	e17ffd15 	stw	r5,-12(fp)
    d1b4:	e1bffe15 	stw	r6,-8(fp)
    d1b8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    d1bc:	e0800217 	ldw	r2,8(fp)
    d1c0:	d8800015 	stw	r2,0(sp)
    d1c4:	e1ffff17 	ldw	r7,-4(fp)
    d1c8:	e1bffe17 	ldw	r6,-8(fp)
    d1cc:	e17ffd17 	ldw	r5,-12(fp)
    d1d0:	e13ffc17 	ldw	r4,-16(fp)
    d1d4:	000d34c0 	call	d34c <alt_iic_isr_register>
}  
    d1d8:	e037883a 	mov	sp,fp
    d1dc:	dfc00117 	ldw	ra,4(sp)
    d1e0:	df000017 	ldw	fp,0(sp)
    d1e4:	dec00204 	addi	sp,sp,8
    d1e8:	f800283a 	ret

0000d1ec <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    d1ec:	defff904 	addi	sp,sp,-28
    d1f0:	df000615 	stw	fp,24(sp)
    d1f4:	df000604 	addi	fp,sp,24
    d1f8:	e13ffe15 	stw	r4,-8(fp)
    d1fc:	e17fff15 	stw	r5,-4(fp)
    d200:	e0bfff17 	ldw	r2,-4(fp)
    d204:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d208:	0005303a 	rdctl	r2,status
    d20c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d210:	e0fffb17 	ldw	r3,-20(fp)
    d214:	00bfff84 	movi	r2,-2
    d218:	1884703a 	and	r2,r3,r2
    d21c:	1001703a 	wrctl	status,r2
  
  return context;
    d220:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    d224:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    d228:	00c00044 	movi	r3,1
    d22c:	e0bffa17 	ldw	r2,-24(fp)
    d230:	1884983a 	sll	r2,r3,r2
    d234:	1007883a 	mov	r3,r2
    d238:	d0a7ed17 	ldw	r2,-24652(gp)
    d23c:	1884b03a 	or	r2,r3,r2
    d240:	d0a7ed15 	stw	r2,-24652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    d244:	d0a7ed17 	ldw	r2,-24652(gp)
    d248:	100170fa 	wrctl	ienable,r2
    d24c:	e0bffc17 	ldw	r2,-16(fp)
    d250:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d254:	e0bffd17 	ldw	r2,-12(fp)
    d258:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    d25c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    d260:	0001883a 	nop
}
    d264:	e037883a 	mov	sp,fp
    d268:	df000017 	ldw	fp,0(sp)
    d26c:	dec00104 	addi	sp,sp,4
    d270:	f800283a 	ret

0000d274 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    d274:	defff904 	addi	sp,sp,-28
    d278:	df000615 	stw	fp,24(sp)
    d27c:	df000604 	addi	fp,sp,24
    d280:	e13ffe15 	stw	r4,-8(fp)
    d284:	e17fff15 	stw	r5,-4(fp)
    d288:	e0bfff17 	ldw	r2,-4(fp)
    d28c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d290:	0005303a 	rdctl	r2,status
    d294:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d298:	e0fffb17 	ldw	r3,-20(fp)
    d29c:	00bfff84 	movi	r2,-2
    d2a0:	1884703a 	and	r2,r3,r2
    d2a4:	1001703a 	wrctl	status,r2
  
  return context;
    d2a8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    d2ac:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    d2b0:	00c00044 	movi	r3,1
    d2b4:	e0bffa17 	ldw	r2,-24(fp)
    d2b8:	1884983a 	sll	r2,r3,r2
    d2bc:	0084303a 	nor	r2,zero,r2
    d2c0:	1007883a 	mov	r3,r2
    d2c4:	d0a7ed17 	ldw	r2,-24652(gp)
    d2c8:	1884703a 	and	r2,r3,r2
    d2cc:	d0a7ed15 	stw	r2,-24652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    d2d0:	d0a7ed17 	ldw	r2,-24652(gp)
    d2d4:	100170fa 	wrctl	ienable,r2
    d2d8:	e0bffc17 	ldw	r2,-16(fp)
    d2dc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d2e0:	e0bffd17 	ldw	r2,-12(fp)
    d2e4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    d2e8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    d2ec:	0001883a 	nop
}
    d2f0:	e037883a 	mov	sp,fp
    d2f4:	df000017 	ldw	fp,0(sp)
    d2f8:	dec00104 	addi	sp,sp,4
    d2fc:	f800283a 	ret

0000d300 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    d300:	defffc04 	addi	sp,sp,-16
    d304:	df000315 	stw	fp,12(sp)
    d308:	df000304 	addi	fp,sp,12
    d30c:	e13ffe15 	stw	r4,-8(fp)
    d310:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    d314:	000530fa 	rdctl	r2,ienable
    d318:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    d31c:	00c00044 	movi	r3,1
    d320:	e0bfff17 	ldw	r2,-4(fp)
    d324:	1884983a 	sll	r2,r3,r2
    d328:	1007883a 	mov	r3,r2
    d32c:	e0bffd17 	ldw	r2,-12(fp)
    d330:	1884703a 	and	r2,r3,r2
    d334:	1004c03a 	cmpne	r2,r2,zero
    d338:	10803fcc 	andi	r2,r2,255
}
    d33c:	e037883a 	mov	sp,fp
    d340:	df000017 	ldw	fp,0(sp)
    d344:	dec00104 	addi	sp,sp,4
    d348:	f800283a 	ret

0000d34c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    d34c:	defff504 	addi	sp,sp,-44
    d350:	dfc00a15 	stw	ra,40(sp)
    d354:	df000915 	stw	fp,36(sp)
    d358:	df000904 	addi	fp,sp,36
    d35c:	e13ffc15 	stw	r4,-16(fp)
    d360:	e17ffd15 	stw	r5,-12(fp)
    d364:	e1bffe15 	stw	r6,-8(fp)
    d368:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    d36c:	00bffa84 	movi	r2,-22
    d370:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    d374:	e0bffd17 	ldw	r2,-12(fp)
    d378:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    d37c:	e0bff817 	ldw	r2,-32(fp)
    d380:	10800808 	cmpgei	r2,r2,32
    d384:	1000271e 	bne	r2,zero,d424 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d388:	0005303a 	rdctl	r2,status
    d38c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d390:	e0fffb17 	ldw	r3,-20(fp)
    d394:	00bfff84 	movi	r2,-2
    d398:	1884703a 	and	r2,r3,r2
    d39c:	1001703a 	wrctl	status,r2
  
  return context;
    d3a0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    d3a4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    d3a8:	00800074 	movhi	r2,1
    d3ac:	1088cc04 	addi	r2,r2,9008
    d3b0:	e0fff817 	ldw	r3,-32(fp)
    d3b4:	180690fa 	slli	r3,r3,3
    d3b8:	10c5883a 	add	r2,r2,r3
    d3bc:	e0fffe17 	ldw	r3,-8(fp)
    d3c0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    d3c4:	00800074 	movhi	r2,1
    d3c8:	1088cc04 	addi	r2,r2,9008
    d3cc:	e0fff817 	ldw	r3,-32(fp)
    d3d0:	180690fa 	slli	r3,r3,3
    d3d4:	10c5883a 	add	r2,r2,r3
    d3d8:	10800104 	addi	r2,r2,4
    d3dc:	e0ffff17 	ldw	r3,-4(fp)
    d3e0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    d3e4:	e0bffe17 	ldw	r2,-8(fp)
    d3e8:	10000526 	beq	r2,zero,d400 <alt_iic_isr_register+0xb4>
    d3ec:	e0bff817 	ldw	r2,-32(fp)
    d3f0:	100b883a 	mov	r5,r2
    d3f4:	e13ffc17 	ldw	r4,-16(fp)
    d3f8:	000d1ec0 	call	d1ec <alt_ic_irq_enable>
    d3fc:	00000406 	br	d410 <alt_iic_isr_register+0xc4>
    d400:	e0bff817 	ldw	r2,-32(fp)
    d404:	100b883a 	mov	r5,r2
    d408:	e13ffc17 	ldw	r4,-16(fp)
    d40c:	000d2740 	call	d274 <alt_ic_irq_disable>
    d410:	e0bff715 	stw	r2,-36(fp)
    d414:	e0bffa17 	ldw	r2,-24(fp)
    d418:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d41c:	e0bff917 	ldw	r2,-28(fp)
    d420:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    d424:	e0bff717 	ldw	r2,-36(fp)
}
    d428:	e037883a 	mov	sp,fp
    d42c:	dfc00117 	ldw	ra,4(sp)
    d430:	df000017 	ldw	fp,0(sp)
    d434:	dec00204 	addi	sp,sp,8
    d438:	f800283a 	ret

0000d43c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    d43c:	defff804 	addi	sp,sp,-32
    d440:	dfc00715 	stw	ra,28(sp)
    d444:	df000615 	stw	fp,24(sp)
    d448:	dc000515 	stw	r16,20(sp)
    d44c:	df000604 	addi	fp,sp,24
    d450:	e13ffb15 	stw	r4,-20(fp)
    d454:	e17ffc15 	stw	r5,-16(fp)
    d458:	e1bffd15 	stw	r6,-12(fp)
    d45c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    d460:	e1bffe17 	ldw	r6,-8(fp)
    d464:	e17ffd17 	ldw	r5,-12(fp)
    d468:	e13ffc17 	ldw	r4,-16(fp)
    d46c:	000d6c40 	call	d6c4 <open>
    d470:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    d474:	e0bffa17 	ldw	r2,-24(fp)
    d478:	10002216 	blt	r2,zero,d504 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    d47c:	04000074 	movhi	r16,1
    d480:	84007104 	addi	r16,r16,452
    d484:	e0bffa17 	ldw	r2,-24(fp)
    d488:	01400304 	movi	r5,12
    d48c:	1009883a 	mov	r4,r2
    d490:	0000b940 	call	b94 <__mulsi3>
    d494:	8085883a 	add	r2,r16,r2
    d498:	10c00017 	ldw	r3,0(r2)
    d49c:	e0bffb17 	ldw	r2,-20(fp)
    d4a0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    d4a4:	04000074 	movhi	r16,1
    d4a8:	84007104 	addi	r16,r16,452
    d4ac:	e0bffa17 	ldw	r2,-24(fp)
    d4b0:	01400304 	movi	r5,12
    d4b4:	1009883a 	mov	r4,r2
    d4b8:	0000b940 	call	b94 <__mulsi3>
    d4bc:	8085883a 	add	r2,r16,r2
    d4c0:	10800104 	addi	r2,r2,4
    d4c4:	10c00017 	ldw	r3,0(r2)
    d4c8:	e0bffb17 	ldw	r2,-20(fp)
    d4cc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    d4d0:	04000074 	movhi	r16,1
    d4d4:	84007104 	addi	r16,r16,452
    d4d8:	e0bffa17 	ldw	r2,-24(fp)
    d4dc:	01400304 	movi	r5,12
    d4e0:	1009883a 	mov	r4,r2
    d4e4:	0000b940 	call	b94 <__mulsi3>
    d4e8:	8085883a 	add	r2,r16,r2
    d4ec:	10800204 	addi	r2,r2,8
    d4f0:	10c00017 	ldw	r3,0(r2)
    d4f4:	e0bffb17 	ldw	r2,-20(fp)
    d4f8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    d4fc:	e13ffa17 	ldw	r4,-24(fp)
    d500:	000d8200 	call	d820 <alt_release_fd>
  }
} 
    d504:	0001883a 	nop
    d508:	e6ffff04 	addi	sp,fp,-4
    d50c:	dfc00217 	ldw	ra,8(sp)
    d510:	df000117 	ldw	fp,4(sp)
    d514:	dc000017 	ldw	r16,0(sp)
    d518:	dec00304 	addi	sp,sp,12
    d51c:	f800283a 	ret

0000d520 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    d520:	defffb04 	addi	sp,sp,-20
    d524:	dfc00415 	stw	ra,16(sp)
    d528:	df000315 	stw	fp,12(sp)
    d52c:	df000304 	addi	fp,sp,12
    d530:	e13ffd15 	stw	r4,-12(fp)
    d534:	e17ffe15 	stw	r5,-8(fp)
    d538:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    d53c:	01c07fc4 	movi	r7,511
    d540:	01800044 	movi	r6,1
    d544:	e17ffd17 	ldw	r5,-12(fp)
    d548:	01000074 	movhi	r4,1
    d54c:	21007404 	addi	r4,r4,464
    d550:	000d43c0 	call	d43c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    d554:	01c07fc4 	movi	r7,511
    d558:	000d883a 	mov	r6,zero
    d55c:	e17ffe17 	ldw	r5,-8(fp)
    d560:	01000074 	movhi	r4,1
    d564:	21007104 	addi	r4,r4,452
    d568:	000d43c0 	call	d43c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    d56c:	01c07fc4 	movi	r7,511
    d570:	01800044 	movi	r6,1
    d574:	e17fff17 	ldw	r5,-4(fp)
    d578:	01000074 	movhi	r4,1
    d57c:	21007704 	addi	r4,r4,476
    d580:	000d43c0 	call	d43c <alt_open_fd>
}  
    d584:	0001883a 	nop
    d588:	e037883a 	mov	sp,fp
    d58c:	dfc00117 	ldw	ra,4(sp)
    d590:	df000017 	ldw	fp,0(sp)
    d594:	dec00204 	addi	sp,sp,8
    d598:	f800283a 	ret

0000d59c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d59c:	defffe04 	addi	sp,sp,-8
    d5a0:	dfc00115 	stw	ra,4(sp)
    d5a4:	df000015 	stw	fp,0(sp)
    d5a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d5ac:	d0a00e17 	ldw	r2,-32712(gp)
    d5b0:	10000326 	beq	r2,zero,d5c0 <alt_get_errno+0x24>
    d5b4:	d0a00e17 	ldw	r2,-32712(gp)
    d5b8:	103ee83a 	callr	r2
    d5bc:	00000106 	br	d5c4 <alt_get_errno+0x28>
    d5c0:	d0a7e904 	addi	r2,gp,-24668
}
    d5c4:	e037883a 	mov	sp,fp
    d5c8:	dfc00117 	ldw	ra,4(sp)
    d5cc:	df000017 	ldw	fp,0(sp)
    d5d0:	dec00204 	addi	sp,sp,8
    d5d4:	f800283a 	ret

0000d5d8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    d5d8:	defffb04 	addi	sp,sp,-20
    d5dc:	dfc00415 	stw	ra,16(sp)
    d5e0:	df000315 	stw	fp,12(sp)
    d5e4:	dc000215 	stw	r16,8(sp)
    d5e8:	df000304 	addi	fp,sp,12
    d5ec:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    d5f0:	e0bffe17 	ldw	r2,-8(fp)
    d5f4:	10800217 	ldw	r2,8(r2)
    d5f8:	10d00034 	orhi	r3,r2,16384
    d5fc:	e0bffe17 	ldw	r2,-8(fp)
    d600:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    d604:	e03ffd15 	stw	zero,-12(fp)
    d608:	00002306 	br	d698 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    d60c:	04000074 	movhi	r16,1
    d610:	84007104 	addi	r16,r16,452
    d614:	e0bffd17 	ldw	r2,-12(fp)
    d618:	01400304 	movi	r5,12
    d61c:	1009883a 	mov	r4,r2
    d620:	0000b940 	call	b94 <__mulsi3>
    d624:	8085883a 	add	r2,r16,r2
    d628:	10c00017 	ldw	r3,0(r2)
    d62c:	e0bffe17 	ldw	r2,-8(fp)
    d630:	10800017 	ldw	r2,0(r2)
    d634:	1880151e 	bne	r3,r2,d68c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    d638:	04000074 	movhi	r16,1
    d63c:	84007104 	addi	r16,r16,452
    d640:	e0bffd17 	ldw	r2,-12(fp)
    d644:	01400304 	movi	r5,12
    d648:	1009883a 	mov	r4,r2
    d64c:	0000b940 	call	b94 <__mulsi3>
    d650:	8085883a 	add	r2,r16,r2
    d654:	10800204 	addi	r2,r2,8
    d658:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    d65c:	10000b0e 	bge	r2,zero,d68c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    d660:	01400304 	movi	r5,12
    d664:	e13ffd17 	ldw	r4,-12(fp)
    d668:	0000b940 	call	b94 <__mulsi3>
    d66c:	1007883a 	mov	r3,r2
    d670:	00800074 	movhi	r2,1
    d674:	10807104 	addi	r2,r2,452
    d678:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    d67c:	e0bffe17 	ldw	r2,-8(fp)
    d680:	18800226 	beq	r3,r2,d68c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    d684:	00bffcc4 	movi	r2,-13
    d688:	00000806 	br	d6ac <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    d68c:	e0bffd17 	ldw	r2,-12(fp)
    d690:	10800044 	addi	r2,r2,1
    d694:	e0bffd15 	stw	r2,-12(fp)
    d698:	d0a00d17 	ldw	r2,-32716(gp)
    d69c:	1007883a 	mov	r3,r2
    d6a0:	e0bffd17 	ldw	r2,-12(fp)
    d6a4:	18bfd92e 	bgeu	r3,r2,d60c <__alt_mem_onchip_memory2_0+0xf700d60c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    d6a8:	0005883a 	mov	r2,zero
}
    d6ac:	e6ffff04 	addi	sp,fp,-4
    d6b0:	dfc00217 	ldw	ra,8(sp)
    d6b4:	df000117 	ldw	fp,4(sp)
    d6b8:	dc000017 	ldw	r16,0(sp)
    d6bc:	dec00304 	addi	sp,sp,12
    d6c0:	f800283a 	ret

0000d6c4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    d6c4:	defff604 	addi	sp,sp,-40
    d6c8:	dfc00915 	stw	ra,36(sp)
    d6cc:	df000815 	stw	fp,32(sp)
    d6d0:	df000804 	addi	fp,sp,32
    d6d4:	e13ffd15 	stw	r4,-12(fp)
    d6d8:	e17ffe15 	stw	r5,-8(fp)
    d6dc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    d6e0:	00bfffc4 	movi	r2,-1
    d6e4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    d6e8:	00bffb44 	movi	r2,-19
    d6ec:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    d6f0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    d6f4:	d1600b04 	addi	r5,gp,-32724
    d6f8:	e13ffd17 	ldw	r4,-12(fp)
    d6fc:	000da6c0 	call	da6c <alt_find_dev>
    d700:	e0bff815 	stw	r2,-32(fp)
    d704:	e0bff817 	ldw	r2,-32(fp)
    d708:	1000051e 	bne	r2,zero,d720 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    d70c:	e13ffd17 	ldw	r4,-12(fp)
    d710:	000dafc0 	call	dafc <alt_find_file>
    d714:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    d718:	00800044 	movi	r2,1
    d71c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    d720:	e0bff817 	ldw	r2,-32(fp)
    d724:	10002b26 	beq	r2,zero,d7d4 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
    d728:	e13ff817 	ldw	r4,-32(fp)
    d72c:	000dc040 	call	dc04 <alt_get_fd>
    d730:	e0bff915 	stw	r2,-28(fp)
    d734:	e0bff917 	ldw	r2,-28(fp)
    d738:	1000030e 	bge	r2,zero,d748 <open+0x84>
    {
      status = index;
    d73c:	e0bff917 	ldw	r2,-28(fp)
    d740:	e0bffa15 	stw	r2,-24(fp)
    d744:	00002506 	br	d7dc <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
    d748:	01400304 	movi	r5,12
    d74c:	e13ff917 	ldw	r4,-28(fp)
    d750:	0000b940 	call	b94 <__mulsi3>
    d754:	1007883a 	mov	r3,r2
    d758:	00800074 	movhi	r2,1
    d75c:	10807104 	addi	r2,r2,452
    d760:	1885883a 	add	r2,r3,r2
    d764:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    d768:	e0fffe17 	ldw	r3,-8(fp)
    d76c:	00900034 	movhi	r2,16384
    d770:	10bfffc4 	addi	r2,r2,-1
    d774:	1886703a 	and	r3,r3,r2
    d778:	e0bffc17 	ldw	r2,-16(fp)
    d77c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    d780:	e0bffb17 	ldw	r2,-20(fp)
    d784:	1000051e 	bne	r2,zero,d79c <open+0xd8>
    d788:	e13ffc17 	ldw	r4,-16(fp)
    d78c:	000d5d80 	call	d5d8 <alt_file_locked>
    d790:	e0bffa15 	stw	r2,-24(fp)
    d794:	e0bffa17 	ldw	r2,-24(fp)
    d798:	10001016 	blt	r2,zero,d7dc <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    d79c:	e0bff817 	ldw	r2,-32(fp)
    d7a0:	10800317 	ldw	r2,12(r2)
    d7a4:	10000826 	beq	r2,zero,d7c8 <open+0x104>
    d7a8:	e0bff817 	ldw	r2,-32(fp)
    d7ac:	10800317 	ldw	r2,12(r2)
    d7b0:	e1ffff17 	ldw	r7,-4(fp)
    d7b4:	e1bffe17 	ldw	r6,-8(fp)
    d7b8:	e17ffd17 	ldw	r5,-12(fp)
    d7bc:	e13ffc17 	ldw	r4,-16(fp)
    d7c0:	103ee83a 	callr	r2
    d7c4:	00000106 	br	d7cc <open+0x108>
    d7c8:	0005883a 	mov	r2,zero
    d7cc:	e0bffa15 	stw	r2,-24(fp)
    d7d0:	00000206 	br	d7dc <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
    d7d4:	00bffb44 	movi	r2,-19
    d7d8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    d7dc:	e0bffa17 	ldw	r2,-24(fp)
    d7e0:	1000090e 	bge	r2,zero,d808 <open+0x144>
  {
    alt_release_fd (index);  
    d7e4:	e13ff917 	ldw	r4,-28(fp)
    d7e8:	000d8200 	call	d820 <alt_release_fd>
    ALT_ERRNO = -status;
    d7ec:	000d59c0 	call	d59c <alt_get_errno>
    d7f0:	1007883a 	mov	r3,r2
    d7f4:	e0bffa17 	ldw	r2,-24(fp)
    d7f8:	0085c83a 	sub	r2,zero,r2
    d7fc:	18800015 	stw	r2,0(r3)
    return -1;
    d800:	00bfffc4 	movi	r2,-1
    d804:	00000106 	br	d80c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
    d808:	e0bff917 	ldw	r2,-28(fp)
}
    d80c:	e037883a 	mov	sp,fp
    d810:	dfc00117 	ldw	ra,4(sp)
    d814:	df000017 	ldw	fp,0(sp)
    d818:	dec00204 	addi	sp,sp,8
    d81c:	f800283a 	ret

0000d820 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d820:	defffc04 	addi	sp,sp,-16
    d824:	dfc00315 	stw	ra,12(sp)
    d828:	df000215 	stw	fp,8(sp)
    d82c:	dc000115 	stw	r16,4(sp)
    d830:	df000204 	addi	fp,sp,8
    d834:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    d838:	e0bffe17 	ldw	r2,-8(fp)
    d83c:	108000d0 	cmplti	r2,r2,3
    d840:	1000111e 	bne	r2,zero,d888 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    d844:	04000074 	movhi	r16,1
    d848:	84007104 	addi	r16,r16,452
    d84c:	e0bffe17 	ldw	r2,-8(fp)
    d850:	01400304 	movi	r5,12
    d854:	1009883a 	mov	r4,r2
    d858:	0000b940 	call	b94 <__mulsi3>
    d85c:	8085883a 	add	r2,r16,r2
    d860:	10800204 	addi	r2,r2,8
    d864:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d868:	04000074 	movhi	r16,1
    d86c:	84007104 	addi	r16,r16,452
    d870:	e0bffe17 	ldw	r2,-8(fp)
    d874:	01400304 	movi	r5,12
    d878:	1009883a 	mov	r4,r2
    d87c:	0000b940 	call	b94 <__mulsi3>
    d880:	8085883a 	add	r2,r16,r2
    d884:	10000015 	stw	zero,0(r2)
  }
}
    d888:	0001883a 	nop
    d88c:	e6ffff04 	addi	sp,fp,-4
    d890:	dfc00217 	ldw	ra,8(sp)
    d894:	df000117 	ldw	fp,4(sp)
    d898:	dc000017 	ldw	r16,0(sp)
    d89c:	dec00304 	addi	sp,sp,12
    d8a0:	f800283a 	ret

0000d8a4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    d8a4:	defffa04 	addi	sp,sp,-24
    d8a8:	df000515 	stw	fp,20(sp)
    d8ac:	df000504 	addi	fp,sp,20
    d8b0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d8b4:	0005303a 	rdctl	r2,status
    d8b8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d8bc:	e0fffc17 	ldw	r3,-16(fp)
    d8c0:	00bfff84 	movi	r2,-2
    d8c4:	1884703a 	and	r2,r3,r2
    d8c8:	1001703a 	wrctl	status,r2
  
  return context;
    d8cc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    d8d0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    d8d4:	e0bfff17 	ldw	r2,-4(fp)
    d8d8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    d8dc:	e0bffd17 	ldw	r2,-12(fp)
    d8e0:	10800017 	ldw	r2,0(r2)
    d8e4:	e0fffd17 	ldw	r3,-12(fp)
    d8e8:	18c00117 	ldw	r3,4(r3)
    d8ec:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    d8f0:	e0bffd17 	ldw	r2,-12(fp)
    d8f4:	10800117 	ldw	r2,4(r2)
    d8f8:	e0fffd17 	ldw	r3,-12(fp)
    d8fc:	18c00017 	ldw	r3,0(r3)
    d900:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    d904:	e0bffd17 	ldw	r2,-12(fp)
    d908:	e0fffd17 	ldw	r3,-12(fp)
    d90c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    d910:	e0bffd17 	ldw	r2,-12(fp)
    d914:	e0fffd17 	ldw	r3,-12(fp)
    d918:	10c00015 	stw	r3,0(r2)
    d91c:	e0bffb17 	ldw	r2,-20(fp)
    d920:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d924:	e0bffe17 	ldw	r2,-8(fp)
    d928:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    d92c:	0001883a 	nop
    d930:	e037883a 	mov	sp,fp
    d934:	df000017 	ldw	fp,0(sp)
    d938:	dec00104 	addi	sp,sp,4
    d93c:	f800283a 	ret

0000d940 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    d940:	defffb04 	addi	sp,sp,-20
    d944:	dfc00415 	stw	ra,16(sp)
    d948:	df000315 	stw	fp,12(sp)
    d94c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    d950:	d0a01017 	ldw	r2,-32704(gp)
    d954:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    d958:	d0a7ef17 	ldw	r2,-24644(gp)
    d95c:	10800044 	addi	r2,r2,1
    d960:	d0a7ef15 	stw	r2,-24644(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    d964:	00002e06 	br	da20 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    d968:	e0bffd17 	ldw	r2,-12(fp)
    d96c:	10800017 	ldw	r2,0(r2)
    d970:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    d974:	e0bffd17 	ldw	r2,-12(fp)
    d978:	10800403 	ldbu	r2,16(r2)
    d97c:	10803fcc 	andi	r2,r2,255
    d980:	10000426 	beq	r2,zero,d994 <alt_tick+0x54>
    d984:	d0a7ef17 	ldw	r2,-24644(gp)
    d988:	1000021e 	bne	r2,zero,d994 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    d98c:	e0bffd17 	ldw	r2,-12(fp)
    d990:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    d994:	e0bffd17 	ldw	r2,-12(fp)
    d998:	10800217 	ldw	r2,8(r2)
    d99c:	d0e7ef17 	ldw	r3,-24644(gp)
    d9a0:	18801d36 	bltu	r3,r2,da18 <alt_tick+0xd8>
    d9a4:	e0bffd17 	ldw	r2,-12(fp)
    d9a8:	10800403 	ldbu	r2,16(r2)
    d9ac:	10803fcc 	andi	r2,r2,255
    d9b0:	1000191e 	bne	r2,zero,da18 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    d9b4:	e0bffd17 	ldw	r2,-12(fp)
    d9b8:	10800317 	ldw	r2,12(r2)
    d9bc:	e0fffd17 	ldw	r3,-12(fp)
    d9c0:	18c00517 	ldw	r3,20(r3)
    d9c4:	1809883a 	mov	r4,r3
    d9c8:	103ee83a 	callr	r2
    d9cc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    d9d0:	e0bfff17 	ldw	r2,-4(fp)
    d9d4:	1000031e 	bne	r2,zero,d9e4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    d9d8:	e13ffd17 	ldw	r4,-12(fp)
    d9dc:	000d8a40 	call	d8a4 <alt_alarm_stop>
    d9e0:	00000d06 	br	da18 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    d9e4:	e0bffd17 	ldw	r2,-12(fp)
    d9e8:	10c00217 	ldw	r3,8(r2)
    d9ec:	e0bfff17 	ldw	r2,-4(fp)
    d9f0:	1887883a 	add	r3,r3,r2
    d9f4:	e0bffd17 	ldw	r2,-12(fp)
    d9f8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    d9fc:	e0bffd17 	ldw	r2,-12(fp)
    da00:	10c00217 	ldw	r3,8(r2)
    da04:	d0a7ef17 	ldw	r2,-24644(gp)
    da08:	1880032e 	bgeu	r3,r2,da18 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    da0c:	e0bffd17 	ldw	r2,-12(fp)
    da10:	00c00044 	movi	r3,1
    da14:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    da18:	e0bffe17 	ldw	r2,-8(fp)
    da1c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    da20:	e0fffd17 	ldw	r3,-12(fp)
    da24:	d0a01004 	addi	r2,gp,-32704
    da28:	18bfcf1e 	bne	r3,r2,d968 <__alt_mem_onchip_memory2_0+0xf700d968>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    da2c:	0001883a 	nop
}
    da30:	0001883a 	nop
    da34:	e037883a 	mov	sp,fp
    da38:	dfc00117 	ldw	ra,4(sp)
    da3c:	df000017 	ldw	fp,0(sp)
    da40:	dec00204 	addi	sp,sp,8
    da44:	f800283a 	ret

0000da48 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    da48:	deffff04 	addi	sp,sp,-4
    da4c:	df000015 	stw	fp,0(sp)
    da50:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    da54:	000170fa 	wrctl	ienable,zero
}
    da58:	0001883a 	nop
    da5c:	e037883a 	mov	sp,fp
    da60:	df000017 	ldw	fp,0(sp)
    da64:	dec00104 	addi	sp,sp,4
    da68:	f800283a 	ret

0000da6c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    da6c:	defffa04 	addi	sp,sp,-24
    da70:	dfc00515 	stw	ra,20(sp)
    da74:	df000415 	stw	fp,16(sp)
    da78:	df000404 	addi	fp,sp,16
    da7c:	e13ffe15 	stw	r4,-8(fp)
    da80:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    da84:	e0bfff17 	ldw	r2,-4(fp)
    da88:	10800017 	ldw	r2,0(r2)
    da8c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    da90:	e13ffe17 	ldw	r4,-8(fp)
    da94:	0000cfc0 	call	cfc <strlen>
    da98:	10800044 	addi	r2,r2,1
    da9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    daa0:	00000d06 	br	dad8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    daa4:	e0bffc17 	ldw	r2,-16(fp)
    daa8:	10800217 	ldw	r2,8(r2)
    daac:	e0fffd17 	ldw	r3,-12(fp)
    dab0:	180d883a 	mov	r6,r3
    dab4:	e17ffe17 	ldw	r5,-8(fp)
    dab8:	1009883a 	mov	r4,r2
    dabc:	000ddb00 	call	ddb0 <memcmp>
    dac0:	1000021e 	bne	r2,zero,dacc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    dac4:	e0bffc17 	ldw	r2,-16(fp)
    dac8:	00000706 	br	dae8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    dacc:	e0bffc17 	ldw	r2,-16(fp)
    dad0:	10800017 	ldw	r2,0(r2)
    dad4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    dad8:	e0fffc17 	ldw	r3,-16(fp)
    dadc:	e0bfff17 	ldw	r2,-4(fp)
    dae0:	18bff01e 	bne	r3,r2,daa4 <__alt_mem_onchip_memory2_0+0xf700daa4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    dae4:	0005883a 	mov	r2,zero
}
    dae8:	e037883a 	mov	sp,fp
    daec:	dfc00117 	ldw	ra,4(sp)
    daf0:	df000017 	ldw	fp,0(sp)
    daf4:	dec00204 	addi	sp,sp,8
    daf8:	f800283a 	ret

0000dafc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    dafc:	defffb04 	addi	sp,sp,-20
    db00:	dfc00415 	stw	ra,16(sp)
    db04:	df000315 	stw	fp,12(sp)
    db08:	df000304 	addi	fp,sp,12
    db0c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    db10:	d0a00917 	ldw	r2,-32732(gp)
    db14:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    db18:	00003106 	br	dbe0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    db1c:	e0bffd17 	ldw	r2,-12(fp)
    db20:	10800217 	ldw	r2,8(r2)
    db24:	1009883a 	mov	r4,r2
    db28:	0000cfc0 	call	cfc <strlen>
    db2c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    db30:	e0bffd17 	ldw	r2,-12(fp)
    db34:	10c00217 	ldw	r3,8(r2)
    db38:	e0bffe17 	ldw	r2,-8(fp)
    db3c:	10bfffc4 	addi	r2,r2,-1
    db40:	1885883a 	add	r2,r3,r2
    db44:	10800003 	ldbu	r2,0(r2)
    db48:	10803fcc 	andi	r2,r2,255
    db4c:	1080201c 	xori	r2,r2,128
    db50:	10bfe004 	addi	r2,r2,-128
    db54:	10800bd8 	cmpnei	r2,r2,47
    db58:	1000031e 	bne	r2,zero,db68 <alt_find_file+0x6c>
    {
      len -= 1;
    db5c:	e0bffe17 	ldw	r2,-8(fp)
    db60:	10bfffc4 	addi	r2,r2,-1
    db64:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    db68:	e0bffe17 	ldw	r2,-8(fp)
    db6c:	e0ffff17 	ldw	r3,-4(fp)
    db70:	1885883a 	add	r2,r3,r2
    db74:	10800003 	ldbu	r2,0(r2)
    db78:	10803fcc 	andi	r2,r2,255
    db7c:	1080201c 	xori	r2,r2,128
    db80:	10bfe004 	addi	r2,r2,-128
    db84:	10800be0 	cmpeqi	r2,r2,47
    db88:	1000081e 	bne	r2,zero,dbac <alt_find_file+0xb0>
    db8c:	e0bffe17 	ldw	r2,-8(fp)
    db90:	e0ffff17 	ldw	r3,-4(fp)
    db94:	1885883a 	add	r2,r3,r2
    db98:	10800003 	ldbu	r2,0(r2)
    db9c:	10803fcc 	andi	r2,r2,255
    dba0:	1080201c 	xori	r2,r2,128
    dba4:	10bfe004 	addi	r2,r2,-128
    dba8:	10000a1e 	bne	r2,zero,dbd4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    dbac:	e0bffd17 	ldw	r2,-12(fp)
    dbb0:	10800217 	ldw	r2,8(r2)
    dbb4:	e0fffe17 	ldw	r3,-8(fp)
    dbb8:	180d883a 	mov	r6,r3
    dbbc:	e17fff17 	ldw	r5,-4(fp)
    dbc0:	1009883a 	mov	r4,r2
    dbc4:	000ddb00 	call	ddb0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    dbc8:	1000021e 	bne	r2,zero,dbd4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    dbcc:	e0bffd17 	ldw	r2,-12(fp)
    dbd0:	00000706 	br	dbf0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    dbd4:	e0bffd17 	ldw	r2,-12(fp)
    dbd8:	10800017 	ldw	r2,0(r2)
    dbdc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    dbe0:	e0fffd17 	ldw	r3,-12(fp)
    dbe4:	d0a00904 	addi	r2,gp,-32732
    dbe8:	18bfcc1e 	bne	r3,r2,db1c <__alt_mem_onchip_memory2_0+0xf700db1c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    dbec:	0005883a 	mov	r2,zero
}
    dbf0:	e037883a 	mov	sp,fp
    dbf4:	dfc00117 	ldw	ra,4(sp)
    dbf8:	df000017 	ldw	fp,0(sp)
    dbfc:	dec00204 	addi	sp,sp,8
    dc00:	f800283a 	ret

0000dc04 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    dc04:	defffa04 	addi	sp,sp,-24
    dc08:	dfc00515 	stw	ra,20(sp)
    dc0c:	df000415 	stw	fp,16(sp)
    dc10:	dc000315 	stw	r16,12(sp)
    dc14:	df000404 	addi	fp,sp,16
    dc18:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    dc1c:	00bffa04 	movi	r2,-24
    dc20:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    dc24:	e03ffc15 	stw	zero,-16(fp)
    dc28:	00001d06 	br	dca0 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
    dc2c:	04000074 	movhi	r16,1
    dc30:	84007104 	addi	r16,r16,452
    dc34:	e0bffc17 	ldw	r2,-16(fp)
    dc38:	01400304 	movi	r5,12
    dc3c:	1009883a 	mov	r4,r2
    dc40:	0000b940 	call	b94 <__mulsi3>
    dc44:	8085883a 	add	r2,r16,r2
    dc48:	10800017 	ldw	r2,0(r2)
    dc4c:	1000111e 	bne	r2,zero,dc94 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
    dc50:	04000074 	movhi	r16,1
    dc54:	84007104 	addi	r16,r16,452
    dc58:	e0bffc17 	ldw	r2,-16(fp)
    dc5c:	01400304 	movi	r5,12
    dc60:	1009883a 	mov	r4,r2
    dc64:	0000b940 	call	b94 <__mulsi3>
    dc68:	8085883a 	add	r2,r16,r2
    dc6c:	e0fffe17 	ldw	r3,-8(fp)
    dc70:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    dc74:	d0e00d17 	ldw	r3,-32716(gp)
    dc78:	e0bffc17 	ldw	r2,-16(fp)
    dc7c:	1880020e 	bge	r3,r2,dc88 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    dc80:	e0bffc17 	ldw	r2,-16(fp)
    dc84:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
    dc88:	e0bffc17 	ldw	r2,-16(fp)
    dc8c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    dc90:	00000606 	br	dcac <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    dc94:	e0bffc17 	ldw	r2,-16(fp)
    dc98:	10800044 	addi	r2,r2,1
    dc9c:	e0bffc15 	stw	r2,-16(fp)
    dca0:	e0bffc17 	ldw	r2,-16(fp)
    dca4:	10800810 	cmplti	r2,r2,32
    dca8:	103fe01e 	bne	r2,zero,dc2c <__alt_mem_onchip_memory2_0+0xf700dc2c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    dcac:	e0bffd17 	ldw	r2,-12(fp)
}
    dcb0:	e6ffff04 	addi	sp,fp,-4
    dcb4:	dfc00217 	ldw	ra,8(sp)
    dcb8:	df000117 	ldw	fp,4(sp)
    dcbc:	dc000017 	ldw	r16,0(sp)
    dcc0:	dec00304 	addi	sp,sp,12
    dcc4:	f800283a 	ret

0000dcc8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    dcc8:	defffe04 	addi	sp,sp,-8
    dccc:	df000115 	stw	fp,4(sp)
    dcd0:	df000104 	addi	fp,sp,4
    dcd4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    dcd8:	e0bfff17 	ldw	r2,-4(fp)
    dcdc:	10bffe84 	addi	r2,r2,-6
    dce0:	10c00428 	cmpgeui	r3,r2,16
    dce4:	18001a1e 	bne	r3,zero,dd50 <alt_exception_cause_generated_bad_addr+0x88>
    dce8:	100690ba 	slli	r3,r2,2
    dcec:	00800074 	movhi	r2,1
    dcf0:	10b74004 	addi	r2,r2,-8960
    dcf4:	1885883a 	add	r2,r3,r2
    dcf8:	10800017 	ldw	r2,0(r2)
    dcfc:	1000683a 	jmp	r2
    dd00:	0000dd40 	call	dd4 <___svfprintf_internal_r+0x40>
    dd04:	0000dd40 	call	dd4 <___svfprintf_internal_r+0x40>
    dd08:	0000dd50 	cmplti	zero,zero,885
    dd0c:	0000dd50 	cmplti	zero,zero,885
    dd10:	0000dd50 	cmplti	zero,zero,885
    dd14:	0000dd40 	call	dd4 <___svfprintf_internal_r+0x40>
    dd18:	0000dd48 	cmpgei	zero,zero,885
    dd1c:	0000dd50 	cmplti	zero,zero,885
    dd20:	0000dd40 	call	dd4 <___svfprintf_internal_r+0x40>
    dd24:	0000dd40 	call	dd4 <___svfprintf_internal_r+0x40>
    dd28:	0000dd50 	cmplti	zero,zero,885
    dd2c:	0000dd40 	call	dd4 <___svfprintf_internal_r+0x40>
    dd30:	0000dd48 	cmpgei	zero,zero,885
    dd34:	0000dd50 	cmplti	zero,zero,885
    dd38:	0000dd50 	cmplti	zero,zero,885
    dd3c:	0000dd40 	call	dd4 <___svfprintf_internal_r+0x40>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    dd40:	00800044 	movi	r2,1
    dd44:	00000306 	br	dd54 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    dd48:	0005883a 	mov	r2,zero
    dd4c:	00000106 	br	dd54 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    dd50:	0005883a 	mov	r2,zero
  }
}
    dd54:	e037883a 	mov	sp,fp
    dd58:	df000017 	ldw	fp,0(sp)
    dd5c:	dec00104 	addi	sp,sp,4
    dd60:	f800283a 	ret

0000dd64 <atexit>:
    dd64:	200b883a 	mov	r5,r4
    dd68:	000f883a 	mov	r7,zero
    dd6c:	000d883a 	mov	r6,zero
    dd70:	0009883a 	mov	r4,zero
    dd74:	000de2c1 	jmpi	de2c <__register_exitproc>

0000dd78 <exit>:
    dd78:	defffe04 	addi	sp,sp,-8
    dd7c:	000b883a 	mov	r5,zero
    dd80:	dc000015 	stw	r16,0(sp)
    dd84:	dfc00115 	stw	ra,4(sp)
    dd88:	2021883a 	mov	r16,r4
    dd8c:	000df440 	call	df44 <__call_exitprocs>
    dd90:	00800074 	movhi	r2,1
    dd94:	1080d404 	addi	r2,r2,848
    dd98:	11000017 	ldw	r4,0(r2)
    dd9c:	20800f17 	ldw	r2,60(r4)
    dda0:	10000126 	beq	r2,zero,dda8 <exit+0x30>
    dda4:	103ee83a 	callr	r2
    dda8:	8009883a 	mov	r4,r16
    ddac:	000e0c40 	call	e0c4 <_exit>

0000ddb0 <memcmp>:
    ddb0:	01c000c4 	movi	r7,3
    ddb4:	3980192e 	bgeu	r7,r6,de1c <memcmp+0x6c>
    ddb8:	2144b03a 	or	r2,r4,r5
    ddbc:	11c4703a 	and	r2,r2,r7
    ddc0:	10000f26 	beq	r2,zero,de00 <memcmp+0x50>
    ddc4:	20800003 	ldbu	r2,0(r4)
    ddc8:	28c00003 	ldbu	r3,0(r5)
    ddcc:	10c0151e 	bne	r2,r3,de24 <memcmp+0x74>
    ddd0:	31bfff84 	addi	r6,r6,-2
    ddd4:	01ffffc4 	movi	r7,-1
    ddd8:	00000406 	br	ddec <memcmp+0x3c>
    dddc:	20800003 	ldbu	r2,0(r4)
    dde0:	28c00003 	ldbu	r3,0(r5)
    dde4:	31bfffc4 	addi	r6,r6,-1
    dde8:	10c00e1e 	bne	r2,r3,de24 <memcmp+0x74>
    ddec:	21000044 	addi	r4,r4,1
    ddf0:	29400044 	addi	r5,r5,1
    ddf4:	31fff91e 	bne	r6,r7,dddc <__alt_mem_onchip_memory2_0+0xf700dddc>
    ddf8:	0005883a 	mov	r2,zero
    ddfc:	f800283a 	ret
    de00:	20c00017 	ldw	r3,0(r4)
    de04:	28800017 	ldw	r2,0(r5)
    de08:	18bfee1e 	bne	r3,r2,ddc4 <__alt_mem_onchip_memory2_0+0xf700ddc4>
    de0c:	31bfff04 	addi	r6,r6,-4
    de10:	21000104 	addi	r4,r4,4
    de14:	29400104 	addi	r5,r5,4
    de18:	39bff936 	bltu	r7,r6,de00 <__alt_mem_onchip_memory2_0+0xf700de00>
    de1c:	303fe91e 	bne	r6,zero,ddc4 <__alt_mem_onchip_memory2_0+0xf700ddc4>
    de20:	003ff506 	br	ddf8 <__alt_mem_onchip_memory2_0+0xf700ddf8>
    de24:	10c5c83a 	sub	r2,r2,r3
    de28:	f800283a 	ret

0000de2c <__register_exitproc>:
    de2c:	defffa04 	addi	sp,sp,-24
    de30:	dc000315 	stw	r16,12(sp)
    de34:	04000074 	movhi	r16,1
    de38:	8400d404 	addi	r16,r16,848
    de3c:	80c00017 	ldw	r3,0(r16)
    de40:	dc400415 	stw	r17,16(sp)
    de44:	dfc00515 	stw	ra,20(sp)
    de48:	18805217 	ldw	r2,328(r3)
    de4c:	2023883a 	mov	r17,r4
    de50:	10003726 	beq	r2,zero,df30 <__register_exitproc+0x104>
    de54:	10c00117 	ldw	r3,4(r2)
    de58:	010007c4 	movi	r4,31
    de5c:	20c00e16 	blt	r4,r3,de98 <__register_exitproc+0x6c>
    de60:	1a000044 	addi	r8,r3,1
    de64:	8800221e 	bne	r17,zero,def0 <__register_exitproc+0xc4>
    de68:	18c00084 	addi	r3,r3,2
    de6c:	18c7883a 	add	r3,r3,r3
    de70:	18c7883a 	add	r3,r3,r3
    de74:	12000115 	stw	r8,4(r2)
    de78:	10c7883a 	add	r3,r2,r3
    de7c:	19400015 	stw	r5,0(r3)
    de80:	0005883a 	mov	r2,zero
    de84:	dfc00517 	ldw	ra,20(sp)
    de88:	dc400417 	ldw	r17,16(sp)
    de8c:	dc000317 	ldw	r16,12(sp)
    de90:	dec00604 	addi	sp,sp,24
    de94:	f800283a 	ret
    de98:	00800034 	movhi	r2,0
    de9c:	10800004 	addi	r2,r2,0
    dea0:	10002626 	beq	r2,zero,df3c <__register_exitproc+0x110>
    dea4:	01006404 	movi	r4,400
    dea8:	d9400015 	stw	r5,0(sp)
    deac:	d9800115 	stw	r6,4(sp)
    deb0:	d9c00215 	stw	r7,8(sp)
    deb4:	00000000 	call	0 <__alt_mem_sdram>
    deb8:	d9400017 	ldw	r5,0(sp)
    debc:	d9800117 	ldw	r6,4(sp)
    dec0:	d9c00217 	ldw	r7,8(sp)
    dec4:	10001d26 	beq	r2,zero,df3c <__register_exitproc+0x110>
    dec8:	81000017 	ldw	r4,0(r16)
    decc:	10000115 	stw	zero,4(r2)
    ded0:	02000044 	movi	r8,1
    ded4:	22405217 	ldw	r9,328(r4)
    ded8:	0007883a 	mov	r3,zero
    dedc:	12400015 	stw	r9,0(r2)
    dee0:	20805215 	stw	r2,328(r4)
    dee4:	10006215 	stw	zero,392(r2)
    dee8:	10006315 	stw	zero,396(r2)
    deec:	883fde26 	beq	r17,zero,de68 <__alt_mem_onchip_memory2_0+0xf700de68>
    def0:	18c9883a 	add	r4,r3,r3
    def4:	2109883a 	add	r4,r4,r4
    def8:	1109883a 	add	r4,r2,r4
    defc:	21802215 	stw	r6,136(r4)
    df00:	01800044 	movi	r6,1
    df04:	12406217 	ldw	r9,392(r2)
    df08:	30cc983a 	sll	r6,r6,r3
    df0c:	4992b03a 	or	r9,r9,r6
    df10:	12406215 	stw	r9,392(r2)
    df14:	21c04215 	stw	r7,264(r4)
    df18:	01000084 	movi	r4,2
    df1c:	893fd21e 	bne	r17,r4,de68 <__alt_mem_onchip_memory2_0+0xf700de68>
    df20:	11006317 	ldw	r4,396(r2)
    df24:	218cb03a 	or	r6,r4,r6
    df28:	11806315 	stw	r6,396(r2)
    df2c:	003fce06 	br	de68 <__alt_mem_onchip_memory2_0+0xf700de68>
    df30:	18805304 	addi	r2,r3,332
    df34:	18805215 	stw	r2,328(r3)
    df38:	003fc606 	br	de54 <__alt_mem_onchip_memory2_0+0xf700de54>
    df3c:	00bfffc4 	movi	r2,-1
    df40:	003fd006 	br	de84 <__alt_mem_onchip_memory2_0+0xf700de84>

0000df44 <__call_exitprocs>:
    df44:	defff504 	addi	sp,sp,-44
    df48:	df000915 	stw	fp,36(sp)
    df4c:	dd400615 	stw	r21,24(sp)
    df50:	dc800315 	stw	r18,12(sp)
    df54:	dfc00a15 	stw	ra,40(sp)
    df58:	ddc00815 	stw	r23,32(sp)
    df5c:	dd800715 	stw	r22,28(sp)
    df60:	dd000515 	stw	r20,20(sp)
    df64:	dcc00415 	stw	r19,16(sp)
    df68:	dc400215 	stw	r17,8(sp)
    df6c:	dc000115 	stw	r16,4(sp)
    df70:	d9000015 	stw	r4,0(sp)
    df74:	2839883a 	mov	fp,r5
    df78:	04800044 	movi	r18,1
    df7c:	057fffc4 	movi	r21,-1
    df80:	00800074 	movhi	r2,1
    df84:	1080d404 	addi	r2,r2,848
    df88:	12000017 	ldw	r8,0(r2)
    df8c:	45005217 	ldw	r20,328(r8)
    df90:	44c05204 	addi	r19,r8,328
    df94:	a0001c26 	beq	r20,zero,e008 <__call_exitprocs+0xc4>
    df98:	a0800117 	ldw	r2,4(r20)
    df9c:	15ffffc4 	addi	r23,r2,-1
    dfa0:	b8000d16 	blt	r23,zero,dfd8 <__call_exitprocs+0x94>
    dfa4:	14000044 	addi	r16,r2,1
    dfa8:	8421883a 	add	r16,r16,r16
    dfac:	8421883a 	add	r16,r16,r16
    dfb0:	84402004 	addi	r17,r16,128
    dfb4:	a463883a 	add	r17,r20,r17
    dfb8:	a421883a 	add	r16,r20,r16
    dfbc:	e0001e26 	beq	fp,zero,e038 <__call_exitprocs+0xf4>
    dfc0:	80804017 	ldw	r2,256(r16)
    dfc4:	e0801c26 	beq	fp,r2,e038 <__call_exitprocs+0xf4>
    dfc8:	bdffffc4 	addi	r23,r23,-1
    dfcc:	843fff04 	addi	r16,r16,-4
    dfd0:	8c7fff04 	addi	r17,r17,-4
    dfd4:	bd7ff91e 	bne	r23,r21,dfbc <__alt_mem_onchip_memory2_0+0xf700dfbc>
    dfd8:	00800034 	movhi	r2,0
    dfdc:	10800004 	addi	r2,r2,0
    dfe0:	10000926 	beq	r2,zero,e008 <__call_exitprocs+0xc4>
    dfe4:	a0800117 	ldw	r2,4(r20)
    dfe8:	1000301e 	bne	r2,zero,e0ac <__call_exitprocs+0x168>
    dfec:	a0800017 	ldw	r2,0(r20)
    dff0:	10003226 	beq	r2,zero,e0bc <__call_exitprocs+0x178>
    dff4:	a009883a 	mov	r4,r20
    dff8:	98800015 	stw	r2,0(r19)
    dffc:	00000000 	call	0 <__alt_mem_sdram>
    e000:	9d000017 	ldw	r20,0(r19)
    e004:	a03fe41e 	bne	r20,zero,df98 <__alt_mem_onchip_memory2_0+0xf700df98>
    e008:	dfc00a17 	ldw	ra,40(sp)
    e00c:	df000917 	ldw	fp,36(sp)
    e010:	ddc00817 	ldw	r23,32(sp)
    e014:	dd800717 	ldw	r22,28(sp)
    e018:	dd400617 	ldw	r21,24(sp)
    e01c:	dd000517 	ldw	r20,20(sp)
    e020:	dcc00417 	ldw	r19,16(sp)
    e024:	dc800317 	ldw	r18,12(sp)
    e028:	dc400217 	ldw	r17,8(sp)
    e02c:	dc000117 	ldw	r16,4(sp)
    e030:	dec00b04 	addi	sp,sp,44
    e034:	f800283a 	ret
    e038:	a0800117 	ldw	r2,4(r20)
    e03c:	80c00017 	ldw	r3,0(r16)
    e040:	10bfffc4 	addi	r2,r2,-1
    e044:	15c01426 	beq	r2,r23,e098 <__call_exitprocs+0x154>
    e048:	80000015 	stw	zero,0(r16)
    e04c:	183fde26 	beq	r3,zero,dfc8 <__alt_mem_onchip_memory2_0+0xf700dfc8>
    e050:	95c8983a 	sll	r4,r18,r23
    e054:	a0806217 	ldw	r2,392(r20)
    e058:	a5800117 	ldw	r22,4(r20)
    e05c:	2084703a 	and	r2,r4,r2
    e060:	10000b26 	beq	r2,zero,e090 <__call_exitprocs+0x14c>
    e064:	a0806317 	ldw	r2,396(r20)
    e068:	2088703a 	and	r4,r4,r2
    e06c:	20000c1e 	bne	r4,zero,e0a0 <__call_exitprocs+0x15c>
    e070:	89400017 	ldw	r5,0(r17)
    e074:	d9000017 	ldw	r4,0(sp)
    e078:	183ee83a 	callr	r3
    e07c:	a0800117 	ldw	r2,4(r20)
    e080:	15bfbf1e 	bne	r2,r22,df80 <__alt_mem_onchip_memory2_0+0xf700df80>
    e084:	98800017 	ldw	r2,0(r19)
    e088:	153fcf26 	beq	r2,r20,dfc8 <__alt_mem_onchip_memory2_0+0xf700dfc8>
    e08c:	003fbc06 	br	df80 <__alt_mem_onchip_memory2_0+0xf700df80>
    e090:	183ee83a 	callr	r3
    e094:	003ff906 	br	e07c <__alt_mem_onchip_memory2_0+0xf700e07c>
    e098:	a5c00115 	stw	r23,4(r20)
    e09c:	003feb06 	br	e04c <__alt_mem_onchip_memory2_0+0xf700e04c>
    e0a0:	89000017 	ldw	r4,0(r17)
    e0a4:	183ee83a 	callr	r3
    e0a8:	003ff406 	br	e07c <__alt_mem_onchip_memory2_0+0xf700e07c>
    e0ac:	a0800017 	ldw	r2,0(r20)
    e0b0:	a027883a 	mov	r19,r20
    e0b4:	1029883a 	mov	r20,r2
    e0b8:	003fb606 	br	df94 <__alt_mem_onchip_memory2_0+0xf700df94>
    e0bc:	0005883a 	mov	r2,zero
    e0c0:	003ffb06 	br	e0b0 <__alt_mem_onchip_memory2_0+0xf700e0b0>

0000e0c4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    e0c4:	defffd04 	addi	sp,sp,-12
    e0c8:	df000215 	stw	fp,8(sp)
    e0cc:	df000204 	addi	fp,sp,8
    e0d0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    e0d4:	0001883a 	nop
    e0d8:	e0bfff17 	ldw	r2,-4(fp)
    e0dc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    e0e0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    e0e4:	10000226 	beq	r2,zero,e0f0 <_exit+0x2c>
    ALT_SIM_FAIL();
    e0e8:	002af070 	cmpltui	zero,zero,43969
    e0ec:	00000106 	br	e0f4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    e0f0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    e0f4:	003fff06 	br	e0f4 <__alt_mem_onchip_memory2_0+0xf700e0f4>
